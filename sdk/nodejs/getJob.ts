// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # qovery.Job (Data Source)
 *
 * Provides a Qovery job resource. This can be used to create and manage Qovery job registry.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@pulumi/qovery";
 *
 * const myJob = qovery.getJob({
 *     id: "<job_id>",
 * });
 * ```
 */
export function getJob(args: GetJobArgs, opts?: pulumi.InvokeOptions): Promise<GetJobResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("qovery:index/getJob:getJob", {
        "advancedSettingsJson": args.advancedSettingsJson,
        "annotationsGroupIds": args.annotationsGroupIds,
        "autoDeploy": args.autoDeploy,
        "autoPreview": args.autoPreview,
        "cpu": args.cpu,
        "deploymentRestrictions": args.deploymentRestrictions,
        "deploymentStageId": args.deploymentStageId,
        "environmentVariableAliases": args.environmentVariableAliases,
        "environmentVariableOverrides": args.environmentVariableOverrides,
        "environmentVariables": args.environmentVariables,
        "healthchecks": args.healthchecks,
        "iconUri": args.iconUri,
        "id": args.id,
        "labelsGroupIds": args.labelsGroupIds,
        "maxDurationSeconds": args.maxDurationSeconds,
        "maxNbRestart": args.maxNbRestart,
        "memory": args.memory,
        "port": args.port,
        "secretAliases": args.secretAliases,
        "secretOverrides": args.secretOverrides,
        "secrets": args.secrets,
        "source": args.source,
    }, opts);
}

/**
 * A collection of arguments for invoking getJob.
 */
export interface GetJobArgs {
    advancedSettingsJson?: string;
    annotationsGroupIds?: string[];
    autoDeploy?: boolean;
    autoPreview?: boolean;
    cpu?: number;
    deploymentRestrictions?: inputs.GetJobDeploymentRestriction[];
    deploymentStageId?: string;
    environmentVariableAliases?: inputs.GetJobEnvironmentVariableAlias[];
    environmentVariableOverrides?: inputs.GetJobEnvironmentVariableOverride[];
    environmentVariables?: inputs.GetJobEnvironmentVariable[];
    healthchecks?: inputs.GetJobHealthchecks;
    iconUri?: string;
    id: string;
    labelsGroupIds?: string[];
    maxDurationSeconds?: number;
    maxNbRestart?: number;
    memory?: number;
    port?: number;
    secretAliases?: inputs.GetJobSecretAlias[];
    secretOverrides?: inputs.GetJobSecretOverride[];
    secrets?: inputs.GetJobSecret[];
    source?: inputs.GetJobSource;
}

/**
 * A collection of values returned by getJob.
 */
export interface GetJobResult {
    readonly advancedSettingsJson: string;
    readonly annotationsGroupIds?: string[];
    readonly autoDeploy: boolean;
    readonly autoPreview: boolean;
    readonly builtInEnvironmentVariables: outputs.GetJobBuiltInEnvironmentVariable[];
    readonly cpu?: number;
    readonly deploymentRestrictions?: outputs.GetJobDeploymentRestriction[];
    readonly deploymentStageId: string;
    readonly environmentId: string;
    readonly environmentVariableAliases: outputs.GetJobEnvironmentVariableAlias[];
    readonly environmentVariableOverrides?: outputs.GetJobEnvironmentVariableOverride[];
    readonly environmentVariables?: outputs.GetJobEnvironmentVariable[];
    readonly externalHost: string;
    readonly healthchecks?: outputs.GetJobHealthchecks;
    readonly iconUri: string;
    readonly id: string;
    readonly internalHost: string;
    readonly labelsGroupIds?: string[];
    readonly maxDurationSeconds: number;
    readonly maxNbRestart: number;
    readonly memory?: number;
    readonly name: string;
    readonly port: number;
    readonly schedule: outputs.GetJobSchedule;
    readonly secretAliases?: outputs.GetJobSecretAlias[];
    readonly secretOverrides?: outputs.GetJobSecretOverride[];
    readonly secrets?: outputs.GetJobSecret[];
    readonly source: outputs.GetJobSource;
}
/**
 * ## # qovery.Job (Data Source)
 *
 * Provides a Qovery job resource. This can be used to create and manage Qovery job registry.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@pulumi/qovery";
 *
 * const myJob = qovery.getJob({
 *     id: "<job_id>",
 * });
 * ```
 */
export function getJobOutput(args: GetJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJobResult> {
    return pulumi.output(args).apply((a: any) => getJob(a, opts))
}

/**
 * A collection of arguments for invoking getJob.
 */
export interface GetJobOutputArgs {
    advancedSettingsJson?: pulumi.Input<string>;
    annotationsGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    autoDeploy?: pulumi.Input<boolean>;
    autoPreview?: pulumi.Input<boolean>;
    cpu?: pulumi.Input<number>;
    deploymentRestrictions?: pulumi.Input<pulumi.Input<inputs.GetJobDeploymentRestrictionArgs>[]>;
    deploymentStageId?: pulumi.Input<string>;
    environmentVariableAliases?: pulumi.Input<pulumi.Input<inputs.GetJobEnvironmentVariableAliasArgs>[]>;
    environmentVariableOverrides?: pulumi.Input<pulumi.Input<inputs.GetJobEnvironmentVariableOverrideArgs>[]>;
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.GetJobEnvironmentVariableArgs>[]>;
    healthchecks?: pulumi.Input<inputs.GetJobHealthchecksArgs>;
    iconUri?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    labelsGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    maxDurationSeconds?: pulumi.Input<number>;
    maxNbRestart?: pulumi.Input<number>;
    memory?: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    secretAliases?: pulumi.Input<pulumi.Input<inputs.GetJobSecretAliasArgs>[]>;
    secretOverrides?: pulumi.Input<pulumi.Input<inputs.GetJobSecretOverrideArgs>[]>;
    secrets?: pulumi.Input<pulumi.Input<inputs.GetJobSecretArgs>[]>;
    source?: pulumi.Input<inputs.GetJobSourceArgs>;
}
