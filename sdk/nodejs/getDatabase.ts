// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # qovery.Database (Data Source)
 *
 * Provides a Qovery database resource. This can be used to create and manage Qovery databases.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@pulumi/qovery";
 *
 * const myDatabase = qovery.getDatabase({
 *     id: "<database_id>",
 * });
 * ```
 */
export function getDatabase(args: GetDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("qovery:index/getDatabase:getDatabase", {
        "accessibility": args.accessibility,
        "annotationsGroupIds": args.annotationsGroupIds,
        "cpu": args.cpu,
        "deploymentStageId": args.deploymentStageId,
        "id": args.id,
        "instanceType": args.instanceType,
        "labelsGroupIds": args.labelsGroupIds,
        "memory": args.memory,
        "storage": args.storage,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabase.
 */
export interface GetDatabaseArgs {
    accessibility?: string;
    annotationsGroupIds?: string[];
    cpu?: number;
    deploymentStageId?: string;
    id: string;
    instanceType?: string;
    labelsGroupIds?: string[];
    memory?: number;
    storage?: number;
}

/**
 * A collection of values returned by getDatabase.
 */
export interface GetDatabaseResult {
    readonly accessibility?: string;
    readonly annotationsGroupIds?: string[];
    readonly cpu?: number;
    readonly deploymentStageId: string;
    readonly environmentId: string;
    readonly externalHost: string;
    readonly id: string;
    readonly instanceType: string;
    readonly internalHost: string;
    readonly labelsGroupIds?: string[];
    readonly login: string;
    readonly memory?: number;
    readonly mode: string;
    readonly name: string;
    readonly password: string;
    readonly port: number;
    readonly storage?: number;
    readonly type: string;
    readonly version: string;
}
/**
 * ## # qovery.Database (Data Source)
 *
 * Provides a Qovery database resource. This can be used to create and manage Qovery databases.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@pulumi/qovery";
 *
 * const myDatabase = qovery.getDatabase({
 *     id: "<database_id>",
 * });
 * ```
 */
export function getDatabaseOutput(args: GetDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDatabase.
 */
export interface GetDatabaseOutputArgs {
    accessibility?: pulumi.Input<string>;
    annotationsGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    cpu?: pulumi.Input<number>;
    deploymentStageId?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    labelsGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    memory?: pulumi.Input<number>;
    storage?: pulumi.Input<number>;
}
