// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ```sh
 *  $ pulumi import qovery:index/job:Job my_job "<job_id>"
 * ```
 */
export class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobState, opts?: pulumi.CustomResourceOptions): Job {
        return new Job(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'qovery:index/job:Job';

    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Job {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }

    /**
     * Advanced settings.
     */
    public readonly advancedSettingsJson!: pulumi.Output<string>;
    /**
     * Specify if the job will be automatically updated after receiving a new image tag.
     */
    public readonly autoDeploy!: pulumi.Output<boolean>;
    /**
     * Specify if the environment preview option is activated or not for this job.
     */
    public readonly autoPreview!: pulumi.Output<boolean>;
    /**
     * List of built-in environment variables linked to this job.
     */
    public /*out*/ readonly builtInEnvironmentVariables!: pulumi.Output<outputs.JobBuiltInEnvironmentVariable[]>;
    /**
     * CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
     */
    public readonly cpu!: pulumi.Output<number>;
    /**
     * Id of the deployment stage.
     */
    public readonly deploymentStageId!: pulumi.Output<string>;
    /**
     * Id of the environment.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * List of environment variable aliases linked to this job.
     */
    public readonly environmentVariableAliases!: pulumi.Output<outputs.JobEnvironmentVariableAlias[] | undefined>;
    /**
     * List of environment variable overrides linked to this job.
     */
    public readonly environmentVariableOverrides!: pulumi.Output<outputs.JobEnvironmentVariableOverride[] | undefined>;
    /**
     * List of environment variables linked to this job.
     */
    public readonly environmentVariables!: pulumi.Output<outputs.JobEnvironmentVariable[] | undefined>;
    /**
     * The job external FQDN host [NOTE: only if your job is using a publicly accessible port].
     */
    public /*out*/ readonly externalHost!: pulumi.Output<string>;
    /**
     * Configuration for the healthchecks that are going to be executed against your service
     */
    public readonly healthchecks!: pulumi.Output<outputs.JobHealthchecks>;
    /**
     * The job internal host.
     */
    public /*out*/ readonly internalHost!: pulumi.Output<string>;
    /**
     * Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
     */
    public readonly maxDurationSeconds!: pulumi.Output<number>;
    /**
     * Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
     */
    public readonly maxNbRestart!: pulumi.Output<number>;
    /**
     * RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
     */
    public readonly memory!: pulumi.Output<number>;
    /**
     * Name of the job.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Job's probes port. - Must be: `>= 1` and `<= 65535`.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * Job's schedule.
     */
    public readonly schedule!: pulumi.Output<outputs.JobSchedule>;
    /**
     * List of secret aliases linked to this job.
     */
    public readonly secretAliases!: pulumi.Output<outputs.JobSecretAlias[] | undefined>;
    /**
     * List of secret overrides linked to this job.
     */
    public readonly secretOverrides!: pulumi.Output<outputs.JobSecretOverride[] | undefined>;
    /**
     * List of secrets linked to this job.
     */
    public readonly secrets!: pulumi.Output<outputs.JobSecret[] | undefined>;
    /**
     * Job's source.
     */
    public readonly source!: pulumi.Output<outputs.JobSource | undefined>;

    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobArgs | JobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JobState | undefined;
            resourceInputs["advancedSettingsJson"] = state ? state.advancedSettingsJson : undefined;
            resourceInputs["autoDeploy"] = state ? state.autoDeploy : undefined;
            resourceInputs["autoPreview"] = state ? state.autoPreview : undefined;
            resourceInputs["builtInEnvironmentVariables"] = state ? state.builtInEnvironmentVariables : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["deploymentStageId"] = state ? state.deploymentStageId : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["environmentVariableAliases"] = state ? state.environmentVariableAliases : undefined;
            resourceInputs["environmentVariableOverrides"] = state ? state.environmentVariableOverrides : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["externalHost"] = state ? state.externalHost : undefined;
            resourceInputs["healthchecks"] = state ? state.healthchecks : undefined;
            resourceInputs["internalHost"] = state ? state.internalHost : undefined;
            resourceInputs["maxDurationSeconds"] = state ? state.maxDurationSeconds : undefined;
            resourceInputs["maxNbRestart"] = state ? state.maxNbRestart : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["secretAliases"] = state ? state.secretAliases : undefined;
            resourceInputs["secretOverrides"] = state ? state.secretOverrides : undefined;
            resourceInputs["secrets"] = state ? state.secrets : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
        } else {
            const args = argsOrState as JobArgs | undefined;
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.healthchecks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'healthchecks'");
            }
            if ((!args || args.schedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            resourceInputs["advancedSettingsJson"] = args ? args.advancedSettingsJson : undefined;
            resourceInputs["autoDeploy"] = args ? args.autoDeploy : undefined;
            resourceInputs["autoPreview"] = args ? args.autoPreview : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["deploymentStageId"] = args ? args.deploymentStageId : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["environmentVariableAliases"] = args ? args.environmentVariableAliases : undefined;
            resourceInputs["environmentVariableOverrides"] = args ? args.environmentVariableOverrides : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["healthchecks"] = args ? args.healthchecks : undefined;
            resourceInputs["maxDurationSeconds"] = args ? args.maxDurationSeconds : undefined;
            resourceInputs["maxNbRestart"] = args ? args.maxNbRestart : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["secretAliases"] = args ? args.secretAliases : undefined;
            resourceInputs["secretOverrides"] = args ? args.secretOverrides : undefined;
            resourceInputs["secrets"] = args ? args.secrets : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["builtInEnvironmentVariables"] = undefined /*out*/;
            resourceInputs["externalHost"] = undefined /*out*/;
            resourceInputs["internalHost"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Job.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Job resources.
 */
export interface JobState {
    /**
     * Advanced settings.
     */
    advancedSettingsJson?: pulumi.Input<string>;
    /**
     * Specify if the job will be automatically updated after receiving a new image tag.
     */
    autoDeploy?: pulumi.Input<boolean>;
    /**
     * Specify if the environment preview option is activated or not for this job.
     */
    autoPreview?: pulumi.Input<boolean>;
    /**
     * List of built-in environment variables linked to this job.
     */
    builtInEnvironmentVariables?: pulumi.Input<pulumi.Input<inputs.JobBuiltInEnvironmentVariable>[]>;
    /**
     * CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Id of the deployment stage.
     */
    deploymentStageId?: pulumi.Input<string>;
    /**
     * Id of the environment.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * List of environment variable aliases linked to this job.
     */
    environmentVariableAliases?: pulumi.Input<pulumi.Input<inputs.JobEnvironmentVariableAlias>[]>;
    /**
     * List of environment variable overrides linked to this job.
     */
    environmentVariableOverrides?: pulumi.Input<pulumi.Input<inputs.JobEnvironmentVariableOverride>[]>;
    /**
     * List of environment variables linked to this job.
     */
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.JobEnvironmentVariable>[]>;
    /**
     * The job external FQDN host [NOTE: only if your job is using a publicly accessible port].
     */
    externalHost?: pulumi.Input<string>;
    /**
     * Configuration for the healthchecks that are going to be executed against your service
     */
    healthchecks?: pulumi.Input<inputs.JobHealthchecks>;
    /**
     * The job internal host.
     */
    internalHost?: pulumi.Input<string>;
    /**
     * Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
     */
    maxDurationSeconds?: pulumi.Input<number>;
    /**
     * Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
     */
    maxNbRestart?: pulumi.Input<number>;
    /**
     * RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
     */
    memory?: pulumi.Input<number>;
    /**
     * Name of the job.
     */
    name?: pulumi.Input<string>;
    /**
     * Job's probes port. - Must be: `>= 1` and `<= 65535`.
     */
    port?: pulumi.Input<number>;
    /**
     * Job's schedule.
     */
    schedule?: pulumi.Input<inputs.JobSchedule>;
    /**
     * List of secret aliases linked to this job.
     */
    secretAliases?: pulumi.Input<pulumi.Input<inputs.JobSecretAlias>[]>;
    /**
     * List of secret overrides linked to this job.
     */
    secretOverrides?: pulumi.Input<pulumi.Input<inputs.JobSecretOverride>[]>;
    /**
     * List of secrets linked to this job.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.JobSecret>[]>;
    /**
     * Job's source.
     */
    source?: pulumi.Input<inputs.JobSource>;
}

/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    /**
     * Advanced settings.
     */
    advancedSettingsJson?: pulumi.Input<string>;
    /**
     * Specify if the job will be automatically updated after receiving a new image tag.
     */
    autoDeploy?: pulumi.Input<boolean>;
    /**
     * Specify if the environment preview option is activated or not for this job.
     */
    autoPreview?: pulumi.Input<boolean>;
    /**
     * CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Id of the deployment stage.
     */
    deploymentStageId?: pulumi.Input<string>;
    /**
     * Id of the environment.
     */
    environmentId: pulumi.Input<string>;
    /**
     * List of environment variable aliases linked to this job.
     */
    environmentVariableAliases?: pulumi.Input<pulumi.Input<inputs.JobEnvironmentVariableAlias>[]>;
    /**
     * List of environment variable overrides linked to this job.
     */
    environmentVariableOverrides?: pulumi.Input<pulumi.Input<inputs.JobEnvironmentVariableOverride>[]>;
    /**
     * List of environment variables linked to this job.
     */
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.JobEnvironmentVariable>[]>;
    /**
     * Configuration for the healthchecks that are going to be executed against your service
     */
    healthchecks: pulumi.Input<inputs.JobHealthchecks>;
    /**
     * Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
     */
    maxDurationSeconds?: pulumi.Input<number>;
    /**
     * Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
     */
    maxNbRestart?: pulumi.Input<number>;
    /**
     * RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
     */
    memory?: pulumi.Input<number>;
    /**
     * Name of the job.
     */
    name?: pulumi.Input<string>;
    /**
     * Job's probes port. - Must be: `>= 1` and `<= 65535`.
     */
    port?: pulumi.Input<number>;
    /**
     * Job's schedule.
     */
    schedule: pulumi.Input<inputs.JobSchedule>;
    /**
     * List of secret aliases linked to this job.
     */
    secretAliases?: pulumi.Input<pulumi.Input<inputs.JobSecretAlias>[]>;
    /**
     * List of secret overrides linked to this job.
     */
    secretOverrides?: pulumi.Input<pulumi.Input<inputs.JobSecretOverride>[]>;
    /**
     * List of secrets linked to this job.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.JobSecret>[]>;
    /**
     * Job's source.
     */
    source?: pulumi.Input<inputs.JobSource>;
}
