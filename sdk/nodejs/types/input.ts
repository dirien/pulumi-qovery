// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApplicationBuiltInEnvironmentVariable {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApplicationCustomDomain {
    domain: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    validationDomain?: pulumi.Input<string>;
}

export interface ApplicationEnvironmentVariable {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApplicationEnvironmentVariableAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApplicationEnvironmentVariableOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApplicationGitRepository {
    branch?: pulumi.Input<string>;
    gitTokenId?: pulumi.Input<string>;
    rootPath?: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface ApplicationHealthchecks {
    livenessProbe?: pulumi.Input<inputs.ApplicationHealthchecksLivenessProbe>;
    readinessProbe?: pulumi.Input<inputs.ApplicationHealthchecksReadinessProbe>;
}

export interface ApplicationHealthchecksLivenessProbe {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.ApplicationHealthchecksLivenessProbeType>;
}

export interface ApplicationHealthchecksLivenessProbeType {
    exec?: pulumi.Input<inputs.ApplicationHealthchecksLivenessProbeTypeExec>;
    grpc?: pulumi.Input<inputs.ApplicationHealthchecksLivenessProbeTypeGrpc>;
    http?: pulumi.Input<inputs.ApplicationHealthchecksLivenessProbeTypeHttp>;
    tcp?: pulumi.Input<inputs.ApplicationHealthchecksLivenessProbeTypeTcp>;
}

export interface ApplicationHealthchecksLivenessProbeTypeExec {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationHealthchecksLivenessProbeTypeGrpc {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface ApplicationHealthchecksLivenessProbeTypeHttp {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface ApplicationHealthchecksLivenessProbeTypeTcp {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface ApplicationHealthchecksReadinessProbe {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.ApplicationHealthchecksReadinessProbeType>;
}

export interface ApplicationHealthchecksReadinessProbeType {
    exec?: pulumi.Input<inputs.ApplicationHealthchecksReadinessProbeTypeExec>;
    grpc?: pulumi.Input<inputs.ApplicationHealthchecksReadinessProbeTypeGrpc>;
    http?: pulumi.Input<inputs.ApplicationHealthchecksReadinessProbeTypeHttp>;
    tcp?: pulumi.Input<inputs.ApplicationHealthchecksReadinessProbeTypeTcp>;
}

export interface ApplicationHealthchecksReadinessProbeTypeExec {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationHealthchecksReadinessProbeTypeGrpc {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface ApplicationHealthchecksReadinessProbeTypeHttp {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface ApplicationHealthchecksReadinessProbeTypeTcp {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface ApplicationPort {
    externalPort?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    internalPort: pulumi.Input<number>;
    isDefault: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    publiclyAccessible: pulumi.Input<boolean>;
}

export interface ApplicationSecret {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApplicationSecretAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApplicationSecretOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApplicationStorage {
    id?: pulumi.Input<string>;
    mountPoint: pulumi.Input<string>;
    size: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface ClusterFeatures {
    staticIp?: pulumi.Input<boolean>;
    vpcSubnet?: pulumi.Input<string>;
}

export interface ClusterRoutingTable {
    description: pulumi.Input<string>;
    destination: pulumi.Input<string>;
    target: pulumi.Input<string>;
}

export interface ContainerBuiltInEnvironmentVariable {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ContainerCustomDomain {
    domain: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    validationDomain?: pulumi.Input<string>;
}

export interface ContainerEnvironmentVariable {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ContainerEnvironmentVariableAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ContainerEnvironmentVariableOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ContainerHealthchecks {
    livenessProbe?: pulumi.Input<inputs.ContainerHealthchecksLivenessProbe>;
    readinessProbe?: pulumi.Input<inputs.ContainerHealthchecksReadinessProbe>;
}

export interface ContainerHealthchecksLivenessProbe {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.ContainerHealthchecksLivenessProbeType>;
}

export interface ContainerHealthchecksLivenessProbeType {
    exec?: pulumi.Input<inputs.ContainerHealthchecksLivenessProbeTypeExec>;
    grpc?: pulumi.Input<inputs.ContainerHealthchecksLivenessProbeTypeGrpc>;
    http?: pulumi.Input<inputs.ContainerHealthchecksLivenessProbeTypeHttp>;
    tcp?: pulumi.Input<inputs.ContainerHealthchecksLivenessProbeTypeTcp>;
}

export interface ContainerHealthchecksLivenessProbeTypeExec {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ContainerHealthchecksLivenessProbeTypeGrpc {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface ContainerHealthchecksLivenessProbeTypeHttp {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface ContainerHealthchecksLivenessProbeTypeTcp {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface ContainerHealthchecksReadinessProbe {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.ContainerHealthchecksReadinessProbeType>;
}

export interface ContainerHealthchecksReadinessProbeType {
    exec?: pulumi.Input<inputs.ContainerHealthchecksReadinessProbeTypeExec>;
    grpc?: pulumi.Input<inputs.ContainerHealthchecksReadinessProbeTypeGrpc>;
    http?: pulumi.Input<inputs.ContainerHealthchecksReadinessProbeTypeHttp>;
    tcp?: pulumi.Input<inputs.ContainerHealthchecksReadinessProbeTypeTcp>;
}

export interface ContainerHealthchecksReadinessProbeTypeExec {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ContainerHealthchecksReadinessProbeTypeGrpc {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface ContainerHealthchecksReadinessProbeTypeHttp {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface ContainerHealthchecksReadinessProbeTypeTcp {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface ContainerPort {
    externalPort?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    internalPort: pulumi.Input<number>;
    isDefault: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    publiclyAccessible: pulumi.Input<boolean>;
}

export interface ContainerRegistryConfig {
    accessKeyId?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    scalewayAccessKey?: pulumi.Input<string>;
    scalewaySecretKey?: pulumi.Input<string>;
    secretAccessKey?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface ContainerSecret {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ContainerSecretAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ContainerSecretOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ContainerStorage {
    id?: pulumi.Input<string>;
    mountPoint: pulumi.Input<string>;
    size: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface EnvironmentBuiltInEnvironmentVariable {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface EnvironmentEnvironmentVariable {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EnvironmentEnvironmentVariableAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EnvironmentEnvironmentVariableOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EnvironmentSecret {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EnvironmentSecretAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EnvironmentSecretOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetApplicationCustomDomain {
    domain?: string;
    id?: string;
    status?: string;
    validationDomain?: string;
}

export interface GetApplicationCustomDomainArgs {
    domain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    validationDomain?: pulumi.Input<string>;
}

export interface GetApplicationEnvironmentVariable {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetApplicationEnvironmentVariableArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApplicationEnvironmentVariableAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetApplicationEnvironmentVariableAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApplicationEnvironmentVariableOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetApplicationEnvironmentVariableOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApplicationHealthchecks {
    livenessProbe?: inputs.GetApplicationHealthchecksLivenessProbe;
    readinessProbe?: inputs.GetApplicationHealthchecksReadinessProbe;
}

export interface GetApplicationHealthchecksArgs {
    livenessProbe?: pulumi.Input<inputs.GetApplicationHealthchecksLivenessProbeArgs>;
    readinessProbe?: pulumi.Input<inputs.GetApplicationHealthchecksReadinessProbeArgs>;
}

export interface GetApplicationHealthchecksLivenessProbe {
    failureThreshold: number;
    initialDelaySeconds: number;
    periodSeconds: number;
    successThreshold: number;
    timeoutSeconds: number;
    type: inputs.GetApplicationHealthchecksLivenessProbeType;
}

export interface GetApplicationHealthchecksLivenessProbeArgs {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.GetApplicationHealthchecksLivenessProbeTypeArgs>;
}

export interface GetApplicationHealthchecksLivenessProbeType {
    exec?: inputs.GetApplicationHealthchecksLivenessProbeTypeExec;
    grpc?: inputs.GetApplicationHealthchecksLivenessProbeTypeGrpc;
    http?: inputs.GetApplicationHealthchecksLivenessProbeTypeHttp;
    tcp?: inputs.GetApplicationHealthchecksLivenessProbeTypeTcp;
}

export interface GetApplicationHealthchecksLivenessProbeTypeArgs {
    exec?: pulumi.Input<inputs.GetApplicationHealthchecksLivenessProbeTypeExecArgs>;
    grpc?: pulumi.Input<inputs.GetApplicationHealthchecksLivenessProbeTypeGrpcArgs>;
    http?: pulumi.Input<inputs.GetApplicationHealthchecksLivenessProbeTypeHttpArgs>;
    tcp?: pulumi.Input<inputs.GetApplicationHealthchecksLivenessProbeTypeTcpArgs>;
}

export interface GetApplicationHealthchecksLivenessProbeTypeExec {
    commands: string[];
}

export interface GetApplicationHealthchecksLivenessProbeTypeExecArgs {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApplicationHealthchecksLivenessProbeTypeGrpc {
    port: number;
    service?: string;
}

export interface GetApplicationHealthchecksLivenessProbeTypeGrpcArgs {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface GetApplicationHealthchecksLivenessProbeTypeHttp {
    path?: string;
    port: number;
    scheme?: string;
}

export interface GetApplicationHealthchecksLivenessProbeTypeHttpArgs {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface GetApplicationHealthchecksLivenessProbeTypeTcp {
    host?: string;
    port: number;
}

export interface GetApplicationHealthchecksLivenessProbeTypeTcpArgs {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface GetApplicationHealthchecksReadinessProbe {
    failureThreshold: number;
    initialDelaySeconds: number;
    periodSeconds: number;
    successThreshold: number;
    timeoutSeconds: number;
    type: inputs.GetApplicationHealthchecksReadinessProbeType;
}

export interface GetApplicationHealthchecksReadinessProbeArgs {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.GetApplicationHealthchecksReadinessProbeTypeArgs>;
}

export interface GetApplicationHealthchecksReadinessProbeType {
    exec?: inputs.GetApplicationHealthchecksReadinessProbeTypeExec;
    grpc?: inputs.GetApplicationHealthchecksReadinessProbeTypeGrpc;
    http?: inputs.GetApplicationHealthchecksReadinessProbeTypeHttp;
    tcp?: inputs.GetApplicationHealthchecksReadinessProbeTypeTcp;
}

export interface GetApplicationHealthchecksReadinessProbeTypeArgs {
    exec?: pulumi.Input<inputs.GetApplicationHealthchecksReadinessProbeTypeExecArgs>;
    grpc?: pulumi.Input<inputs.GetApplicationHealthchecksReadinessProbeTypeGrpcArgs>;
    http?: pulumi.Input<inputs.GetApplicationHealthchecksReadinessProbeTypeHttpArgs>;
    tcp?: pulumi.Input<inputs.GetApplicationHealthchecksReadinessProbeTypeTcpArgs>;
}

export interface GetApplicationHealthchecksReadinessProbeTypeExec {
    commands: string[];
}

export interface GetApplicationHealthchecksReadinessProbeTypeExecArgs {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApplicationHealthchecksReadinessProbeTypeGrpc {
    port: number;
    service?: string;
}

export interface GetApplicationHealthchecksReadinessProbeTypeGrpcArgs {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface GetApplicationHealthchecksReadinessProbeTypeHttp {
    path?: string;
    port: number;
    scheme?: string;
}

export interface GetApplicationHealthchecksReadinessProbeTypeHttpArgs {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface GetApplicationHealthchecksReadinessProbeTypeTcp {
    host?: string;
    port: number;
}

export interface GetApplicationHealthchecksReadinessProbeTypeTcpArgs {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface GetApplicationSecret {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetApplicationSecretArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApplicationSecretAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetApplicationSecretAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApplicationSecretOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetApplicationSecretOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApplicationStorage {
    id?: string;
    mountPoint?: string;
    size?: number;
    type?: string;
}

export interface GetApplicationStorageArgs {
    id?: pulumi.Input<string>;
    mountPoint?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface GetClusterFeatures {
    staticIp?: boolean;
    vpcSubnet?: string;
}

export interface GetClusterFeaturesArgs {
    staticIp?: pulumi.Input<boolean>;
    vpcSubnet?: pulumi.Input<string>;
}

export interface GetClusterRoutingTable {
    description?: string;
    destination?: string;
    target?: string;
}

export interface GetClusterRoutingTableArgs {
    description?: pulumi.Input<string>;
    destination?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}

export interface GetContainerCustomDomain {
    domain?: string;
    id?: string;
    status?: string;
    validationDomain?: string;
}

export interface GetContainerCustomDomainArgs {
    domain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    validationDomain?: pulumi.Input<string>;
}

export interface GetContainerEnvironmentVariable {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetContainerEnvironmentVariableArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetContainerEnvironmentVariableAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetContainerEnvironmentVariableAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetContainerEnvironmentVariableOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetContainerEnvironmentVariableOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetContainerHealthchecks {
    livenessProbe?: inputs.GetContainerHealthchecksLivenessProbe;
    readinessProbe?: inputs.GetContainerHealthchecksReadinessProbe;
}

export interface GetContainerHealthchecksArgs {
    livenessProbe?: pulumi.Input<inputs.GetContainerHealthchecksLivenessProbeArgs>;
    readinessProbe?: pulumi.Input<inputs.GetContainerHealthchecksReadinessProbeArgs>;
}

export interface GetContainerHealthchecksLivenessProbe {
    failureThreshold: number;
    initialDelaySeconds: number;
    periodSeconds: number;
    successThreshold: number;
    timeoutSeconds: number;
    type: inputs.GetContainerHealthchecksLivenessProbeType;
}

export interface GetContainerHealthchecksLivenessProbeArgs {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.GetContainerHealthchecksLivenessProbeTypeArgs>;
}

export interface GetContainerHealthchecksLivenessProbeType {
    exec?: inputs.GetContainerHealthchecksLivenessProbeTypeExec;
    grpc?: inputs.GetContainerHealthchecksLivenessProbeTypeGrpc;
    http?: inputs.GetContainerHealthchecksLivenessProbeTypeHttp;
    tcp?: inputs.GetContainerHealthchecksLivenessProbeTypeTcp;
}

export interface GetContainerHealthchecksLivenessProbeTypeArgs {
    exec?: pulumi.Input<inputs.GetContainerHealthchecksLivenessProbeTypeExecArgs>;
    grpc?: pulumi.Input<inputs.GetContainerHealthchecksLivenessProbeTypeGrpcArgs>;
    http?: pulumi.Input<inputs.GetContainerHealthchecksLivenessProbeTypeHttpArgs>;
    tcp?: pulumi.Input<inputs.GetContainerHealthchecksLivenessProbeTypeTcpArgs>;
}

export interface GetContainerHealthchecksLivenessProbeTypeExec {
    commands: string[];
}

export interface GetContainerHealthchecksLivenessProbeTypeExecArgs {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerHealthchecksLivenessProbeTypeGrpc {
    port: number;
    service?: string;
}

export interface GetContainerHealthchecksLivenessProbeTypeGrpcArgs {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface GetContainerHealthchecksLivenessProbeTypeHttp {
    path?: string;
    port: number;
    scheme?: string;
}

export interface GetContainerHealthchecksLivenessProbeTypeHttpArgs {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface GetContainerHealthchecksLivenessProbeTypeTcp {
    host?: string;
    port: number;
}

export interface GetContainerHealthchecksLivenessProbeTypeTcpArgs {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface GetContainerHealthchecksReadinessProbe {
    failureThreshold: number;
    initialDelaySeconds: number;
    periodSeconds: number;
    successThreshold: number;
    timeoutSeconds: number;
    type: inputs.GetContainerHealthchecksReadinessProbeType;
}

export interface GetContainerHealthchecksReadinessProbeArgs {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.GetContainerHealthchecksReadinessProbeTypeArgs>;
}

export interface GetContainerHealthchecksReadinessProbeType {
    exec?: inputs.GetContainerHealthchecksReadinessProbeTypeExec;
    grpc?: inputs.GetContainerHealthchecksReadinessProbeTypeGrpc;
    http?: inputs.GetContainerHealthchecksReadinessProbeTypeHttp;
    tcp?: inputs.GetContainerHealthchecksReadinessProbeTypeTcp;
}

export interface GetContainerHealthchecksReadinessProbeTypeArgs {
    exec?: pulumi.Input<inputs.GetContainerHealthchecksReadinessProbeTypeExecArgs>;
    grpc?: pulumi.Input<inputs.GetContainerHealthchecksReadinessProbeTypeGrpcArgs>;
    http?: pulumi.Input<inputs.GetContainerHealthchecksReadinessProbeTypeHttpArgs>;
    tcp?: pulumi.Input<inputs.GetContainerHealthchecksReadinessProbeTypeTcpArgs>;
}

export interface GetContainerHealthchecksReadinessProbeTypeExec {
    commands: string[];
}

export interface GetContainerHealthchecksReadinessProbeTypeExecArgs {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerHealthchecksReadinessProbeTypeGrpc {
    port: number;
    service?: string;
}

export interface GetContainerHealthchecksReadinessProbeTypeGrpcArgs {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface GetContainerHealthchecksReadinessProbeTypeHttp {
    path?: string;
    port: number;
    scheme?: string;
}

export interface GetContainerHealthchecksReadinessProbeTypeHttpArgs {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface GetContainerHealthchecksReadinessProbeTypeTcp {
    host?: string;
    port: number;
}

export interface GetContainerHealthchecksReadinessProbeTypeTcpArgs {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface GetContainerPort {
    externalPort?: number;
    id?: string;
    internalPort?: number;
    isDefault?: boolean;
    name?: string;
    protocol?: string;
    publiclyAccessible?: boolean;
}

export interface GetContainerPortArgs {
    externalPort?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    internalPort?: pulumi.Input<number>;
    isDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    publiclyAccessible?: pulumi.Input<boolean>;
}

export interface GetContainerSecret {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetContainerSecretArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetContainerSecretAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetContainerSecretAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetContainerSecretOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetContainerSecretOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetContainerStorage {
    id?: string;
    mountPoint?: string;
    size?: number;
    type?: string;
}

export interface GetContainerStorageArgs {
    id?: pulumi.Input<string>;
    mountPoint?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface GetEnvironmentEnvironmentVariable {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetEnvironmentEnvironmentVariableArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetEnvironmentEnvironmentVariableAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetEnvironmentEnvironmentVariableAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetEnvironmentEnvironmentVariableOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetEnvironmentEnvironmentVariableOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetEnvironmentSecret {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetEnvironmentSecretArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetEnvironmentSecretAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetEnvironmentSecretAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetEnvironmentSecretOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetEnvironmentSecretOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetHelmEnvironmentVariable {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetHelmEnvironmentVariableArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetHelmEnvironmentVariableAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetHelmEnvironmentVariableAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetHelmEnvironmentVariableOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetHelmEnvironmentVariableOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetHelmSecret {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetHelmSecretArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetHelmSecretAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetHelmSecretAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetHelmSecretOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetHelmSecretOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetJobEnvironmentVariable {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetJobEnvironmentVariableArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetJobEnvironmentVariableAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetJobEnvironmentVariableAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetJobEnvironmentVariableOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetJobEnvironmentVariableOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetJobHealthchecks {
    livenessProbe?: inputs.GetJobHealthchecksLivenessProbe;
    readinessProbe?: inputs.GetJobHealthchecksReadinessProbe;
}

export interface GetJobHealthchecksArgs {
    livenessProbe?: pulumi.Input<inputs.GetJobHealthchecksLivenessProbeArgs>;
    readinessProbe?: pulumi.Input<inputs.GetJobHealthchecksReadinessProbeArgs>;
}

export interface GetJobHealthchecksLivenessProbe {
    failureThreshold: number;
    initialDelaySeconds: number;
    periodSeconds: number;
    successThreshold: number;
    timeoutSeconds: number;
    type: inputs.GetJobHealthchecksLivenessProbeType;
}

export interface GetJobHealthchecksLivenessProbeArgs {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.GetJobHealthchecksLivenessProbeTypeArgs>;
}

export interface GetJobHealthchecksLivenessProbeType {
    exec?: inputs.GetJobHealthchecksLivenessProbeTypeExec;
    grpc?: inputs.GetJobHealthchecksLivenessProbeTypeGrpc;
    http?: inputs.GetJobHealthchecksLivenessProbeTypeHttp;
    tcp?: inputs.GetJobHealthchecksLivenessProbeTypeTcp;
}

export interface GetJobHealthchecksLivenessProbeTypeArgs {
    exec?: pulumi.Input<inputs.GetJobHealthchecksLivenessProbeTypeExecArgs>;
    grpc?: pulumi.Input<inputs.GetJobHealthchecksLivenessProbeTypeGrpcArgs>;
    http?: pulumi.Input<inputs.GetJobHealthchecksLivenessProbeTypeHttpArgs>;
    tcp?: pulumi.Input<inputs.GetJobHealthchecksLivenessProbeTypeTcpArgs>;
}

export interface GetJobHealthchecksLivenessProbeTypeExec {
    commands: string[];
}

export interface GetJobHealthchecksLivenessProbeTypeExecArgs {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJobHealthchecksLivenessProbeTypeGrpc {
    port: number;
    service?: string;
}

export interface GetJobHealthchecksLivenessProbeTypeGrpcArgs {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface GetJobHealthchecksLivenessProbeTypeHttp {
    path?: string;
    port: number;
    scheme?: string;
}

export interface GetJobHealthchecksLivenessProbeTypeHttpArgs {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface GetJobHealthchecksLivenessProbeTypeTcp {
    host?: string;
    port: number;
}

export interface GetJobHealthchecksLivenessProbeTypeTcpArgs {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface GetJobHealthchecksReadinessProbe {
    failureThreshold: number;
    initialDelaySeconds: number;
    periodSeconds: number;
    successThreshold: number;
    timeoutSeconds: number;
    type: inputs.GetJobHealthchecksReadinessProbeType;
}

export interface GetJobHealthchecksReadinessProbeArgs {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.GetJobHealthchecksReadinessProbeTypeArgs>;
}

export interface GetJobHealthchecksReadinessProbeType {
    exec?: inputs.GetJobHealthchecksReadinessProbeTypeExec;
    grpc?: inputs.GetJobHealthchecksReadinessProbeTypeGrpc;
    http?: inputs.GetJobHealthchecksReadinessProbeTypeHttp;
    tcp?: inputs.GetJobHealthchecksReadinessProbeTypeTcp;
}

export interface GetJobHealthchecksReadinessProbeTypeArgs {
    exec?: pulumi.Input<inputs.GetJobHealthchecksReadinessProbeTypeExecArgs>;
    grpc?: pulumi.Input<inputs.GetJobHealthchecksReadinessProbeTypeGrpcArgs>;
    http?: pulumi.Input<inputs.GetJobHealthchecksReadinessProbeTypeHttpArgs>;
    tcp?: pulumi.Input<inputs.GetJobHealthchecksReadinessProbeTypeTcpArgs>;
}

export interface GetJobHealthchecksReadinessProbeTypeExec {
    commands: string[];
}

export interface GetJobHealthchecksReadinessProbeTypeExecArgs {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetJobHealthchecksReadinessProbeTypeGrpc {
    port: number;
    service?: string;
}

export interface GetJobHealthchecksReadinessProbeTypeGrpcArgs {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface GetJobHealthchecksReadinessProbeTypeHttp {
    path?: string;
    port: number;
    scheme?: string;
}

export interface GetJobHealthchecksReadinessProbeTypeHttpArgs {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface GetJobHealthchecksReadinessProbeTypeTcp {
    host?: string;
    port: number;
}

export interface GetJobHealthchecksReadinessProbeTypeTcpArgs {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface GetJobSecret {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetJobSecretArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetJobSecretAlias {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetJobSecretAliasArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetJobSecretOverride {
    id?: string;
    key?: string;
    value?: string;
}

export interface GetJobSecretOverrideArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetJobSource {
    docker?: inputs.GetJobSourceDocker;
    image?: inputs.GetJobSourceImage;
}

export interface GetJobSourceArgs {
    docker?: pulumi.Input<inputs.GetJobSourceDockerArgs>;
    image?: pulumi.Input<inputs.GetJobSourceImageArgs>;
}

export interface GetJobSourceDocker {
    dockerfilePath?: string;
    gitRepository?: inputs.GetJobSourceDockerGitRepository;
}

export interface GetJobSourceDockerArgs {
    dockerfilePath?: pulumi.Input<string>;
    gitRepository?: pulumi.Input<inputs.GetJobSourceDockerGitRepositoryArgs>;
}

export interface GetJobSourceDockerGitRepository {
    branch?: string;
    gitTokenId?: string;
    rootPath?: string;
    url?: string;
}

export interface GetJobSourceDockerGitRepositoryArgs {
    branch?: pulumi.Input<string>;
    gitTokenId?: pulumi.Input<string>;
    rootPath?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface GetJobSourceImage {
    name?: string;
    registryId?: string;
    tag?: string;
}

export interface GetJobSourceImageArgs {
    name?: pulumi.Input<string>;
    registryId?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface GetProjectEnvironmentVariable {
    /**
     * Id of the environment variable.
     */
    id?: string;
    /**
     * Key of the environment variable.
     */
    key?: string;
    /**
     * Value of the environment variable.
     */
    value?: string;
}

export interface GetProjectEnvironmentVariableArgs {
    /**
     * Id of the environment variable.
     */
    id?: pulumi.Input<string>;
    /**
     * Key of the environment variable.
     */
    key?: pulumi.Input<string>;
    /**
     * Value of the environment variable.
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEnvironmentVariableAlias {
    /**
     * Id of the environment variable alias.
     */
    id?: string;
    /**
     * Name of the environment variable alias.
     */
    key?: string;
    /**
     * Name of the variable to alias.
     */
    value?: string;
}

export interface GetProjectEnvironmentVariableAliasArgs {
    /**
     * Id of the environment variable alias.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the environment variable alias.
     */
    key?: pulumi.Input<string>;
    /**
     * Name of the variable to alias.
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectSecret {
    /**
     * Id of the secret.
     */
    id?: string;
    /**
     * Key of the secret.
     */
    key?: string;
    /**
     * Value of the secret.
     */
    value?: string;
}

export interface GetProjectSecretArgs {
    /**
     * Id of the secret.
     */
    id?: pulumi.Input<string>;
    /**
     * Key of the secret.
     */
    key?: pulumi.Input<string>;
    /**
     * Value of the secret.
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectSecretAlias {
    /**
     * Id of the secret alias.
     */
    id?: string;
    /**
     * Name of the secret alias.
     */
    key?: string;
    /**
     * Name of the secret to alias.
     */
    value?: string;
}

export interface GetProjectSecretAliasArgs {
    /**
     * Id of the secret alias.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the secret alias.
     */
    key?: pulumi.Input<string>;
    /**
     * Name of the secret to alias.
     */
    value?: pulumi.Input<string>;
}

export interface HelmBuiltInEnvironmentVariable {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface HelmEnvironmentVariable {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface HelmEnvironmentVariableAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface HelmEnvironmentVariableOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface HelmPorts {
    externalPort: pulumi.Input<number>;
    internalPort: pulumi.Input<number>;
    isDefault: pulumi.Input<boolean>;
    namespace?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}

export interface HelmRepositoryConfig {
    accessKeyId?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    scalewayAccessKey?: pulumi.Input<string>;
    scalewaySecretKey?: pulumi.Input<string>;
    secretAccessKey?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface HelmSecret {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface HelmSecretAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface HelmSecretOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface HelmSource {
    gitRepository?: pulumi.Input<inputs.HelmSourceGitRepository>;
    helmRepository?: pulumi.Input<inputs.HelmSourceHelmRepository>;
}

export interface HelmSourceGitRepository {
    branch?: pulumi.Input<string>;
    gitTokenId?: pulumi.Input<string>;
    rootPath?: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface HelmSourceHelmRepository {
    chartName: pulumi.Input<string>;
    chartVersion: pulumi.Input<string>;
    helmRepositoryId: pulumi.Input<string>;
}

export interface HelmValuesOverride {
    file?: pulumi.Input<inputs.HelmValuesOverrideFile>;
    set: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    setJson: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    setString: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface HelmValuesOverrideFile {
    gitRepository?: pulumi.Input<inputs.HelmValuesOverrideFileGitRepository>;
    raw?: pulumi.Input<{[key: string]: pulumi.Input<inputs.HelmValuesOverrideFileRaw>}>;
}

export interface HelmValuesOverrideFileGitRepository {
    branch: pulumi.Input<string>;
    gitTokenId?: pulumi.Input<string>;
    paths: pulumi.Input<pulumi.Input<string>[]>;
    url: pulumi.Input<string>;
}

export interface HelmValuesOverrideFileRaw {
    content: pulumi.Input<string>;
}

export interface JobBuiltInEnvironmentVariable {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface JobEnvironmentVariable {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface JobEnvironmentVariableAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface JobEnvironmentVariableOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface JobHealthchecks {
    livenessProbe?: pulumi.Input<inputs.JobHealthchecksLivenessProbe>;
    readinessProbe?: pulumi.Input<inputs.JobHealthchecksReadinessProbe>;
}

export interface JobHealthchecksLivenessProbe {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.JobHealthchecksLivenessProbeType>;
}

export interface JobHealthchecksLivenessProbeType {
    exec?: pulumi.Input<inputs.JobHealthchecksLivenessProbeTypeExec>;
    grpc?: pulumi.Input<inputs.JobHealthchecksLivenessProbeTypeGrpc>;
    http?: pulumi.Input<inputs.JobHealthchecksLivenessProbeTypeHttp>;
    tcp?: pulumi.Input<inputs.JobHealthchecksLivenessProbeTypeTcp>;
}

export interface JobHealthchecksLivenessProbeTypeExec {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface JobHealthchecksLivenessProbeTypeGrpc {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface JobHealthchecksLivenessProbeTypeHttp {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface JobHealthchecksLivenessProbeTypeTcp {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface JobHealthchecksReadinessProbe {
    failureThreshold: pulumi.Input<number>;
    initialDelaySeconds: pulumi.Input<number>;
    periodSeconds: pulumi.Input<number>;
    successThreshold: pulumi.Input<number>;
    timeoutSeconds: pulumi.Input<number>;
    type: pulumi.Input<inputs.JobHealthchecksReadinessProbeType>;
}

export interface JobHealthchecksReadinessProbeType {
    exec?: pulumi.Input<inputs.JobHealthchecksReadinessProbeTypeExec>;
    grpc?: pulumi.Input<inputs.JobHealthchecksReadinessProbeTypeGrpc>;
    http?: pulumi.Input<inputs.JobHealthchecksReadinessProbeTypeHttp>;
    tcp?: pulumi.Input<inputs.JobHealthchecksReadinessProbeTypeTcp>;
}

export interface JobHealthchecksReadinessProbeTypeExec {
    commands: pulumi.Input<pulumi.Input<string>[]>;
}

export interface JobHealthchecksReadinessProbeTypeGrpc {
    port: pulumi.Input<number>;
    service?: pulumi.Input<string>;
}

export interface JobHealthchecksReadinessProbeTypeHttp {
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface JobHealthchecksReadinessProbeTypeTcp {
    host?: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface JobSchedule {
    cronjob?: pulumi.Input<inputs.JobScheduleCronjob>;
    onDelete?: pulumi.Input<inputs.JobScheduleOnDelete>;
    onStart?: pulumi.Input<inputs.JobScheduleOnStart>;
    onStop?: pulumi.Input<inputs.JobScheduleOnStop>;
}

export interface JobScheduleCronjob {
    command: pulumi.Input<inputs.JobScheduleCronjobCommand>;
    schedule: pulumi.Input<string>;
}

export interface JobScheduleCronjobCommand {
    arguments?: pulumi.Input<pulumi.Input<string>[]>;
    entrypoint?: pulumi.Input<string>;
}

export interface JobScheduleOnDelete {
    arguments?: pulumi.Input<pulumi.Input<string>[]>;
    entrypoint?: pulumi.Input<string>;
}

export interface JobScheduleOnStart {
    arguments?: pulumi.Input<pulumi.Input<string>[]>;
    entrypoint?: pulumi.Input<string>;
}

export interface JobScheduleOnStop {
    arguments?: pulumi.Input<pulumi.Input<string>[]>;
    entrypoint?: pulumi.Input<string>;
}

export interface JobSecret {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface JobSecretAlias {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface JobSecretOverride {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface JobSource {
    docker?: pulumi.Input<inputs.JobSourceDocker>;
    image?: pulumi.Input<inputs.JobSourceImage>;
}

export interface JobSourceDocker {
    dockerfilePath?: pulumi.Input<string>;
    gitRepository: pulumi.Input<inputs.JobSourceDockerGitRepository>;
}

export interface JobSourceDockerGitRepository {
    branch: pulumi.Input<string>;
    gitTokenId?: pulumi.Input<string>;
    rootPath?: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface JobSourceImage {
    name: pulumi.Input<string>;
    registryId: pulumi.Input<string>;
    tag: pulumi.Input<string>;
}

export interface ProjectBuiltInEnvironmentVariable {
    /**
     * Id of the environment variable.
     */
    id?: pulumi.Input<string>;
    /**
     * Key of the environment variable.
     */
    key?: pulumi.Input<string>;
    /**
     * Value of the environment variable.
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEnvironmentVariable {
    /**
     * Id of the environment variable.
     */
    id?: pulumi.Input<string>;
    /**
     * Key of the environment variable.
     */
    key: pulumi.Input<string>;
    /**
     * Value of the environment variable.
     */
    value: pulumi.Input<string>;
}

export interface ProjectEnvironmentVariableAlias {
    /**
     * Id of the environment variable alias.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the environment variable alias.
     */
    key: pulumi.Input<string>;
    /**
     * Name of the variable to alias.
     */
    value: pulumi.Input<string>;
}

export interface ProjectSecret {
    /**
     * Id of the secret.
     */
    id?: pulumi.Input<string>;
    /**
     * Key of the secret.
     */
    key: pulumi.Input<string>;
    /**
     * Value of the secret.
     */
    value: pulumi.Input<string>;
}

export interface ProjectSecretAlias {
    /**
     * Id of the secret alias.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the secret alias.
     */
    key: pulumi.Input<string>;
    /**
     * Name of the secret to alias.
     */
    value: pulumi.Input<string>;
}
