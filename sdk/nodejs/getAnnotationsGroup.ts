// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # qovery.AnnotationsGroup (Data Source)
 *
 * Provides a Qovery annotations group resource
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@pulumi/qovery";
 *
 * const myAnnotationsGroup = qovery.getAnnotationsGroup({
 *     id: "<annotations_group_id>",
 *     organizationId: "<organization_id>",
 * });
 * ```
 */
export function getAnnotationsGroup(args: GetAnnotationsGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAnnotationsGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("qovery:index/getAnnotationsGroup:getAnnotationsGroup", {
        "annotations": args.annotations,
        "id": args.id,
        "name": args.name,
        "organizationId": args.organizationId,
        "scopes": args.scopes,
    }, opts);
}

/**
 * A collection of arguments for invoking getAnnotationsGroup.
 */
export interface GetAnnotationsGroupArgs {
    /**
     * annotations
     */
    annotations?: {[key: string]: string};
    /**
     * Id of the annotations group
     */
    id: string;
    /**
     * name of the annotations group
     */
    name?: string;
    /**
     * Id of the organization.
     */
    organizationId: string;
    /**
     * scopes of the annotations group
     */
    scopes?: string[];
}

/**
 * A collection of values returned by getAnnotationsGroup.
 */
export interface GetAnnotationsGroupResult {
    /**
     * annotations
     */
    readonly annotations?: {[key: string]: string};
    /**
     * Id of the annotations group
     */
    readonly id: string;
    /**
     * name of the annotations group
     */
    readonly name?: string;
    /**
     * Id of the organization.
     */
    readonly organizationId: string;
    /**
     * scopes of the annotations group
     */
    readonly scopes?: string[];
}
/**
 * ## # qovery.AnnotationsGroup (Data Source)
 *
 * Provides a Qovery annotations group resource
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@pulumi/qovery";
 *
 * const myAnnotationsGroup = qovery.getAnnotationsGroup({
 *     id: "<annotations_group_id>",
 *     organizationId: "<organization_id>",
 * });
 * ```
 */
export function getAnnotationsGroupOutput(args: GetAnnotationsGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnnotationsGroupResult> {
    return pulumi.output(args).apply((a: any) => getAnnotationsGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAnnotationsGroup.
 */
export interface GetAnnotationsGroupOutputArgs {
    /**
     * annotations
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Id of the annotations group
     */
    id: pulumi.Input<string>;
    /**
     * name of the annotations group
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the organization.
     */
    organizationId: pulumi.Input<string>;
    /**
     * scopes of the annotations group
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}
