// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # qovery.ScalewayCredentials (Resource)
 *
 * Provides a Qovery SCALEWAY credentials resource. This can be used to create and manage Qovery SCALEWAY credentials.
 *
 * ## Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@ediri/qovery";
 *
 * const myScalewayCreds = new qovery.ScalewayCredentials("myScalewayCreds", {
 *     organizationId: qovery_organization.my_organization.id,
 *     scalewayAccessKey: "<your-scaleway-access-key>",
 *     scalewaySecretKey: "<your-scaleway-secret-key>",
 *     scalewayProjectId: "<your-scaleway-project-id>",
 * }, {
 *     dependsOn: [qovery_organization.my_organization],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import qovery:index/scalewayCredentials:ScalewayCredentials my_scaleway_creds "<organization_id>,<scaleway_credentials_id>"
 * ```
 */
export class ScalewayCredentials extends pulumi.CustomResource {
    /**
     * Get an existing ScalewayCredentials resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScalewayCredentialsState, opts?: pulumi.CustomResourceOptions): ScalewayCredentials {
        return new ScalewayCredentials(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'qovery:index/scalewayCredentials:ScalewayCredentials';

    /**
     * Returns true if the given object is an instance of ScalewayCredentials.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalewayCredentials {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalewayCredentials.__pulumiType;
    }

    /**
     * Name of the scaleway credentials.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Id of the organization.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Your SCALEWAY access key id.
     */
    public readonly scalewayAccessKey!: pulumi.Output<string>;
    /**
     * Your SCALEWAY organization ID.
     */
    public readonly scalewayOrganizationId!: pulumi.Output<string>;
    /**
     * Your SCALEWAY project ID.
     */
    public readonly scalewayProjectId!: pulumi.Output<string>;
    /**
     * Your SCALEWAY secret key.
     */
    public readonly scalewaySecretKey!: pulumi.Output<string>;

    /**
     * Create a ScalewayCredentials resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalewayCredentialsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScalewayCredentialsArgs | ScalewayCredentialsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScalewayCredentialsState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["scalewayAccessKey"] = state ? state.scalewayAccessKey : undefined;
            resourceInputs["scalewayOrganizationId"] = state ? state.scalewayOrganizationId : undefined;
            resourceInputs["scalewayProjectId"] = state ? state.scalewayProjectId : undefined;
            resourceInputs["scalewaySecretKey"] = state ? state.scalewaySecretKey : undefined;
        } else {
            const args = argsOrState as ScalewayCredentialsArgs | undefined;
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.scalewayAccessKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalewayAccessKey'");
            }
            if ((!args || args.scalewayOrganizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalewayOrganizationId'");
            }
            if ((!args || args.scalewayProjectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalewayProjectId'");
            }
            if ((!args || args.scalewaySecretKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalewaySecretKey'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["scalewayAccessKey"] = args ? args.scalewayAccessKey : undefined;
            resourceInputs["scalewayOrganizationId"] = args ? args.scalewayOrganizationId : undefined;
            resourceInputs["scalewayProjectId"] = args ? args.scalewayProjectId : undefined;
            resourceInputs["scalewaySecretKey"] = args?.scalewaySecretKey ? pulumi.secret(args.scalewaySecretKey) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["scalewaySecretKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ScalewayCredentials.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScalewayCredentials resources.
 */
export interface ScalewayCredentialsState {
    /**
     * Name of the scaleway credentials.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the organization.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Your SCALEWAY access key id.
     */
    scalewayAccessKey?: pulumi.Input<string>;
    /**
     * Your SCALEWAY organization ID.
     */
    scalewayOrganizationId?: pulumi.Input<string>;
    /**
     * Your SCALEWAY project ID.
     */
    scalewayProjectId?: pulumi.Input<string>;
    /**
     * Your SCALEWAY secret key.
     */
    scalewaySecretKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ScalewayCredentials resource.
 */
export interface ScalewayCredentialsArgs {
    /**
     * Name of the scaleway credentials.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the organization.
     */
    organizationId: pulumi.Input<string>;
    /**
     * Your SCALEWAY access key id.
     */
    scalewayAccessKey: pulumi.Input<string>;
    /**
     * Your SCALEWAY organization ID.
     */
    scalewayOrganizationId: pulumi.Input<string>;
    /**
     * Your SCALEWAY project ID.
     */
    scalewayProjectId: pulumi.Input<string>;
    /**
     * Your SCALEWAY secret key.
     */
    scalewaySecretKey: pulumi.Input<string>;
}
