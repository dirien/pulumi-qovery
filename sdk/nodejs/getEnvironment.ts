// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # qovery.Environment (Data Source)
 *
 * Provides a Qovery environment resource. This can be used to create and manage Qovery environments.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@pulumi/qovery";
 *
 * const myEnvironment = qovery.getEnvironment({
 *     id: "<environment_id>",
 * });
 * ```
 */
export function getEnvironment(args: GetEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("qovery:index/getEnvironment:getEnvironment", {
        "environmentVariableAliases": args.environmentVariableAliases,
        "environmentVariableOverrides": args.environmentVariableOverrides,
        "environmentVariables": args.environmentVariables,
        "id": args.id,
        "mode": args.mode,
        "secretAliases": args.secretAliases,
        "secretOverrides": args.secretOverrides,
        "secrets": args.secrets,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnvironment.
 */
export interface GetEnvironmentArgs {
    environmentVariableAliases?: inputs.GetEnvironmentEnvironmentVariableAlias[];
    environmentVariableOverrides?: inputs.GetEnvironmentEnvironmentVariableOverride[];
    environmentVariables?: inputs.GetEnvironmentEnvironmentVariable[];
    id: string;
    mode?: string;
    secretAliases?: inputs.GetEnvironmentSecretAlias[];
    secretOverrides?: inputs.GetEnvironmentSecretOverride[];
    secrets?: inputs.GetEnvironmentSecret[];
}

/**
 * A collection of values returned by getEnvironment.
 */
export interface GetEnvironmentResult {
    readonly builtInEnvironmentVariables: outputs.GetEnvironmentBuiltInEnvironmentVariable[];
    readonly clusterId: string;
    readonly environmentVariableAliases: outputs.GetEnvironmentEnvironmentVariableAlias[];
    readonly environmentVariableOverrides: outputs.GetEnvironmentEnvironmentVariableOverride[];
    readonly environmentVariables: outputs.GetEnvironmentEnvironmentVariable[];
    readonly id: string;
    readonly mode: string;
    readonly name: string;
    readonly projectId: string;
    readonly secretAliases: outputs.GetEnvironmentSecretAlias[];
    readonly secretOverrides?: outputs.GetEnvironmentSecretOverride[];
    readonly secrets: outputs.GetEnvironmentSecret[];
}
/**
 * ## # qovery.Environment (Data Source)
 *
 * Provides a Qovery environment resource. This can be used to create and manage Qovery environments.
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as qovery from "@pulumi/qovery";
 *
 * const myEnvironment = qovery.getEnvironment({
 *     id: "<environment_id>",
 * });
 * ```
 */
export function getEnvironmentOutput(args: GetEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking getEnvironment.
 */
export interface GetEnvironmentOutputArgs {
    environmentVariableAliases?: pulumi.Input<pulumi.Input<inputs.GetEnvironmentEnvironmentVariableAliasArgs>[]>;
    environmentVariableOverrides?: pulumi.Input<pulumi.Input<inputs.GetEnvironmentEnvironmentVariableOverrideArgs>[]>;
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.GetEnvironmentEnvironmentVariableArgs>[]>;
    id: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    secretAliases?: pulumi.Input<pulumi.Input<inputs.GetEnvironmentSecretAliasArgs>[]>;
    secretOverrides?: pulumi.Input<pulumi.Input<inputs.GetEnvironmentSecretOverrideArgs>[]>;
    secrets?: pulumi.Input<pulumi.Input<inputs.GetEnvironmentSecretArgs>[]>;
}
