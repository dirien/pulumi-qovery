// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # AwsCredentials (Resource)
//
// Provides a Qovery AWS credentials resource. This can be used to create and manage Qovery AWS credentials.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-qovery/sdk/go/qovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qovery.NewAwsCredentials(ctx, "myAwsCreds", &qovery.AwsCredentialsArgs{
//				OrganizationId:  pulumi.Any(qovery_organization.My_organization.Id),
//				AccessKeyId:     pulumi.String("<your-aws-access-key-id>"),
//				SecretAccessKey: pulumi.String("<your-aws-secret-access-key>"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				qovery_organization.My_organization,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import qovery:index/awsCredentials:AwsCredentials my_aws_creds "<organization_id>,<aws_credentials_id>"
// ```
type AwsCredentials struct {
	pulumi.CustomResourceState

	// Your AWS access key id.
	AccessKeyId pulumi.StringOutput `pulumi:"accessKeyId"`
	// Name of the aws credentials.
	Name pulumi.StringOutput `pulumi:"name"`
	// Id of the organization.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Your AWS secret access key.
	SecretAccessKey pulumi.StringOutput `pulumi:"secretAccessKey"`
}

// NewAwsCredentials registers a new resource with the given unique name, arguments, and options.
func NewAwsCredentials(ctx *pulumi.Context,
	name string, args *AwsCredentialsArgs, opts ...pulumi.ResourceOption) (*AwsCredentials, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessKeyId == nil {
		return nil, errors.New("invalid value for required argument 'AccessKeyId'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.SecretAccessKey == nil {
		return nil, errors.New("invalid value for required argument 'SecretAccessKey'")
	}
	if args.AccessKeyId != nil {
		args.AccessKeyId = pulumi.ToSecret(args.AccessKeyId).(pulumi.StringInput)
	}
	if args.SecretAccessKey != nil {
		args.SecretAccessKey = pulumi.ToSecret(args.SecretAccessKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accessKeyId",
		"secretAccessKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsCredentials
	err := ctx.RegisterResource("qovery:index/awsCredentials:AwsCredentials", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsCredentials gets an existing AwsCredentials resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsCredentials(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsCredentialsState, opts ...pulumi.ResourceOption) (*AwsCredentials, error) {
	var resource AwsCredentials
	err := ctx.ReadResource("qovery:index/awsCredentials:AwsCredentials", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsCredentials resources.
type awsCredentialsState struct {
	// Your AWS access key id.
	AccessKeyId *string `pulumi:"accessKeyId"`
	// Name of the aws credentials.
	Name *string `pulumi:"name"`
	// Id of the organization.
	OrganizationId *string `pulumi:"organizationId"`
	// Your AWS secret access key.
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

type AwsCredentialsState struct {
	// Your AWS access key id.
	AccessKeyId pulumi.StringPtrInput
	// Name of the aws credentials.
	Name pulumi.StringPtrInput
	// Id of the organization.
	OrganizationId pulumi.StringPtrInput
	// Your AWS secret access key.
	SecretAccessKey pulumi.StringPtrInput
}

func (AwsCredentialsState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsCredentialsState)(nil)).Elem()
}

type awsCredentialsArgs struct {
	// Your AWS access key id.
	AccessKeyId string `pulumi:"accessKeyId"`
	// Name of the aws credentials.
	Name *string `pulumi:"name"`
	// Id of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// Your AWS secret access key.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// The set of arguments for constructing a AwsCredentials resource.
type AwsCredentialsArgs struct {
	// Your AWS access key id.
	AccessKeyId pulumi.StringInput
	// Name of the aws credentials.
	Name pulumi.StringPtrInput
	// Id of the organization.
	OrganizationId pulumi.StringInput
	// Your AWS secret access key.
	SecretAccessKey pulumi.StringInput
}

func (AwsCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsCredentialsArgs)(nil)).Elem()
}

type AwsCredentialsInput interface {
	pulumi.Input

	ToAwsCredentialsOutput() AwsCredentialsOutput
	ToAwsCredentialsOutputWithContext(ctx context.Context) AwsCredentialsOutput
}

func (*AwsCredentials) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCredentials)(nil)).Elem()
}

func (i *AwsCredentials) ToAwsCredentialsOutput() AwsCredentialsOutput {
	return i.ToAwsCredentialsOutputWithContext(context.Background())
}

func (i *AwsCredentials) ToAwsCredentialsOutputWithContext(ctx context.Context) AwsCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCredentialsOutput)
}

// AwsCredentialsArrayInput is an input type that accepts AwsCredentialsArray and AwsCredentialsArrayOutput values.
// You can construct a concrete instance of `AwsCredentialsArrayInput` via:
//
//	AwsCredentialsArray{ AwsCredentialsArgs{...} }
type AwsCredentialsArrayInput interface {
	pulumi.Input

	ToAwsCredentialsArrayOutput() AwsCredentialsArrayOutput
	ToAwsCredentialsArrayOutputWithContext(context.Context) AwsCredentialsArrayOutput
}

type AwsCredentialsArray []AwsCredentialsInput

func (AwsCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsCredentials)(nil)).Elem()
}

func (i AwsCredentialsArray) ToAwsCredentialsArrayOutput() AwsCredentialsArrayOutput {
	return i.ToAwsCredentialsArrayOutputWithContext(context.Background())
}

func (i AwsCredentialsArray) ToAwsCredentialsArrayOutputWithContext(ctx context.Context) AwsCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCredentialsArrayOutput)
}

// AwsCredentialsMapInput is an input type that accepts AwsCredentialsMap and AwsCredentialsMapOutput values.
// You can construct a concrete instance of `AwsCredentialsMapInput` via:
//
//	AwsCredentialsMap{ "key": AwsCredentialsArgs{...} }
type AwsCredentialsMapInput interface {
	pulumi.Input

	ToAwsCredentialsMapOutput() AwsCredentialsMapOutput
	ToAwsCredentialsMapOutputWithContext(context.Context) AwsCredentialsMapOutput
}

type AwsCredentialsMap map[string]AwsCredentialsInput

func (AwsCredentialsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsCredentials)(nil)).Elem()
}

func (i AwsCredentialsMap) ToAwsCredentialsMapOutput() AwsCredentialsMapOutput {
	return i.ToAwsCredentialsMapOutputWithContext(context.Background())
}

func (i AwsCredentialsMap) ToAwsCredentialsMapOutputWithContext(ctx context.Context) AwsCredentialsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCredentialsMapOutput)
}

type AwsCredentialsOutput struct{ *pulumi.OutputState }

func (AwsCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCredentials)(nil)).Elem()
}

func (o AwsCredentialsOutput) ToAwsCredentialsOutput() AwsCredentialsOutput {
	return o
}

func (o AwsCredentialsOutput) ToAwsCredentialsOutputWithContext(ctx context.Context) AwsCredentialsOutput {
	return o
}

// Your AWS access key id.
func (o AwsCredentialsOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.StringOutput { return v.AccessKeyId }).(pulumi.StringOutput)
}

// Name of the aws credentials.
func (o AwsCredentialsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Id of the organization.
func (o AwsCredentialsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Your AWS secret access key.
func (o AwsCredentialsOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.StringOutput { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type AwsCredentialsArrayOutput struct{ *pulumi.OutputState }

func (AwsCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsCredentials)(nil)).Elem()
}

func (o AwsCredentialsArrayOutput) ToAwsCredentialsArrayOutput() AwsCredentialsArrayOutput {
	return o
}

func (o AwsCredentialsArrayOutput) ToAwsCredentialsArrayOutputWithContext(ctx context.Context) AwsCredentialsArrayOutput {
	return o
}

func (o AwsCredentialsArrayOutput) Index(i pulumi.IntInput) AwsCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsCredentials {
		return vs[0].([]*AwsCredentials)[vs[1].(int)]
	}).(AwsCredentialsOutput)
}

type AwsCredentialsMapOutput struct{ *pulumi.OutputState }

func (AwsCredentialsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsCredentials)(nil)).Elem()
}

func (o AwsCredentialsMapOutput) ToAwsCredentialsMapOutput() AwsCredentialsMapOutput {
	return o
}

func (o AwsCredentialsMapOutput) ToAwsCredentialsMapOutputWithContext(ctx context.Context) AwsCredentialsMapOutput {
	return o
}

func (o AwsCredentialsMapOutput) MapIndex(k pulumi.StringInput) AwsCredentialsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsCredentials {
		return vs[0].(map[string]*AwsCredentials)[vs[1].(string)]
	}).(AwsCredentialsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCredentialsInput)(nil)).Elem(), &AwsCredentials{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCredentialsArrayInput)(nil)).Elem(), AwsCredentialsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCredentialsMapInput)(nil)).Elem(), AwsCredentialsMap{})
	pulumi.RegisterOutputType(AwsCredentialsOutput{})
	pulumi.RegisterOutputType(AwsCredentialsArrayOutput{})
	pulumi.RegisterOutputType(AwsCredentialsMapOutput{})
}
