// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Database (Data Source)
//
// Provides a Qovery database resource. This can be used to create and manage Qovery databases.
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-qovery/sdk/go/qovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qovery.LookupDatabase(ctx, &qovery.LookupDatabaseArgs{
//				Id: "<database_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDatabase(ctx *pulumi.Context, args *LookupDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatabaseResult
	err := ctx.Invoke("qovery:index/getDatabase:getDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabase.
type LookupDatabaseArgs struct {
	Accessibility       *string  `pulumi:"accessibility"`
	AnnotationsGroupIds []string `pulumi:"annotationsGroupIds"`
	Cpu                 *int     `pulumi:"cpu"`
	DeploymentStageId   *string  `pulumi:"deploymentStageId"`
	IconUri             *string  `pulumi:"iconUri"`
	Id                  string   `pulumi:"id"`
	InstanceType        *string  `pulumi:"instanceType"`
	LabelsGroupIds      []string `pulumi:"labelsGroupIds"`
	Memory              *int     `pulumi:"memory"`
	Storage             *int     `pulumi:"storage"`
}

// A collection of values returned by getDatabase.
type LookupDatabaseResult struct {
	Accessibility       *string  `pulumi:"accessibility"`
	AnnotationsGroupIds []string `pulumi:"annotationsGroupIds"`
	Cpu                 *int     `pulumi:"cpu"`
	DeploymentStageId   string   `pulumi:"deploymentStageId"`
	EnvironmentId       string   `pulumi:"environmentId"`
	ExternalHost        string   `pulumi:"externalHost"`
	IconUri             string   `pulumi:"iconUri"`
	Id                  string   `pulumi:"id"`
	InstanceType        string   `pulumi:"instanceType"`
	InternalHost        string   `pulumi:"internalHost"`
	LabelsGroupIds      []string `pulumi:"labelsGroupIds"`
	Login               string   `pulumi:"login"`
	Memory              *int     `pulumi:"memory"`
	Mode                string   `pulumi:"mode"`
	Name                string   `pulumi:"name"`
	Password            string   `pulumi:"password"`
	Port                int      `pulumi:"port"`
	Storage             *int     `pulumi:"storage"`
	Type                string   `pulumi:"type"`
	Version             string   `pulumi:"version"`
}

func LookupDatabaseOutput(ctx *pulumi.Context, args LookupDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseResult, error) {
			args := v.(LookupDatabaseArgs)
			r, err := LookupDatabase(ctx, &args, opts...)
			var s LookupDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseResultOutput)
}

// A collection of arguments for invoking getDatabase.
type LookupDatabaseOutputArgs struct {
	Accessibility       pulumi.StringPtrInput   `pulumi:"accessibility"`
	AnnotationsGroupIds pulumi.StringArrayInput `pulumi:"annotationsGroupIds"`
	Cpu                 pulumi.IntPtrInput      `pulumi:"cpu"`
	DeploymentStageId   pulumi.StringPtrInput   `pulumi:"deploymentStageId"`
	IconUri             pulumi.StringPtrInput   `pulumi:"iconUri"`
	Id                  pulumi.StringInput      `pulumi:"id"`
	InstanceType        pulumi.StringPtrInput   `pulumi:"instanceType"`
	LabelsGroupIds      pulumi.StringArrayInput `pulumi:"labelsGroupIds"`
	Memory              pulumi.IntPtrInput      `pulumi:"memory"`
	Storage             pulumi.IntPtrInput      `pulumi:"storage"`
}

func (LookupDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getDatabase.
type LookupDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseResult)(nil)).Elem()
}

func (o LookupDatabaseResultOutput) ToLookupDatabaseResultOutput() LookupDatabaseResultOutput {
	return o
}

func (o LookupDatabaseResultOutput) ToLookupDatabaseResultOutputWithContext(ctx context.Context) LookupDatabaseResultOutput {
	return o
}

func (o LookupDatabaseResultOutput) Accessibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *string { return v.Accessibility }).(pulumi.StringPtrOutput)
}

func (o LookupDatabaseResultOutput) AnnotationsGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDatabaseResult) []string { return v.AnnotationsGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupDatabaseResultOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o LookupDatabaseResultOutput) DeploymentStageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.DeploymentStageId }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) ExternalHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.ExternalHost }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) IconUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.IconUri }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) InternalHost() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.InternalHost }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) LabelsGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDatabaseResult) []string { return v.LabelsGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupDatabaseResultOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Login }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o LookupDatabaseResultOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Mode }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDatabaseResult) int { return v.Port }).(pulumi.IntOutput)
}

func (o LookupDatabaseResultOutput) Storage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *int { return v.Storage }).(pulumi.IntPtrOutput)
}

func (o LookupDatabaseResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupDatabaseResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatabaseResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseResultOutput{})
}
