// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApplicationBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key *string `pulumi:"key"`
	// Value of the environment variable.
	Value *string `pulumi:"value"`
}

// ApplicationBuiltInEnvironmentVariableInput is an input type that accepts ApplicationBuiltInEnvironmentVariableArgs and ApplicationBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `ApplicationBuiltInEnvironmentVariableInput` via:
//
//	ApplicationBuiltInEnvironmentVariableArgs{...}
type ApplicationBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToApplicationBuiltInEnvironmentVariableOutput() ApplicationBuiltInEnvironmentVariableOutput
	ToApplicationBuiltInEnvironmentVariableOutputWithContext(context.Context) ApplicationBuiltInEnvironmentVariableOutput
}

type ApplicationBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i ApplicationBuiltInEnvironmentVariableArgs) ToApplicationBuiltInEnvironmentVariableOutput() ApplicationBuiltInEnvironmentVariableOutput {
	return i.ToApplicationBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i ApplicationBuiltInEnvironmentVariableArgs) ToApplicationBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) ApplicationBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationBuiltInEnvironmentVariableOutput)
}

// ApplicationBuiltInEnvironmentVariableArrayInput is an input type that accepts ApplicationBuiltInEnvironmentVariableArray and ApplicationBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ApplicationBuiltInEnvironmentVariableArrayInput` via:
//
//	ApplicationBuiltInEnvironmentVariableArray{ ApplicationBuiltInEnvironmentVariableArgs{...} }
type ApplicationBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToApplicationBuiltInEnvironmentVariableArrayOutput() ApplicationBuiltInEnvironmentVariableArrayOutput
	ToApplicationBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) ApplicationBuiltInEnvironmentVariableArrayOutput
}

type ApplicationBuiltInEnvironmentVariableArray []ApplicationBuiltInEnvironmentVariableInput

func (ApplicationBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i ApplicationBuiltInEnvironmentVariableArray) ToApplicationBuiltInEnvironmentVariableArrayOutput() ApplicationBuiltInEnvironmentVariableArrayOutput {
	return i.ToApplicationBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ApplicationBuiltInEnvironmentVariableArray) ToApplicationBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApplicationBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationBuiltInEnvironmentVariableArrayOutput)
}

type ApplicationBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ApplicationBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o ApplicationBuiltInEnvironmentVariableOutput) ToApplicationBuiltInEnvironmentVariableOutput() ApplicationBuiltInEnvironmentVariableOutput {
	return o
}

func (o ApplicationBuiltInEnvironmentVariableOutput) ToApplicationBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) ApplicationBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o ApplicationBuiltInEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationBuiltInEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o ApplicationBuiltInEnvironmentVariableOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationBuiltInEnvironmentVariable) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value of the environment variable.
func (o ApplicationBuiltInEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationBuiltInEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ApplicationBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o ApplicationBuiltInEnvironmentVariableArrayOutput) ToApplicationBuiltInEnvironmentVariableArrayOutput() ApplicationBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o ApplicationBuiltInEnvironmentVariableArrayOutput) ToApplicationBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApplicationBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o ApplicationBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ApplicationBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationBuiltInEnvironmentVariable {
		return vs[0].([]ApplicationBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(ApplicationBuiltInEnvironmentVariableOutput)
}

type ApplicationCustomDomain struct {
	// Your custom domain.
	Domain string `pulumi:"domain"`
	// Id of the custom domain.
	Id *string `pulumi:"id"`
	// Status of the custom domain.
	Status *string `pulumi:"status"`
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
	ValidationDomain *string `pulumi:"validationDomain"`
}

// ApplicationCustomDomainInput is an input type that accepts ApplicationCustomDomainArgs and ApplicationCustomDomainOutput values.
// You can construct a concrete instance of `ApplicationCustomDomainInput` via:
//
//	ApplicationCustomDomainArgs{...}
type ApplicationCustomDomainInput interface {
	pulumi.Input

	ToApplicationCustomDomainOutput() ApplicationCustomDomainOutput
	ToApplicationCustomDomainOutputWithContext(context.Context) ApplicationCustomDomainOutput
}

type ApplicationCustomDomainArgs struct {
	// Your custom domain.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Id of the custom domain.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Status of the custom domain.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
	ValidationDomain pulumi.StringPtrInput `pulumi:"validationDomain"`
}

func (ApplicationCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationCustomDomain)(nil)).Elem()
}

func (i ApplicationCustomDomainArgs) ToApplicationCustomDomainOutput() ApplicationCustomDomainOutput {
	return i.ToApplicationCustomDomainOutputWithContext(context.Background())
}

func (i ApplicationCustomDomainArgs) ToApplicationCustomDomainOutputWithContext(ctx context.Context) ApplicationCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCustomDomainOutput)
}

// ApplicationCustomDomainArrayInput is an input type that accepts ApplicationCustomDomainArray and ApplicationCustomDomainArrayOutput values.
// You can construct a concrete instance of `ApplicationCustomDomainArrayInput` via:
//
//	ApplicationCustomDomainArray{ ApplicationCustomDomainArgs{...} }
type ApplicationCustomDomainArrayInput interface {
	pulumi.Input

	ToApplicationCustomDomainArrayOutput() ApplicationCustomDomainArrayOutput
	ToApplicationCustomDomainArrayOutputWithContext(context.Context) ApplicationCustomDomainArrayOutput
}

type ApplicationCustomDomainArray []ApplicationCustomDomainInput

func (ApplicationCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationCustomDomain)(nil)).Elem()
}

func (i ApplicationCustomDomainArray) ToApplicationCustomDomainArrayOutput() ApplicationCustomDomainArrayOutput {
	return i.ToApplicationCustomDomainArrayOutputWithContext(context.Background())
}

func (i ApplicationCustomDomainArray) ToApplicationCustomDomainArrayOutputWithContext(ctx context.Context) ApplicationCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCustomDomainArrayOutput)
}

type ApplicationCustomDomainOutput struct{ *pulumi.OutputState }

func (ApplicationCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationCustomDomain)(nil)).Elem()
}

func (o ApplicationCustomDomainOutput) ToApplicationCustomDomainOutput() ApplicationCustomDomainOutput {
	return o
}

func (o ApplicationCustomDomainOutput) ToApplicationCustomDomainOutputWithContext(ctx context.Context) ApplicationCustomDomainOutput {
	return o
}

// Your custom domain.
func (o ApplicationCustomDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationCustomDomain) string { return v.Domain }).(pulumi.StringOutput)
}

// Id of the custom domain.
func (o ApplicationCustomDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationCustomDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Status of the custom domain.
func (o ApplicationCustomDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationCustomDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
func (o ApplicationCustomDomainOutput) ValidationDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationCustomDomain) *string { return v.ValidationDomain }).(pulumi.StringPtrOutput)
}

type ApplicationCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (ApplicationCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationCustomDomain)(nil)).Elem()
}

func (o ApplicationCustomDomainArrayOutput) ToApplicationCustomDomainArrayOutput() ApplicationCustomDomainArrayOutput {
	return o
}

func (o ApplicationCustomDomainArrayOutput) ToApplicationCustomDomainArrayOutputWithContext(ctx context.Context) ApplicationCustomDomainArrayOutput {
	return o
}

func (o ApplicationCustomDomainArrayOutput) Index(i pulumi.IntInput) ApplicationCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationCustomDomain {
		return vs[0].([]ApplicationCustomDomain)[vs[1].(int)]
	}).(ApplicationCustomDomainOutput)
}

type ApplicationDeploymentRestriction struct {
	// Id of the deployment restriction
	Id *string `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode string `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type string `pulumi:"type"`
	// Value of the deployment restriction
	Value string `pulumi:"value"`
}

// ApplicationDeploymentRestrictionInput is an input type that accepts ApplicationDeploymentRestrictionArgs and ApplicationDeploymentRestrictionOutput values.
// You can construct a concrete instance of `ApplicationDeploymentRestrictionInput` via:
//
//	ApplicationDeploymentRestrictionArgs{...}
type ApplicationDeploymentRestrictionInput interface {
	pulumi.Input

	ToApplicationDeploymentRestrictionOutput() ApplicationDeploymentRestrictionOutput
	ToApplicationDeploymentRestrictionOutputWithContext(context.Context) ApplicationDeploymentRestrictionOutput
}

type ApplicationDeploymentRestrictionArgs struct {
	// Id of the deployment restriction
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode pulumi.StringInput `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the deployment restriction
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationDeploymentRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDeploymentRestriction)(nil)).Elem()
}

func (i ApplicationDeploymentRestrictionArgs) ToApplicationDeploymentRestrictionOutput() ApplicationDeploymentRestrictionOutput {
	return i.ToApplicationDeploymentRestrictionOutputWithContext(context.Background())
}

func (i ApplicationDeploymentRestrictionArgs) ToApplicationDeploymentRestrictionOutputWithContext(ctx context.Context) ApplicationDeploymentRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDeploymentRestrictionOutput)
}

// ApplicationDeploymentRestrictionArrayInput is an input type that accepts ApplicationDeploymentRestrictionArray and ApplicationDeploymentRestrictionArrayOutput values.
// You can construct a concrete instance of `ApplicationDeploymentRestrictionArrayInput` via:
//
//	ApplicationDeploymentRestrictionArray{ ApplicationDeploymentRestrictionArgs{...} }
type ApplicationDeploymentRestrictionArrayInput interface {
	pulumi.Input

	ToApplicationDeploymentRestrictionArrayOutput() ApplicationDeploymentRestrictionArrayOutput
	ToApplicationDeploymentRestrictionArrayOutputWithContext(context.Context) ApplicationDeploymentRestrictionArrayOutput
}

type ApplicationDeploymentRestrictionArray []ApplicationDeploymentRestrictionInput

func (ApplicationDeploymentRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationDeploymentRestriction)(nil)).Elem()
}

func (i ApplicationDeploymentRestrictionArray) ToApplicationDeploymentRestrictionArrayOutput() ApplicationDeploymentRestrictionArrayOutput {
	return i.ToApplicationDeploymentRestrictionArrayOutputWithContext(context.Background())
}

func (i ApplicationDeploymentRestrictionArray) ToApplicationDeploymentRestrictionArrayOutputWithContext(ctx context.Context) ApplicationDeploymentRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDeploymentRestrictionArrayOutput)
}

type ApplicationDeploymentRestrictionOutput struct{ *pulumi.OutputState }

func (ApplicationDeploymentRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDeploymentRestriction)(nil)).Elem()
}

func (o ApplicationDeploymentRestrictionOutput) ToApplicationDeploymentRestrictionOutput() ApplicationDeploymentRestrictionOutput {
	return o
}

func (o ApplicationDeploymentRestrictionOutput) ToApplicationDeploymentRestrictionOutputWithContext(ctx context.Context) ApplicationDeploymentRestrictionOutput {
	return o
}

// Id of the deployment restriction
func (o ApplicationDeploymentRestrictionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDeploymentRestriction) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Can be EXCLUDE or MATCH
func (o ApplicationDeploymentRestrictionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationDeploymentRestriction) string { return v.Mode }).(pulumi.StringOutput)
}

// Currently, only PATH is accepted
func (o ApplicationDeploymentRestrictionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationDeploymentRestriction) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the deployment restriction
func (o ApplicationDeploymentRestrictionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationDeploymentRestriction) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationDeploymentRestrictionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationDeploymentRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationDeploymentRestriction)(nil)).Elem()
}

func (o ApplicationDeploymentRestrictionArrayOutput) ToApplicationDeploymentRestrictionArrayOutput() ApplicationDeploymentRestrictionArrayOutput {
	return o
}

func (o ApplicationDeploymentRestrictionArrayOutput) ToApplicationDeploymentRestrictionArrayOutputWithContext(ctx context.Context) ApplicationDeploymentRestrictionArrayOutput {
	return o
}

func (o ApplicationDeploymentRestrictionArrayOutput) Index(i pulumi.IntInput) ApplicationDeploymentRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationDeploymentRestriction {
		return vs[0].([]ApplicationDeploymentRestriction)[vs[1].(int)]
	}).(ApplicationDeploymentRestrictionOutput)
}

type ApplicationEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// ApplicationEnvironmentVariableInput is an input type that accepts ApplicationEnvironmentVariableArgs and ApplicationEnvironmentVariableOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentVariableInput` via:
//
//	ApplicationEnvironmentVariableArgs{...}
type ApplicationEnvironmentVariableInput interface {
	pulumi.Input

	ToApplicationEnvironmentVariableOutput() ApplicationEnvironmentVariableOutput
	ToApplicationEnvironmentVariableOutputWithContext(context.Context) ApplicationEnvironmentVariableOutput
}

type ApplicationEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironmentVariable)(nil)).Elem()
}

func (i ApplicationEnvironmentVariableArgs) ToApplicationEnvironmentVariableOutput() ApplicationEnvironmentVariableOutput {
	return i.ToApplicationEnvironmentVariableOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentVariableArgs) ToApplicationEnvironmentVariableOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentVariableOutput)
}

// ApplicationEnvironmentVariableArrayInput is an input type that accepts ApplicationEnvironmentVariableArray and ApplicationEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentVariableArrayInput` via:
//
//	ApplicationEnvironmentVariableArray{ ApplicationEnvironmentVariableArgs{...} }
type ApplicationEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToApplicationEnvironmentVariableArrayOutput() ApplicationEnvironmentVariableArrayOutput
	ToApplicationEnvironmentVariableArrayOutputWithContext(context.Context) ApplicationEnvironmentVariableArrayOutput
}

type ApplicationEnvironmentVariableArray []ApplicationEnvironmentVariableInput

func (ApplicationEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironmentVariable)(nil)).Elem()
}

func (i ApplicationEnvironmentVariableArray) ToApplicationEnvironmentVariableArrayOutput() ApplicationEnvironmentVariableArrayOutput {
	return i.ToApplicationEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentVariableArray) ToApplicationEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentVariableArrayOutput)
}

type ApplicationEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironmentVariable)(nil)).Elem()
}

func (o ApplicationEnvironmentVariableOutput) ToApplicationEnvironmentVariableOutput() ApplicationEnvironmentVariableOutput {
	return o
}

func (o ApplicationEnvironmentVariableOutput) ToApplicationEnvironmentVariableOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o ApplicationEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o ApplicationEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o ApplicationEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironmentVariable)(nil)).Elem()
}

func (o ApplicationEnvironmentVariableArrayOutput) ToApplicationEnvironmentVariableArrayOutput() ApplicationEnvironmentVariableArrayOutput {
	return o
}

func (o ApplicationEnvironmentVariableArrayOutput) ToApplicationEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableArrayOutput {
	return o
}

func (o ApplicationEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ApplicationEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationEnvironmentVariable {
		return vs[0].([]ApplicationEnvironmentVariable)[vs[1].(int)]
	}).(ApplicationEnvironmentVariableOutput)
}

type ApplicationEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id *string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// ApplicationEnvironmentVariableAliasInput is an input type that accepts ApplicationEnvironmentVariableAliasArgs and ApplicationEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentVariableAliasInput` via:
//
//	ApplicationEnvironmentVariableAliasArgs{...}
type ApplicationEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToApplicationEnvironmentVariableAliasOutput() ApplicationEnvironmentVariableAliasOutput
	ToApplicationEnvironmentVariableAliasOutputWithContext(context.Context) ApplicationEnvironmentVariableAliasOutput
}

type ApplicationEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironmentVariableAlias)(nil)).Elem()
}

func (i ApplicationEnvironmentVariableAliasArgs) ToApplicationEnvironmentVariableAliasOutput() ApplicationEnvironmentVariableAliasOutput {
	return i.ToApplicationEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentVariableAliasArgs) ToApplicationEnvironmentVariableAliasOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentVariableAliasOutput)
}

// ApplicationEnvironmentVariableAliasArrayInput is an input type that accepts ApplicationEnvironmentVariableAliasArray and ApplicationEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentVariableAliasArrayInput` via:
//
//	ApplicationEnvironmentVariableAliasArray{ ApplicationEnvironmentVariableAliasArgs{...} }
type ApplicationEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToApplicationEnvironmentVariableAliasArrayOutput() ApplicationEnvironmentVariableAliasArrayOutput
	ToApplicationEnvironmentVariableAliasArrayOutputWithContext(context.Context) ApplicationEnvironmentVariableAliasArrayOutput
}

type ApplicationEnvironmentVariableAliasArray []ApplicationEnvironmentVariableAliasInput

func (ApplicationEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironmentVariableAlias)(nil)).Elem()
}

func (i ApplicationEnvironmentVariableAliasArray) ToApplicationEnvironmentVariableAliasArrayOutput() ApplicationEnvironmentVariableAliasArrayOutput {
	return i.ToApplicationEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentVariableAliasArray) ToApplicationEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentVariableAliasArrayOutput)
}

type ApplicationEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironmentVariableAlias)(nil)).Elem()
}

func (o ApplicationEnvironmentVariableAliasOutput) ToApplicationEnvironmentVariableAliasOutput() ApplicationEnvironmentVariableAliasOutput {
	return o
}

func (o ApplicationEnvironmentVariableAliasOutput) ToApplicationEnvironmentVariableAliasOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o ApplicationEnvironmentVariableAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariableAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable alias.
func (o ApplicationEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o ApplicationEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironmentVariableAlias)(nil)).Elem()
}

func (o ApplicationEnvironmentVariableAliasArrayOutput) ToApplicationEnvironmentVariableAliasArrayOutput() ApplicationEnvironmentVariableAliasArrayOutput {
	return o
}

func (o ApplicationEnvironmentVariableAliasArrayOutput) ToApplicationEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableAliasArrayOutput {
	return o
}

func (o ApplicationEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) ApplicationEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationEnvironmentVariableAlias {
		return vs[0].([]ApplicationEnvironmentVariableAlias)[vs[1].(int)]
	}).(ApplicationEnvironmentVariableAliasOutput)
}

type ApplicationEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id *string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// ApplicationEnvironmentVariableOverrideInput is an input type that accepts ApplicationEnvironmentVariableOverrideArgs and ApplicationEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentVariableOverrideInput` via:
//
//	ApplicationEnvironmentVariableOverrideArgs{...}
type ApplicationEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToApplicationEnvironmentVariableOverrideOutput() ApplicationEnvironmentVariableOverrideOutput
	ToApplicationEnvironmentVariableOverrideOutputWithContext(context.Context) ApplicationEnvironmentVariableOverrideOutput
}

type ApplicationEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironmentVariableOverride)(nil)).Elem()
}

func (i ApplicationEnvironmentVariableOverrideArgs) ToApplicationEnvironmentVariableOverrideOutput() ApplicationEnvironmentVariableOverrideOutput {
	return i.ToApplicationEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentVariableOverrideArgs) ToApplicationEnvironmentVariableOverrideOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentVariableOverrideOutput)
}

// ApplicationEnvironmentVariableOverrideArrayInput is an input type that accepts ApplicationEnvironmentVariableOverrideArray and ApplicationEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentVariableOverrideArrayInput` via:
//
//	ApplicationEnvironmentVariableOverrideArray{ ApplicationEnvironmentVariableOverrideArgs{...} }
type ApplicationEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToApplicationEnvironmentVariableOverrideArrayOutput() ApplicationEnvironmentVariableOverrideArrayOutput
	ToApplicationEnvironmentVariableOverrideArrayOutputWithContext(context.Context) ApplicationEnvironmentVariableOverrideArrayOutput
}

type ApplicationEnvironmentVariableOverrideArray []ApplicationEnvironmentVariableOverrideInput

func (ApplicationEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironmentVariableOverride)(nil)).Elem()
}

func (i ApplicationEnvironmentVariableOverrideArray) ToApplicationEnvironmentVariableOverrideArrayOutput() ApplicationEnvironmentVariableOverrideArrayOutput {
	return i.ToApplicationEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentVariableOverrideArray) ToApplicationEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentVariableOverrideArrayOutput)
}

type ApplicationEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironmentVariableOverride)(nil)).Elem()
}

func (o ApplicationEnvironmentVariableOverrideOutput) ToApplicationEnvironmentVariableOverrideOutput() ApplicationEnvironmentVariableOverrideOutput {
	return o
}

func (o ApplicationEnvironmentVariableOverrideOutput) ToApplicationEnvironmentVariableOverrideOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o ApplicationEnvironmentVariableOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariableOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable override.
func (o ApplicationEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o ApplicationEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironmentVariableOverride)(nil)).Elem()
}

func (o ApplicationEnvironmentVariableOverrideArrayOutput) ToApplicationEnvironmentVariableOverrideArrayOutput() ApplicationEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o ApplicationEnvironmentVariableOverrideArrayOutput) ToApplicationEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o ApplicationEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) ApplicationEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationEnvironmentVariableOverride {
		return vs[0].([]ApplicationEnvironmentVariableOverride)[vs[1].(int)]
	}).(ApplicationEnvironmentVariableOverrideOutput)
}

type ApplicationGitRepository struct {
	// Branch of the git repository.
	// 	- Default: `main or master (depending on repository)`.
	Branch *string `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId *string `pulumi:"gitTokenId"`
	// Root path of the application.
	// 	- Default: `/`.
	RootPath *string `pulumi:"rootPath"`
	// URL of the git repository.
	Url string `pulumi:"url"`
}

// ApplicationGitRepositoryInput is an input type that accepts ApplicationGitRepositoryArgs and ApplicationGitRepositoryOutput values.
// You can construct a concrete instance of `ApplicationGitRepositoryInput` via:
//
//	ApplicationGitRepositoryArgs{...}
type ApplicationGitRepositoryInput interface {
	pulumi.Input

	ToApplicationGitRepositoryOutput() ApplicationGitRepositoryOutput
	ToApplicationGitRepositoryOutputWithContext(context.Context) ApplicationGitRepositoryOutput
}

type ApplicationGitRepositoryArgs struct {
	// Branch of the git repository.
	// 	- Default: `main or master (depending on repository)`.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId pulumi.StringPtrInput `pulumi:"gitTokenId"`
	// Root path of the application.
	// 	- Default: `/`.
	RootPath pulumi.StringPtrInput `pulumi:"rootPath"`
	// URL of the git repository.
	Url pulumi.StringInput `pulumi:"url"`
}

func (ApplicationGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGitRepository)(nil)).Elem()
}

func (i ApplicationGitRepositoryArgs) ToApplicationGitRepositoryOutput() ApplicationGitRepositoryOutput {
	return i.ToApplicationGitRepositoryOutputWithContext(context.Background())
}

func (i ApplicationGitRepositoryArgs) ToApplicationGitRepositoryOutputWithContext(ctx context.Context) ApplicationGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGitRepositoryOutput)
}

func (i ApplicationGitRepositoryArgs) ToApplicationGitRepositoryPtrOutput() ApplicationGitRepositoryPtrOutput {
	return i.ToApplicationGitRepositoryPtrOutputWithContext(context.Background())
}

func (i ApplicationGitRepositoryArgs) ToApplicationGitRepositoryPtrOutputWithContext(ctx context.Context) ApplicationGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGitRepositoryOutput).ToApplicationGitRepositoryPtrOutputWithContext(ctx)
}

// ApplicationGitRepositoryPtrInput is an input type that accepts ApplicationGitRepositoryArgs, ApplicationGitRepositoryPtr and ApplicationGitRepositoryPtrOutput values.
// You can construct a concrete instance of `ApplicationGitRepositoryPtrInput` via:
//
//	        ApplicationGitRepositoryArgs{...}
//
//	or:
//
//	        nil
type ApplicationGitRepositoryPtrInput interface {
	pulumi.Input

	ToApplicationGitRepositoryPtrOutput() ApplicationGitRepositoryPtrOutput
	ToApplicationGitRepositoryPtrOutputWithContext(context.Context) ApplicationGitRepositoryPtrOutput
}

type applicationGitRepositoryPtrType ApplicationGitRepositoryArgs

func ApplicationGitRepositoryPtr(v *ApplicationGitRepositoryArgs) ApplicationGitRepositoryPtrInput {
	return (*applicationGitRepositoryPtrType)(v)
}

func (*applicationGitRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGitRepository)(nil)).Elem()
}

func (i *applicationGitRepositoryPtrType) ToApplicationGitRepositoryPtrOutput() ApplicationGitRepositoryPtrOutput {
	return i.ToApplicationGitRepositoryPtrOutputWithContext(context.Background())
}

func (i *applicationGitRepositoryPtrType) ToApplicationGitRepositoryPtrOutputWithContext(ctx context.Context) ApplicationGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGitRepositoryPtrOutput)
}

type ApplicationGitRepositoryOutput struct{ *pulumi.OutputState }

func (ApplicationGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGitRepository)(nil)).Elem()
}

func (o ApplicationGitRepositoryOutput) ToApplicationGitRepositoryOutput() ApplicationGitRepositoryOutput {
	return o
}

func (o ApplicationGitRepositoryOutput) ToApplicationGitRepositoryOutputWithContext(ctx context.Context) ApplicationGitRepositoryOutput {
	return o
}

func (o ApplicationGitRepositoryOutput) ToApplicationGitRepositoryPtrOutput() ApplicationGitRepositoryPtrOutput {
	return o.ToApplicationGitRepositoryPtrOutputWithContext(context.Background())
}

func (o ApplicationGitRepositoryOutput) ToApplicationGitRepositoryPtrOutputWithContext(ctx context.Context) ApplicationGitRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGitRepository) *ApplicationGitRepository {
		return &v
	}).(ApplicationGitRepositoryPtrOutput)
}

// Branch of the git repository.
//   - Default: `main or master (depending on repository)`.
func (o ApplicationGitRepositoryOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGitRepository) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The git token ID to be used
func (o ApplicationGitRepositoryOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGitRepository) *string { return v.GitTokenId }).(pulumi.StringPtrOutput)
}

// Root path of the application.
//   - Default: `/`.
func (o ApplicationGitRepositoryOutput) RootPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGitRepository) *string { return v.RootPath }).(pulumi.StringPtrOutput)
}

// URL of the git repository.
func (o ApplicationGitRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGitRepository) string { return v.Url }).(pulumi.StringOutput)
}

type ApplicationGitRepositoryPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGitRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGitRepository)(nil)).Elem()
}

func (o ApplicationGitRepositoryPtrOutput) ToApplicationGitRepositoryPtrOutput() ApplicationGitRepositoryPtrOutput {
	return o
}

func (o ApplicationGitRepositoryPtrOutput) ToApplicationGitRepositoryPtrOutputWithContext(ctx context.Context) ApplicationGitRepositoryPtrOutput {
	return o
}

func (o ApplicationGitRepositoryPtrOutput) Elem() ApplicationGitRepositoryOutput {
	return o.ApplyT(func(v *ApplicationGitRepository) ApplicationGitRepository {
		if v != nil {
			return *v
		}
		var ret ApplicationGitRepository
		return ret
	}).(ApplicationGitRepositoryOutput)
}

// Branch of the git repository.
//   - Default: `main or master (depending on repository)`.
func (o ApplicationGitRepositoryPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The git token ID to be used
func (o ApplicationGitRepositoryPtrOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.GitTokenId
	}).(pulumi.StringPtrOutput)
}

// Root path of the application.
//   - Default: `/`.
func (o ApplicationGitRepositoryPtrOutput) RootPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.RootPath
	}).(pulumi.StringPtrOutput)
}

// URL of the git repository.
func (o ApplicationGitRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type ApplicationHealthchecks struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe *ApplicationHealthchecksLivenessProbe `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe *ApplicationHealthchecksReadinessProbe `pulumi:"readinessProbe"`
}

// ApplicationHealthchecksInput is an input type that accepts ApplicationHealthchecksArgs and ApplicationHealthchecksOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksInput` via:
//
//	ApplicationHealthchecksArgs{...}
type ApplicationHealthchecksInput interface {
	pulumi.Input

	ToApplicationHealthchecksOutput() ApplicationHealthchecksOutput
	ToApplicationHealthchecksOutputWithContext(context.Context) ApplicationHealthchecksOutput
}

type ApplicationHealthchecksArgs struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe ApplicationHealthchecksLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe ApplicationHealthchecksReadinessProbePtrInput `pulumi:"readinessProbe"`
}

func (ApplicationHealthchecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecks)(nil)).Elem()
}

func (i ApplicationHealthchecksArgs) ToApplicationHealthchecksOutput() ApplicationHealthchecksOutput {
	return i.ToApplicationHealthchecksOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksArgs) ToApplicationHealthchecksOutputWithContext(ctx context.Context) ApplicationHealthchecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksOutput)
}

func (i ApplicationHealthchecksArgs) ToApplicationHealthchecksPtrOutput() ApplicationHealthchecksPtrOutput {
	return i.ToApplicationHealthchecksPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksArgs) ToApplicationHealthchecksPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksOutput).ToApplicationHealthchecksPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksPtrInput is an input type that accepts ApplicationHealthchecksArgs, ApplicationHealthchecksPtr and ApplicationHealthchecksPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksPtrInput` via:
//
//	        ApplicationHealthchecksArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksPtrOutput() ApplicationHealthchecksPtrOutput
	ToApplicationHealthchecksPtrOutputWithContext(context.Context) ApplicationHealthchecksPtrOutput
}

type applicationHealthchecksPtrType ApplicationHealthchecksArgs

func ApplicationHealthchecksPtr(v *ApplicationHealthchecksArgs) ApplicationHealthchecksPtrInput {
	return (*applicationHealthchecksPtrType)(v)
}

func (*applicationHealthchecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecks)(nil)).Elem()
}

func (i *applicationHealthchecksPtrType) ToApplicationHealthchecksPtrOutput() ApplicationHealthchecksPtrOutput {
	return i.ToApplicationHealthchecksPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksPtrType) ToApplicationHealthchecksPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksPtrOutput)
}

type ApplicationHealthchecksOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecks)(nil)).Elem()
}

func (o ApplicationHealthchecksOutput) ToApplicationHealthchecksOutput() ApplicationHealthchecksOutput {
	return o
}

func (o ApplicationHealthchecksOutput) ToApplicationHealthchecksOutputWithContext(ctx context.Context) ApplicationHealthchecksOutput {
	return o
}

func (o ApplicationHealthchecksOutput) ToApplicationHealthchecksPtrOutput() ApplicationHealthchecksPtrOutput {
	return o.ToApplicationHealthchecksPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksOutput) ToApplicationHealthchecksPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecks) *ApplicationHealthchecks {
		return &v
	}).(ApplicationHealthchecksPtrOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o ApplicationHealthchecksOutput) LivenessProbe() ApplicationHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecks) *ApplicationHealthchecksLivenessProbe { return v.LivenessProbe }).(ApplicationHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o ApplicationHealthchecksOutput) ReadinessProbe() ApplicationHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecks) *ApplicationHealthchecksReadinessProbe { return v.ReadinessProbe }).(ApplicationHealthchecksReadinessProbePtrOutput)
}

type ApplicationHealthchecksPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecks)(nil)).Elem()
}

func (o ApplicationHealthchecksPtrOutput) ToApplicationHealthchecksPtrOutput() ApplicationHealthchecksPtrOutput {
	return o
}

func (o ApplicationHealthchecksPtrOutput) ToApplicationHealthchecksPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksPtrOutput {
	return o
}

func (o ApplicationHealthchecksPtrOutput) Elem() ApplicationHealthchecksOutput {
	return o.ApplyT(func(v *ApplicationHealthchecks) ApplicationHealthchecks {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecks
		return ret
	}).(ApplicationHealthchecksOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o ApplicationHealthchecksPtrOutput) LivenessProbe() ApplicationHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecks) *ApplicationHealthchecksLivenessProbe {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(ApplicationHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o ApplicationHealthchecksPtrOutput) ReadinessProbe() ApplicationHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecks) *ApplicationHealthchecksReadinessProbe {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(ApplicationHealthchecksReadinessProbePtrOutput)
}

type ApplicationHealthchecksLivenessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type ApplicationHealthchecksLivenessProbeType `pulumi:"type"`
}

// ApplicationHealthchecksLivenessProbeInput is an input type that accepts ApplicationHealthchecksLivenessProbeArgs and ApplicationHealthchecksLivenessProbeOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeInput` via:
//
//	ApplicationHealthchecksLivenessProbeArgs{...}
type ApplicationHealthchecksLivenessProbeInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeOutput() ApplicationHealthchecksLivenessProbeOutput
	ToApplicationHealthchecksLivenessProbeOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeOutput
}

type ApplicationHealthchecksLivenessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type ApplicationHealthchecksLivenessProbeTypeInput `pulumi:"type"`
}

func (ApplicationHealthchecksLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbe)(nil)).Elem()
}

func (i ApplicationHealthchecksLivenessProbeArgs) ToApplicationHealthchecksLivenessProbeOutput() ApplicationHealthchecksLivenessProbeOutput {
	return i.ToApplicationHealthchecksLivenessProbeOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeArgs) ToApplicationHealthchecksLivenessProbeOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeOutput)
}

func (i ApplicationHealthchecksLivenessProbeArgs) ToApplicationHealthchecksLivenessProbePtrOutput() ApplicationHealthchecksLivenessProbePtrOutput {
	return i.ToApplicationHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeArgs) ToApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeOutput).ToApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx)
}

// ApplicationHealthchecksLivenessProbePtrInput is an input type that accepts ApplicationHealthchecksLivenessProbeArgs, ApplicationHealthchecksLivenessProbePtr and ApplicationHealthchecksLivenessProbePtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbePtrInput` via:
//
//	        ApplicationHealthchecksLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksLivenessProbePtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbePtrOutput() ApplicationHealthchecksLivenessProbePtrOutput
	ToApplicationHealthchecksLivenessProbePtrOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbePtrOutput
}

type applicationHealthchecksLivenessProbePtrType ApplicationHealthchecksLivenessProbeArgs

func ApplicationHealthchecksLivenessProbePtr(v *ApplicationHealthchecksLivenessProbeArgs) ApplicationHealthchecksLivenessProbePtrInput {
	return (*applicationHealthchecksLivenessProbePtrType)(v)
}

func (*applicationHealthchecksLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbe)(nil)).Elem()
}

func (i *applicationHealthchecksLivenessProbePtrType) ToApplicationHealthchecksLivenessProbePtrOutput() ApplicationHealthchecksLivenessProbePtrOutput {
	return i.ToApplicationHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksLivenessProbePtrType) ToApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbePtrOutput)
}

type ApplicationHealthchecksLivenessProbeOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbe)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeOutput) ToApplicationHealthchecksLivenessProbeOutput() ApplicationHealthchecksLivenessProbeOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeOutput) ToApplicationHealthchecksLivenessProbeOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeOutput) ToApplicationHealthchecksLivenessProbePtrOutput() ApplicationHealthchecksLivenessProbePtrOutput {
	return o.ToApplicationHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksLivenessProbeOutput) ToApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksLivenessProbe) *ApplicationHealthchecksLivenessProbe {
		return &v
	}).(ApplicationHealthchecksLivenessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o ApplicationHealthchecksLivenessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o ApplicationHealthchecksLivenessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o ApplicationHealthchecksLivenessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o ApplicationHealthchecksLivenessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o ApplicationHealthchecksLivenessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o ApplicationHealthchecksLivenessProbeOutput) Type() ApplicationHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbe) ApplicationHealthchecksLivenessProbeType { return v.Type }).(ApplicationHealthchecksLivenessProbeTypeOutput)
}

type ApplicationHealthchecksLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbe)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbePtrOutput) ToApplicationHealthchecksLivenessProbePtrOutput() ApplicationHealthchecksLivenessProbePtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbePtrOutput) ToApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbePtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbePtrOutput) Elem() ApplicationHealthchecksLivenessProbeOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbe) ApplicationHealthchecksLivenessProbe {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksLivenessProbe
		return ret
	}).(ApplicationHealthchecksLivenessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o ApplicationHealthchecksLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o ApplicationHealthchecksLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o ApplicationHealthchecksLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o ApplicationHealthchecksLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o ApplicationHealthchecksLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o ApplicationHealthchecksLivenessProbePtrOutput) Type() ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbe) *ApplicationHealthchecksLivenessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(ApplicationHealthchecksLivenessProbeTypePtrOutput)
}

type ApplicationHealthchecksLivenessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *ApplicationHealthchecksLivenessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *ApplicationHealthchecksLivenessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *ApplicationHealthchecksLivenessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *ApplicationHealthchecksLivenessProbeTypeTcp `pulumi:"tcp"`
}

// ApplicationHealthchecksLivenessProbeTypeInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeArgs and ApplicationHealthchecksLivenessProbeTypeOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeInput` via:
//
//	ApplicationHealthchecksLivenessProbeTypeArgs{...}
type ApplicationHealthchecksLivenessProbeTypeInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeOutput() ApplicationHealthchecksLivenessProbeTypeOutput
	ToApplicationHealthchecksLivenessProbeTypeOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeOutput
}

type ApplicationHealthchecksLivenessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec ApplicationHealthchecksLivenessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc ApplicationHealthchecksLivenessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http ApplicationHealthchecksLivenessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp ApplicationHealthchecksLivenessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (ApplicationHealthchecksLivenessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i ApplicationHealthchecksLivenessProbeTypeArgs) ToApplicationHealthchecksLivenessProbeTypeOutput() ApplicationHealthchecksLivenessProbeTypeOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeArgs) ToApplicationHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeOutput)
}

func (i ApplicationHealthchecksLivenessProbeTypeArgs) ToApplicationHealthchecksLivenessProbeTypePtrOutput() ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeArgs) ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeOutput).ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx)
}

// ApplicationHealthchecksLivenessProbeTypePtrInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeArgs, ApplicationHealthchecksLivenessProbeTypePtr and ApplicationHealthchecksLivenessProbeTypePtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypePtrInput` via:
//
//	        ApplicationHealthchecksLivenessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksLivenessProbeTypePtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypePtrOutput() ApplicationHealthchecksLivenessProbeTypePtrOutput
	ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypePtrOutput
}

type applicationHealthchecksLivenessProbeTypePtrType ApplicationHealthchecksLivenessProbeTypeArgs

func ApplicationHealthchecksLivenessProbeTypePtr(v *ApplicationHealthchecksLivenessProbeTypeArgs) ApplicationHealthchecksLivenessProbeTypePtrInput {
	return (*applicationHealthchecksLivenessProbeTypePtrType)(v)
}

func (*applicationHealthchecksLivenessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i *applicationHealthchecksLivenessProbeTypePtrType) ToApplicationHealthchecksLivenessProbeTypePtrOutput() ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksLivenessProbeTypePtrType) ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypePtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeOutput) ToApplicationHealthchecksLivenessProbeTypeOutput() ApplicationHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeOutput) ToApplicationHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeOutput) ToApplicationHealthchecksLivenessProbeTypePtrOutput() ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o.ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksLivenessProbeTypeOutput) ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeType {
		return &v
	}).(ApplicationHealthchecksLivenessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o ApplicationHealthchecksLivenessProbeTypeOutput) Exec() ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeTypeExec {
		return v.Exec
	}).(ApplicationHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o ApplicationHealthchecksLivenessProbeTypeOutput) Grpc() ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeTypeGrpc {
		return v.Grpc
	}).(ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o ApplicationHealthchecksLivenessProbeTypeOutput) Http() ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeTypeHttp {
		return v.Http
	}).(ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o ApplicationHealthchecksLivenessProbeTypeOutput) Tcp() ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeTypeTcp {
		return v.Tcp
	}).(ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypePtrOutput) ToApplicationHealthchecksLivenessProbeTypePtrOutput() ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypePtrOutput) ToApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypePtrOutput) Elem() ApplicationHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeType) ApplicationHealthchecksLivenessProbeType {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksLivenessProbeType
		return ret
	}).(ApplicationHealthchecksLivenessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o ApplicationHealthchecksLivenessProbeTypePtrOutput) Exec() ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ApplicationHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o ApplicationHealthchecksLivenessProbeTypePtrOutput) Grpc() ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o ApplicationHealthchecksLivenessProbeTypePtrOutput) Http() ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o ApplicationHealthchecksLivenessProbeTypePtrOutput) Tcp() ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeType) *ApplicationHealthchecksLivenessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// ApplicationHealthchecksLivenessProbeTypeExecInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeExecArgs and ApplicationHealthchecksLivenessProbeTypeExecOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeExecInput` via:
//
//	ApplicationHealthchecksLivenessProbeTypeExecArgs{...}
type ApplicationHealthchecksLivenessProbeTypeExecInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeExecOutput() ApplicationHealthchecksLivenessProbeTypeExecOutput
	ToApplicationHealthchecksLivenessProbeTypeExecOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeExecOutput
}

type ApplicationHealthchecksLivenessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (ApplicationHealthchecksLivenessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i ApplicationHealthchecksLivenessProbeTypeExecArgs) ToApplicationHealthchecksLivenessProbeTypeExecOutput() ApplicationHealthchecksLivenessProbeTypeExecOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeExecOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeExecArgs) ToApplicationHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeExecOutput)
}

func (i ApplicationHealthchecksLivenessProbeTypeExecArgs) ToApplicationHealthchecksLivenessProbeTypeExecPtrOutput() ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeExecArgs) ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeExecOutput).ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksLivenessProbeTypeExecPtrInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeExecArgs, ApplicationHealthchecksLivenessProbeTypeExecPtr and ApplicationHealthchecksLivenessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeExecPtrInput` via:
//
//	        ApplicationHealthchecksLivenessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksLivenessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeExecPtrOutput() ApplicationHealthchecksLivenessProbeTypeExecPtrOutput
	ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeExecPtrOutput
}

type applicationHealthchecksLivenessProbeTypeExecPtrType ApplicationHealthchecksLivenessProbeTypeExecArgs

func ApplicationHealthchecksLivenessProbeTypeExecPtr(v *ApplicationHealthchecksLivenessProbeTypeExecArgs) ApplicationHealthchecksLivenessProbeTypeExecPtrInput {
	return (*applicationHealthchecksLivenessProbeTypeExecPtrType)(v)
}

func (*applicationHealthchecksLivenessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i *applicationHealthchecksLivenessProbeTypeExecPtrType) ToApplicationHealthchecksLivenessProbeTypeExecPtrOutput() ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksLivenessProbeTypeExecPtrType) ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeExecPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeExecOutput) ToApplicationHealthchecksLivenessProbeTypeExecOutput() ApplicationHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeExecOutput) ToApplicationHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeExecOutput) ToApplicationHealthchecksLivenessProbeTypeExecPtrOutput() ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksLivenessProbeTypeExecOutput) ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksLivenessProbeTypeExec) *ApplicationHealthchecksLivenessProbeTypeExec {
		return &v
	}).(ApplicationHealthchecksLivenessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o ApplicationHealthchecksLivenessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type ApplicationHealthchecksLivenessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeExecPtrOutput) ToApplicationHealthchecksLivenessProbeTypeExecPtrOutput() ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeExecPtrOutput) ToApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeExecPtrOutput) Elem() ApplicationHealthchecksLivenessProbeTypeExecOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeExec) ApplicationHealthchecksLivenessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksLivenessProbeTypeExec
		return ret
	}).(ApplicationHealthchecksLivenessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o ApplicationHealthchecksLivenessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type ApplicationHealthchecksLivenessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// ApplicationHealthchecksLivenessProbeTypeGrpcInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeGrpcArgs and ApplicationHealthchecksLivenessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeGrpcInput` via:
//
//	ApplicationHealthchecksLivenessProbeTypeGrpcArgs{...}
type ApplicationHealthchecksLivenessProbeTypeGrpcInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeGrpcOutput() ApplicationHealthchecksLivenessProbeTypeGrpcOutput
	ToApplicationHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeGrpcOutput
}

type ApplicationHealthchecksLivenessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ApplicationHealthchecksLivenessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i ApplicationHealthchecksLivenessProbeTypeGrpcArgs) ToApplicationHealthchecksLivenessProbeTypeGrpcOutput() ApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeGrpcArgs) ToApplicationHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeGrpcOutput)
}

func (i ApplicationHealthchecksLivenessProbeTypeGrpcArgs) ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeGrpcArgs) ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeGrpcOutput).ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksLivenessProbeTypeGrpcPtrInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeGrpcArgs, ApplicationHealthchecksLivenessProbeTypeGrpcPtr and ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeGrpcPtrInput` via:
//
//	        ApplicationHealthchecksLivenessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksLivenessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput
	ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput
}

type applicationHealthchecksLivenessProbeTypeGrpcPtrType ApplicationHealthchecksLivenessProbeTypeGrpcArgs

func ApplicationHealthchecksLivenessProbeTypeGrpcPtr(v *ApplicationHealthchecksLivenessProbeTypeGrpcArgs) ApplicationHealthchecksLivenessProbeTypeGrpcPtrInput {
	return (*applicationHealthchecksLivenessProbeTypeGrpcPtrType)(v)
}

func (*applicationHealthchecksLivenessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i *applicationHealthchecksLivenessProbeTypeGrpcPtrType) ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksLivenessProbeTypeGrpcPtrType) ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeGrpcOutput) ToApplicationHealthchecksLivenessProbeTypeGrpcOutput() ApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeGrpcOutput) ToApplicationHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeGrpcOutput) ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksLivenessProbeTypeGrpcOutput) ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksLivenessProbeTypeGrpc) *ApplicationHealthchecksLivenessProbeTypeGrpc {
		return &v
	}).(ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksLivenessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o ApplicationHealthchecksLivenessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) ToApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) Elem() ApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeGrpc) ApplicationHealthchecksLivenessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksLivenessProbeTypeGrpc
		return ret
	}).(ApplicationHealthchecksLivenessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// ApplicationHealthchecksLivenessProbeTypeHttpInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeHttpArgs and ApplicationHealthchecksLivenessProbeTypeHttpOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeHttpInput` via:
//
//	ApplicationHealthchecksLivenessProbeTypeHttpArgs{...}
type ApplicationHealthchecksLivenessProbeTypeHttpInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeHttpOutput() ApplicationHealthchecksLivenessProbeTypeHttpOutput
	ToApplicationHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeHttpOutput
}

type ApplicationHealthchecksLivenessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (ApplicationHealthchecksLivenessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i ApplicationHealthchecksLivenessProbeTypeHttpArgs) ToApplicationHealthchecksLivenessProbeTypeHttpOutput() ApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeHttpArgs) ToApplicationHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeHttpOutput)
}

func (i ApplicationHealthchecksLivenessProbeTypeHttpArgs) ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeHttpArgs) ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeHttpOutput).ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksLivenessProbeTypeHttpPtrInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeHttpArgs, ApplicationHealthchecksLivenessProbeTypeHttpPtr and ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeHttpPtrInput` via:
//
//	        ApplicationHealthchecksLivenessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksLivenessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput
	ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput
}

type applicationHealthchecksLivenessProbeTypeHttpPtrType ApplicationHealthchecksLivenessProbeTypeHttpArgs

func ApplicationHealthchecksLivenessProbeTypeHttpPtr(v *ApplicationHealthchecksLivenessProbeTypeHttpArgs) ApplicationHealthchecksLivenessProbeTypeHttpPtrInput {
	return (*applicationHealthchecksLivenessProbeTypeHttpPtrType)(v)
}

func (*applicationHealthchecksLivenessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i *applicationHealthchecksLivenessProbeTypeHttpPtrType) ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksLivenessProbeTypeHttpPtrType) ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeHttpOutput) ToApplicationHealthchecksLivenessProbeTypeHttpOutput() ApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeHttpOutput) ToApplicationHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeHttpOutput) ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksLivenessProbeTypeHttpOutput) ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksLivenessProbeTypeHttp) *ApplicationHealthchecksLivenessProbeTypeHttp {
		return &v
	}).(ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o ApplicationHealthchecksLivenessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksLivenessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o ApplicationHealthchecksLivenessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) ToApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) Elem() ApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeHttp) ApplicationHealthchecksLivenessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksLivenessProbeTypeHttp
		return ret
	}).(ApplicationHealthchecksLivenessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// ApplicationHealthchecksLivenessProbeTypeTcpInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeTcpArgs and ApplicationHealthchecksLivenessProbeTypeTcpOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeTcpInput` via:
//
//	ApplicationHealthchecksLivenessProbeTypeTcpArgs{...}
type ApplicationHealthchecksLivenessProbeTypeTcpInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeTcpOutput() ApplicationHealthchecksLivenessProbeTypeTcpOutput
	ToApplicationHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeTcpOutput
}

type ApplicationHealthchecksLivenessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (ApplicationHealthchecksLivenessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i ApplicationHealthchecksLivenessProbeTypeTcpArgs) ToApplicationHealthchecksLivenessProbeTypeTcpOutput() ApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeTcpArgs) ToApplicationHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeTcpOutput)
}

func (i ApplicationHealthchecksLivenessProbeTypeTcpArgs) ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksLivenessProbeTypeTcpArgs) ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeTcpOutput).ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksLivenessProbeTypeTcpPtrInput is an input type that accepts ApplicationHealthchecksLivenessProbeTypeTcpArgs, ApplicationHealthchecksLivenessProbeTypeTcpPtr and ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksLivenessProbeTypeTcpPtrInput` via:
//
//	        ApplicationHealthchecksLivenessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksLivenessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput
	ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Context) ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput
}

type applicationHealthchecksLivenessProbeTypeTcpPtrType ApplicationHealthchecksLivenessProbeTypeTcpArgs

func ApplicationHealthchecksLivenessProbeTypeTcpPtr(v *ApplicationHealthchecksLivenessProbeTypeTcpArgs) ApplicationHealthchecksLivenessProbeTypeTcpPtrInput {
	return (*applicationHealthchecksLivenessProbeTypeTcpPtrType)(v)
}

func (*applicationHealthchecksLivenessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i *applicationHealthchecksLivenessProbeTypeTcpPtrType) ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksLivenessProbeTypeTcpPtrType) ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type ApplicationHealthchecksLivenessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeTcpOutput) ToApplicationHealthchecksLivenessProbeTypeTcpOutput() ApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeTcpOutput) ToApplicationHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeTcpOutput) ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksLivenessProbeTypeTcpOutput) ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksLivenessProbeTypeTcp) *ApplicationHealthchecksLivenessProbeTypeTcp {
		return &v
	}).(ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o ApplicationHealthchecksLivenessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksLivenessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksLivenessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) ToApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) Elem() ApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeTcp) ApplicationHealthchecksLivenessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksLivenessProbeTypeTcp
		return ret
	}).(ApplicationHealthchecksLivenessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksLivenessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ApplicationHealthchecksReadinessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type ApplicationHealthchecksReadinessProbeType `pulumi:"type"`
}

// ApplicationHealthchecksReadinessProbeInput is an input type that accepts ApplicationHealthchecksReadinessProbeArgs and ApplicationHealthchecksReadinessProbeOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeInput` via:
//
//	ApplicationHealthchecksReadinessProbeArgs{...}
type ApplicationHealthchecksReadinessProbeInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeOutput() ApplicationHealthchecksReadinessProbeOutput
	ToApplicationHealthchecksReadinessProbeOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeOutput
}

type ApplicationHealthchecksReadinessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type ApplicationHealthchecksReadinessProbeTypeInput `pulumi:"type"`
}

func (ApplicationHealthchecksReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbe)(nil)).Elem()
}

func (i ApplicationHealthchecksReadinessProbeArgs) ToApplicationHealthchecksReadinessProbeOutput() ApplicationHealthchecksReadinessProbeOutput {
	return i.ToApplicationHealthchecksReadinessProbeOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeArgs) ToApplicationHealthchecksReadinessProbeOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeOutput)
}

func (i ApplicationHealthchecksReadinessProbeArgs) ToApplicationHealthchecksReadinessProbePtrOutput() ApplicationHealthchecksReadinessProbePtrOutput {
	return i.ToApplicationHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeArgs) ToApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeOutput).ToApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx)
}

// ApplicationHealthchecksReadinessProbePtrInput is an input type that accepts ApplicationHealthchecksReadinessProbeArgs, ApplicationHealthchecksReadinessProbePtr and ApplicationHealthchecksReadinessProbePtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbePtrInput` via:
//
//	        ApplicationHealthchecksReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksReadinessProbePtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbePtrOutput() ApplicationHealthchecksReadinessProbePtrOutput
	ToApplicationHealthchecksReadinessProbePtrOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbePtrOutput
}

type applicationHealthchecksReadinessProbePtrType ApplicationHealthchecksReadinessProbeArgs

func ApplicationHealthchecksReadinessProbePtr(v *ApplicationHealthchecksReadinessProbeArgs) ApplicationHealthchecksReadinessProbePtrInput {
	return (*applicationHealthchecksReadinessProbePtrType)(v)
}

func (*applicationHealthchecksReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbe)(nil)).Elem()
}

func (i *applicationHealthchecksReadinessProbePtrType) ToApplicationHealthchecksReadinessProbePtrOutput() ApplicationHealthchecksReadinessProbePtrOutput {
	return i.ToApplicationHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksReadinessProbePtrType) ToApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbePtrOutput)
}

type ApplicationHealthchecksReadinessProbeOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbe)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeOutput) ToApplicationHealthchecksReadinessProbeOutput() ApplicationHealthchecksReadinessProbeOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeOutput) ToApplicationHealthchecksReadinessProbeOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeOutput) ToApplicationHealthchecksReadinessProbePtrOutput() ApplicationHealthchecksReadinessProbePtrOutput {
	return o.ToApplicationHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksReadinessProbeOutput) ToApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksReadinessProbe) *ApplicationHealthchecksReadinessProbe {
		return &v
	}).(ApplicationHealthchecksReadinessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o ApplicationHealthchecksReadinessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o ApplicationHealthchecksReadinessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o ApplicationHealthchecksReadinessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o ApplicationHealthchecksReadinessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o ApplicationHealthchecksReadinessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o ApplicationHealthchecksReadinessProbeOutput) Type() ApplicationHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbe) ApplicationHealthchecksReadinessProbeType { return v.Type }).(ApplicationHealthchecksReadinessProbeTypeOutput)
}

type ApplicationHealthchecksReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbe)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbePtrOutput) ToApplicationHealthchecksReadinessProbePtrOutput() ApplicationHealthchecksReadinessProbePtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbePtrOutput) ToApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbePtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbePtrOutput) Elem() ApplicationHealthchecksReadinessProbeOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbe) ApplicationHealthchecksReadinessProbe {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksReadinessProbe
		return ret
	}).(ApplicationHealthchecksReadinessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o ApplicationHealthchecksReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o ApplicationHealthchecksReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o ApplicationHealthchecksReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o ApplicationHealthchecksReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o ApplicationHealthchecksReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o ApplicationHealthchecksReadinessProbePtrOutput) Type() ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbe) *ApplicationHealthchecksReadinessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(ApplicationHealthchecksReadinessProbeTypePtrOutput)
}

type ApplicationHealthchecksReadinessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *ApplicationHealthchecksReadinessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *ApplicationHealthchecksReadinessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *ApplicationHealthchecksReadinessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *ApplicationHealthchecksReadinessProbeTypeTcp `pulumi:"tcp"`
}

// ApplicationHealthchecksReadinessProbeTypeInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeArgs and ApplicationHealthchecksReadinessProbeTypeOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeInput` via:
//
//	ApplicationHealthchecksReadinessProbeTypeArgs{...}
type ApplicationHealthchecksReadinessProbeTypeInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeOutput() ApplicationHealthchecksReadinessProbeTypeOutput
	ToApplicationHealthchecksReadinessProbeTypeOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeOutput
}

type ApplicationHealthchecksReadinessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec ApplicationHealthchecksReadinessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc ApplicationHealthchecksReadinessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http ApplicationHealthchecksReadinessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp ApplicationHealthchecksReadinessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (ApplicationHealthchecksReadinessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i ApplicationHealthchecksReadinessProbeTypeArgs) ToApplicationHealthchecksReadinessProbeTypeOutput() ApplicationHealthchecksReadinessProbeTypeOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeArgs) ToApplicationHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeOutput)
}

func (i ApplicationHealthchecksReadinessProbeTypeArgs) ToApplicationHealthchecksReadinessProbeTypePtrOutput() ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeArgs) ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeOutput).ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx)
}

// ApplicationHealthchecksReadinessProbeTypePtrInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeArgs, ApplicationHealthchecksReadinessProbeTypePtr and ApplicationHealthchecksReadinessProbeTypePtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypePtrInput` via:
//
//	        ApplicationHealthchecksReadinessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksReadinessProbeTypePtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypePtrOutput() ApplicationHealthchecksReadinessProbeTypePtrOutput
	ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypePtrOutput
}

type applicationHealthchecksReadinessProbeTypePtrType ApplicationHealthchecksReadinessProbeTypeArgs

func ApplicationHealthchecksReadinessProbeTypePtr(v *ApplicationHealthchecksReadinessProbeTypeArgs) ApplicationHealthchecksReadinessProbeTypePtrInput {
	return (*applicationHealthchecksReadinessProbeTypePtrType)(v)
}

func (*applicationHealthchecksReadinessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i *applicationHealthchecksReadinessProbeTypePtrType) ToApplicationHealthchecksReadinessProbeTypePtrOutput() ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksReadinessProbeTypePtrType) ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypePtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeOutput) ToApplicationHealthchecksReadinessProbeTypeOutput() ApplicationHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeOutput) ToApplicationHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeOutput) ToApplicationHealthchecksReadinessProbeTypePtrOutput() ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o.ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksReadinessProbeTypeOutput) ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeType {
		return &v
	}).(ApplicationHealthchecksReadinessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o ApplicationHealthchecksReadinessProbeTypeOutput) Exec() ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeTypeExec {
		return v.Exec
	}).(ApplicationHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o ApplicationHealthchecksReadinessProbeTypeOutput) Grpc() ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeTypeGrpc {
		return v.Grpc
	}).(ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o ApplicationHealthchecksReadinessProbeTypeOutput) Http() ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeTypeHttp {
		return v.Http
	}).(ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o ApplicationHealthchecksReadinessProbeTypeOutput) Tcp() ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeTypeTcp {
		return v.Tcp
	}).(ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypePtrOutput) ToApplicationHealthchecksReadinessProbeTypePtrOutput() ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypePtrOutput) ToApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypePtrOutput) Elem() ApplicationHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeType) ApplicationHealthchecksReadinessProbeType {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksReadinessProbeType
		return ret
	}).(ApplicationHealthchecksReadinessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o ApplicationHealthchecksReadinessProbeTypePtrOutput) Exec() ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ApplicationHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o ApplicationHealthchecksReadinessProbeTypePtrOutput) Grpc() ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o ApplicationHealthchecksReadinessProbeTypePtrOutput) Http() ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o ApplicationHealthchecksReadinessProbeTypePtrOutput) Tcp() ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeType) *ApplicationHealthchecksReadinessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// ApplicationHealthchecksReadinessProbeTypeExecInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeExecArgs and ApplicationHealthchecksReadinessProbeTypeExecOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeExecInput` via:
//
//	ApplicationHealthchecksReadinessProbeTypeExecArgs{...}
type ApplicationHealthchecksReadinessProbeTypeExecInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeExecOutput() ApplicationHealthchecksReadinessProbeTypeExecOutput
	ToApplicationHealthchecksReadinessProbeTypeExecOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeExecOutput
}

type ApplicationHealthchecksReadinessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (ApplicationHealthchecksReadinessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i ApplicationHealthchecksReadinessProbeTypeExecArgs) ToApplicationHealthchecksReadinessProbeTypeExecOutput() ApplicationHealthchecksReadinessProbeTypeExecOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeExecOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeExecArgs) ToApplicationHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeExecOutput)
}

func (i ApplicationHealthchecksReadinessProbeTypeExecArgs) ToApplicationHealthchecksReadinessProbeTypeExecPtrOutput() ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeExecArgs) ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeExecOutput).ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksReadinessProbeTypeExecPtrInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeExecArgs, ApplicationHealthchecksReadinessProbeTypeExecPtr and ApplicationHealthchecksReadinessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeExecPtrInput` via:
//
//	        ApplicationHealthchecksReadinessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksReadinessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeExecPtrOutput() ApplicationHealthchecksReadinessProbeTypeExecPtrOutput
	ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeExecPtrOutput
}

type applicationHealthchecksReadinessProbeTypeExecPtrType ApplicationHealthchecksReadinessProbeTypeExecArgs

func ApplicationHealthchecksReadinessProbeTypeExecPtr(v *ApplicationHealthchecksReadinessProbeTypeExecArgs) ApplicationHealthchecksReadinessProbeTypeExecPtrInput {
	return (*applicationHealthchecksReadinessProbeTypeExecPtrType)(v)
}

func (*applicationHealthchecksReadinessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i *applicationHealthchecksReadinessProbeTypeExecPtrType) ToApplicationHealthchecksReadinessProbeTypeExecPtrOutput() ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksReadinessProbeTypeExecPtrType) ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeExecPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeExecOutput) ToApplicationHealthchecksReadinessProbeTypeExecOutput() ApplicationHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeExecOutput) ToApplicationHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeExecOutput) ToApplicationHealthchecksReadinessProbeTypeExecPtrOutput() ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksReadinessProbeTypeExecOutput) ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksReadinessProbeTypeExec) *ApplicationHealthchecksReadinessProbeTypeExec {
		return &v
	}).(ApplicationHealthchecksReadinessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o ApplicationHealthchecksReadinessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type ApplicationHealthchecksReadinessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeExecPtrOutput) ToApplicationHealthchecksReadinessProbeTypeExecPtrOutput() ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeExecPtrOutput) ToApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeExecPtrOutput) Elem() ApplicationHealthchecksReadinessProbeTypeExecOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeExec) ApplicationHealthchecksReadinessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksReadinessProbeTypeExec
		return ret
	}).(ApplicationHealthchecksReadinessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o ApplicationHealthchecksReadinessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type ApplicationHealthchecksReadinessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// ApplicationHealthchecksReadinessProbeTypeGrpcInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeGrpcArgs and ApplicationHealthchecksReadinessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeGrpcInput` via:
//
//	ApplicationHealthchecksReadinessProbeTypeGrpcArgs{...}
type ApplicationHealthchecksReadinessProbeTypeGrpcInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeGrpcOutput() ApplicationHealthchecksReadinessProbeTypeGrpcOutput
	ToApplicationHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeGrpcOutput
}

type ApplicationHealthchecksReadinessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ApplicationHealthchecksReadinessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i ApplicationHealthchecksReadinessProbeTypeGrpcArgs) ToApplicationHealthchecksReadinessProbeTypeGrpcOutput() ApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeGrpcArgs) ToApplicationHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeGrpcOutput)
}

func (i ApplicationHealthchecksReadinessProbeTypeGrpcArgs) ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeGrpcArgs) ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeGrpcOutput).ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksReadinessProbeTypeGrpcPtrInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeGrpcArgs, ApplicationHealthchecksReadinessProbeTypeGrpcPtr and ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeGrpcPtrInput` via:
//
//	        ApplicationHealthchecksReadinessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksReadinessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput
	ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput
}

type applicationHealthchecksReadinessProbeTypeGrpcPtrType ApplicationHealthchecksReadinessProbeTypeGrpcArgs

func ApplicationHealthchecksReadinessProbeTypeGrpcPtr(v *ApplicationHealthchecksReadinessProbeTypeGrpcArgs) ApplicationHealthchecksReadinessProbeTypeGrpcPtrInput {
	return (*applicationHealthchecksReadinessProbeTypeGrpcPtrType)(v)
}

func (*applicationHealthchecksReadinessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i *applicationHealthchecksReadinessProbeTypeGrpcPtrType) ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksReadinessProbeTypeGrpcPtrType) ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeGrpcOutput) ToApplicationHealthchecksReadinessProbeTypeGrpcOutput() ApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeGrpcOutput) ToApplicationHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeGrpcOutput) ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksReadinessProbeTypeGrpcOutput) ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksReadinessProbeTypeGrpc) *ApplicationHealthchecksReadinessProbeTypeGrpc {
		return &v
	}).(ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksReadinessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o ApplicationHealthchecksReadinessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) ToApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) Elem() ApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeGrpc) ApplicationHealthchecksReadinessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksReadinessProbeTypeGrpc
		return ret
	}).(ApplicationHealthchecksReadinessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// ApplicationHealthchecksReadinessProbeTypeHttpInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeHttpArgs and ApplicationHealthchecksReadinessProbeTypeHttpOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeHttpInput` via:
//
//	ApplicationHealthchecksReadinessProbeTypeHttpArgs{...}
type ApplicationHealthchecksReadinessProbeTypeHttpInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeHttpOutput() ApplicationHealthchecksReadinessProbeTypeHttpOutput
	ToApplicationHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeHttpOutput
}

type ApplicationHealthchecksReadinessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (ApplicationHealthchecksReadinessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i ApplicationHealthchecksReadinessProbeTypeHttpArgs) ToApplicationHealthchecksReadinessProbeTypeHttpOutput() ApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeHttpArgs) ToApplicationHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeHttpOutput)
}

func (i ApplicationHealthchecksReadinessProbeTypeHttpArgs) ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeHttpArgs) ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeHttpOutput).ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksReadinessProbeTypeHttpPtrInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeHttpArgs, ApplicationHealthchecksReadinessProbeTypeHttpPtr and ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeHttpPtrInput` via:
//
//	        ApplicationHealthchecksReadinessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksReadinessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput
	ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput
}

type applicationHealthchecksReadinessProbeTypeHttpPtrType ApplicationHealthchecksReadinessProbeTypeHttpArgs

func ApplicationHealthchecksReadinessProbeTypeHttpPtr(v *ApplicationHealthchecksReadinessProbeTypeHttpArgs) ApplicationHealthchecksReadinessProbeTypeHttpPtrInput {
	return (*applicationHealthchecksReadinessProbeTypeHttpPtrType)(v)
}

func (*applicationHealthchecksReadinessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i *applicationHealthchecksReadinessProbeTypeHttpPtrType) ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksReadinessProbeTypeHttpPtrType) ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeHttpOutput) ToApplicationHealthchecksReadinessProbeTypeHttpOutput() ApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeHttpOutput) ToApplicationHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeHttpOutput) ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksReadinessProbeTypeHttpOutput) ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksReadinessProbeTypeHttp) *ApplicationHealthchecksReadinessProbeTypeHttp {
		return &v
	}).(ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o ApplicationHealthchecksReadinessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksReadinessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o ApplicationHealthchecksReadinessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) ToApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) Elem() ApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeHttp) ApplicationHealthchecksReadinessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksReadinessProbeTypeHttp
		return ret
	}).(ApplicationHealthchecksReadinessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// ApplicationHealthchecksReadinessProbeTypeTcpInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeTcpArgs and ApplicationHealthchecksReadinessProbeTypeTcpOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeTcpInput` via:
//
//	ApplicationHealthchecksReadinessProbeTypeTcpArgs{...}
type ApplicationHealthchecksReadinessProbeTypeTcpInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeTcpOutput() ApplicationHealthchecksReadinessProbeTypeTcpOutput
	ToApplicationHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeTcpOutput
}

type ApplicationHealthchecksReadinessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (ApplicationHealthchecksReadinessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i ApplicationHealthchecksReadinessProbeTypeTcpArgs) ToApplicationHealthchecksReadinessProbeTypeTcpOutput() ApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeTcpArgs) ToApplicationHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeTcpOutput)
}

func (i ApplicationHealthchecksReadinessProbeTypeTcpArgs) ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i ApplicationHealthchecksReadinessProbeTypeTcpArgs) ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeTcpOutput).ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx)
}

// ApplicationHealthchecksReadinessProbeTypeTcpPtrInput is an input type that accepts ApplicationHealthchecksReadinessProbeTypeTcpArgs, ApplicationHealthchecksReadinessProbeTypeTcpPtr and ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `ApplicationHealthchecksReadinessProbeTypeTcpPtrInput` via:
//
//	        ApplicationHealthchecksReadinessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type ApplicationHealthchecksReadinessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput
	ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Context) ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput
}

type applicationHealthchecksReadinessProbeTypeTcpPtrType ApplicationHealthchecksReadinessProbeTypeTcpArgs

func ApplicationHealthchecksReadinessProbeTypeTcpPtr(v *ApplicationHealthchecksReadinessProbeTypeTcpArgs) ApplicationHealthchecksReadinessProbeTypeTcpPtrInput {
	return (*applicationHealthchecksReadinessProbeTypeTcpPtrType)(v)
}

func (*applicationHealthchecksReadinessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i *applicationHealthchecksReadinessProbeTypeTcpPtrType) ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *applicationHealthchecksReadinessProbeTypeTcpPtrType) ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type ApplicationHealthchecksReadinessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeTcpOutput) ToApplicationHealthchecksReadinessProbeTypeTcpOutput() ApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeTcpOutput) ToApplicationHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeTcpOutput) ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o ApplicationHealthchecksReadinessProbeTypeTcpOutput) ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationHealthchecksReadinessProbeTypeTcp) *ApplicationHealthchecksReadinessProbeTypeTcp {
		return &v
	}).(ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o ApplicationHealthchecksReadinessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksReadinessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationHealthchecksReadinessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) ToApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) Elem() ApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeTcp) ApplicationHealthchecksReadinessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret ApplicationHealthchecksReadinessProbeTypeTcp
		return ret
	}).(ApplicationHealthchecksReadinessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationHealthchecksReadinessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ApplicationPort struct {
	// External port of the application.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort *int `pulumi:"externalPort"`
	// Id of the port.
	Id *string `pulumi:"id"`
	// Internal port of the application.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort int `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault bool `pulumi:"isDefault"`
	// Name of the port.
	Name *string `pulumi:"name"`
	// Protocol used for the port of the application.
	// 	- Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
	// 	- Default: `HTTP`.
	Protocol *string `pulumi:"protocol"`
	// Specify if the port is exposed to the world or not for this application.
	PubliclyAccessible bool `pulumi:"publiclyAccessible"`
}

// ApplicationPortInput is an input type that accepts ApplicationPortArgs and ApplicationPortOutput values.
// You can construct a concrete instance of `ApplicationPortInput` via:
//
//	ApplicationPortArgs{...}
type ApplicationPortInput interface {
	pulumi.Input

	ToApplicationPortOutput() ApplicationPortOutput
	ToApplicationPortOutputWithContext(context.Context) ApplicationPortOutput
}

type ApplicationPortArgs struct {
	// External port of the application.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort pulumi.IntPtrInput `pulumi:"externalPort"`
	// Id of the port.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Internal port of the application.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort pulumi.IntInput `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol used for the port of the application.
	// 	- Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
	// 	- Default: `HTTP`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Specify if the port is exposed to the world or not for this application.
	PubliclyAccessible pulumi.BoolInput `pulumi:"publiclyAccessible"`
}

func (ApplicationPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPort)(nil)).Elem()
}

func (i ApplicationPortArgs) ToApplicationPortOutput() ApplicationPortOutput {
	return i.ToApplicationPortOutputWithContext(context.Background())
}

func (i ApplicationPortArgs) ToApplicationPortOutputWithContext(ctx context.Context) ApplicationPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPortOutput)
}

// ApplicationPortArrayInput is an input type that accepts ApplicationPortArray and ApplicationPortArrayOutput values.
// You can construct a concrete instance of `ApplicationPortArrayInput` via:
//
//	ApplicationPortArray{ ApplicationPortArgs{...} }
type ApplicationPortArrayInput interface {
	pulumi.Input

	ToApplicationPortArrayOutput() ApplicationPortArrayOutput
	ToApplicationPortArrayOutputWithContext(context.Context) ApplicationPortArrayOutput
}

type ApplicationPortArray []ApplicationPortInput

func (ApplicationPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationPort)(nil)).Elem()
}

func (i ApplicationPortArray) ToApplicationPortArrayOutput() ApplicationPortArrayOutput {
	return i.ToApplicationPortArrayOutputWithContext(context.Background())
}

func (i ApplicationPortArray) ToApplicationPortArrayOutputWithContext(ctx context.Context) ApplicationPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPortArrayOutput)
}

type ApplicationPortOutput struct{ *pulumi.OutputState }

func (ApplicationPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationPort)(nil)).Elem()
}

func (o ApplicationPortOutput) ToApplicationPortOutput() ApplicationPortOutput {
	return o
}

func (o ApplicationPortOutput) ToApplicationPortOutputWithContext(ctx context.Context) ApplicationPortOutput {
	return o
}

// External port of the application.
//   - Required if: `ports.publicly_accessible=true`.
//   - Must be: `>= 1` and `<= 65535`.
func (o ApplicationPortOutput) ExternalPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationPort) *int { return v.ExternalPort }).(pulumi.IntPtrOutput)
}

// Id of the port.
func (o ApplicationPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Internal port of the application.
//   - Must be: `>= 1` and `<= 65535`.
func (o ApplicationPortOutput) InternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationPort) int { return v.InternalPort }).(pulumi.IntOutput)
}

// If this port will be used for the root domain
func (o ApplicationPortOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationPort) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of the port.
func (o ApplicationPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol used for the port of the application.
//   - Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
//   - Default: `HTTP`.
func (o ApplicationPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Specify if the port is exposed to the world or not for this application.
func (o ApplicationPortOutput) PubliclyAccessible() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationPort) bool { return v.PubliclyAccessible }).(pulumi.BoolOutput)
}

type ApplicationPortArrayOutput struct{ *pulumi.OutputState }

func (ApplicationPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationPort)(nil)).Elem()
}

func (o ApplicationPortArrayOutput) ToApplicationPortArrayOutput() ApplicationPortArrayOutput {
	return o
}

func (o ApplicationPortArrayOutput) ToApplicationPortArrayOutputWithContext(ctx context.Context) ApplicationPortArrayOutput {
	return o
}

func (o ApplicationPortArrayOutput) Index(i pulumi.IntInput) ApplicationPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationPort {
		return vs[0].([]ApplicationPort)[vs[1].(int)]
	}).(ApplicationPortOutput)
}

type ApplicationSecret struct {
	// Id of the secret.
	Id *string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// ApplicationSecretInput is an input type that accepts ApplicationSecretArgs and ApplicationSecretOutput values.
// You can construct a concrete instance of `ApplicationSecretInput` via:
//
//	ApplicationSecretArgs{...}
type ApplicationSecretInput interface {
	pulumi.Input

	ToApplicationSecretOutput() ApplicationSecretOutput
	ToApplicationSecretOutputWithContext(context.Context) ApplicationSecretOutput
}

type ApplicationSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecret)(nil)).Elem()
}

func (i ApplicationSecretArgs) ToApplicationSecretOutput() ApplicationSecretOutput {
	return i.ToApplicationSecretOutputWithContext(context.Background())
}

func (i ApplicationSecretArgs) ToApplicationSecretOutputWithContext(ctx context.Context) ApplicationSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecretOutput)
}

// ApplicationSecretArrayInput is an input type that accepts ApplicationSecretArray and ApplicationSecretArrayOutput values.
// You can construct a concrete instance of `ApplicationSecretArrayInput` via:
//
//	ApplicationSecretArray{ ApplicationSecretArgs{...} }
type ApplicationSecretArrayInput interface {
	pulumi.Input

	ToApplicationSecretArrayOutput() ApplicationSecretArrayOutput
	ToApplicationSecretArrayOutputWithContext(context.Context) ApplicationSecretArrayOutput
}

type ApplicationSecretArray []ApplicationSecretInput

func (ApplicationSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecret)(nil)).Elem()
}

func (i ApplicationSecretArray) ToApplicationSecretArrayOutput() ApplicationSecretArrayOutput {
	return i.ToApplicationSecretArrayOutputWithContext(context.Background())
}

func (i ApplicationSecretArray) ToApplicationSecretArrayOutputWithContext(ctx context.Context) ApplicationSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecretArrayOutput)
}

type ApplicationSecretOutput struct{ *pulumi.OutputState }

func (ApplicationSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecret)(nil)).Elem()
}

func (o ApplicationSecretOutput) ToApplicationSecretOutput() ApplicationSecretOutput {
	return o
}

func (o ApplicationSecretOutput) ToApplicationSecretOutputWithContext(ctx context.Context) ApplicationSecretOutput {
	return o
}

// Id of the secret.
func (o ApplicationSecretOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecret) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the secret.
func (o ApplicationSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o ApplicationSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecret) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationSecretArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecret)(nil)).Elem()
}

func (o ApplicationSecretArrayOutput) ToApplicationSecretArrayOutput() ApplicationSecretArrayOutput {
	return o
}

func (o ApplicationSecretArrayOutput) ToApplicationSecretArrayOutputWithContext(ctx context.Context) ApplicationSecretArrayOutput {
	return o
}

func (o ApplicationSecretArrayOutput) Index(i pulumi.IntInput) ApplicationSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecret {
		return vs[0].([]ApplicationSecret)[vs[1].(int)]
	}).(ApplicationSecretOutput)
}

type ApplicationSecretAlias struct {
	// Id of the secret alias.
	Id *string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// ApplicationSecretAliasInput is an input type that accepts ApplicationSecretAliasArgs and ApplicationSecretAliasOutput values.
// You can construct a concrete instance of `ApplicationSecretAliasInput` via:
//
//	ApplicationSecretAliasArgs{...}
type ApplicationSecretAliasInput interface {
	pulumi.Input

	ToApplicationSecretAliasOutput() ApplicationSecretAliasOutput
	ToApplicationSecretAliasOutputWithContext(context.Context) ApplicationSecretAliasOutput
}

type ApplicationSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecretAlias)(nil)).Elem()
}

func (i ApplicationSecretAliasArgs) ToApplicationSecretAliasOutput() ApplicationSecretAliasOutput {
	return i.ToApplicationSecretAliasOutputWithContext(context.Background())
}

func (i ApplicationSecretAliasArgs) ToApplicationSecretAliasOutputWithContext(ctx context.Context) ApplicationSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecretAliasOutput)
}

// ApplicationSecretAliasArrayInput is an input type that accepts ApplicationSecretAliasArray and ApplicationSecretAliasArrayOutput values.
// You can construct a concrete instance of `ApplicationSecretAliasArrayInput` via:
//
//	ApplicationSecretAliasArray{ ApplicationSecretAliasArgs{...} }
type ApplicationSecretAliasArrayInput interface {
	pulumi.Input

	ToApplicationSecretAliasArrayOutput() ApplicationSecretAliasArrayOutput
	ToApplicationSecretAliasArrayOutputWithContext(context.Context) ApplicationSecretAliasArrayOutput
}

type ApplicationSecretAliasArray []ApplicationSecretAliasInput

func (ApplicationSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecretAlias)(nil)).Elem()
}

func (i ApplicationSecretAliasArray) ToApplicationSecretAliasArrayOutput() ApplicationSecretAliasArrayOutput {
	return i.ToApplicationSecretAliasArrayOutputWithContext(context.Background())
}

func (i ApplicationSecretAliasArray) ToApplicationSecretAliasArrayOutputWithContext(ctx context.Context) ApplicationSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecretAliasArrayOutput)
}

type ApplicationSecretAliasOutput struct{ *pulumi.OutputState }

func (ApplicationSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecretAlias)(nil)).Elem()
}

func (o ApplicationSecretAliasOutput) ToApplicationSecretAliasOutput() ApplicationSecretAliasOutput {
	return o
}

func (o ApplicationSecretAliasOutput) ToApplicationSecretAliasOutputWithContext(ctx context.Context) ApplicationSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o ApplicationSecretAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecretAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret alias.
func (o ApplicationSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o ApplicationSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecretAlias)(nil)).Elem()
}

func (o ApplicationSecretAliasArrayOutput) ToApplicationSecretAliasArrayOutput() ApplicationSecretAliasArrayOutput {
	return o
}

func (o ApplicationSecretAliasArrayOutput) ToApplicationSecretAliasArrayOutputWithContext(ctx context.Context) ApplicationSecretAliasArrayOutput {
	return o
}

func (o ApplicationSecretAliasArrayOutput) Index(i pulumi.IntInput) ApplicationSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecretAlias {
		return vs[0].([]ApplicationSecretAlias)[vs[1].(int)]
	}).(ApplicationSecretAliasOutput)
}

type ApplicationSecretOverride struct {
	// Id of the secret override.
	Id *string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// ApplicationSecretOverrideInput is an input type that accepts ApplicationSecretOverrideArgs and ApplicationSecretOverrideOutput values.
// You can construct a concrete instance of `ApplicationSecretOverrideInput` via:
//
//	ApplicationSecretOverrideArgs{...}
type ApplicationSecretOverrideInput interface {
	pulumi.Input

	ToApplicationSecretOverrideOutput() ApplicationSecretOverrideOutput
	ToApplicationSecretOverrideOutputWithContext(context.Context) ApplicationSecretOverrideOutput
}

type ApplicationSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecretOverride)(nil)).Elem()
}

func (i ApplicationSecretOverrideArgs) ToApplicationSecretOverrideOutput() ApplicationSecretOverrideOutput {
	return i.ToApplicationSecretOverrideOutputWithContext(context.Background())
}

func (i ApplicationSecretOverrideArgs) ToApplicationSecretOverrideOutputWithContext(ctx context.Context) ApplicationSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecretOverrideOutput)
}

// ApplicationSecretOverrideArrayInput is an input type that accepts ApplicationSecretOverrideArray and ApplicationSecretOverrideArrayOutput values.
// You can construct a concrete instance of `ApplicationSecretOverrideArrayInput` via:
//
//	ApplicationSecretOverrideArray{ ApplicationSecretOverrideArgs{...} }
type ApplicationSecretOverrideArrayInput interface {
	pulumi.Input

	ToApplicationSecretOverrideArrayOutput() ApplicationSecretOverrideArrayOutput
	ToApplicationSecretOverrideArrayOutputWithContext(context.Context) ApplicationSecretOverrideArrayOutput
}

type ApplicationSecretOverrideArray []ApplicationSecretOverrideInput

func (ApplicationSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecretOverride)(nil)).Elem()
}

func (i ApplicationSecretOverrideArray) ToApplicationSecretOverrideArrayOutput() ApplicationSecretOverrideArrayOutput {
	return i.ToApplicationSecretOverrideArrayOutputWithContext(context.Background())
}

func (i ApplicationSecretOverrideArray) ToApplicationSecretOverrideArrayOutputWithContext(ctx context.Context) ApplicationSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecretOverrideArrayOutput)
}

type ApplicationSecretOverrideOutput struct{ *pulumi.OutputState }

func (ApplicationSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecretOverride)(nil)).Elem()
}

func (o ApplicationSecretOverrideOutput) ToApplicationSecretOverrideOutput() ApplicationSecretOverrideOutput {
	return o
}

func (o ApplicationSecretOverrideOutput) ToApplicationSecretOverrideOutputWithContext(ctx context.Context) ApplicationSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o ApplicationSecretOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecretOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret override.
func (o ApplicationSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o ApplicationSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecretOverride)(nil)).Elem()
}

func (o ApplicationSecretOverrideArrayOutput) ToApplicationSecretOverrideArrayOutput() ApplicationSecretOverrideArrayOutput {
	return o
}

func (o ApplicationSecretOverrideArrayOutput) ToApplicationSecretOverrideArrayOutputWithContext(ctx context.Context) ApplicationSecretOverrideArrayOutput {
	return o
}

func (o ApplicationSecretOverrideArrayOutput) Index(i pulumi.IntInput) ApplicationSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecretOverride {
		return vs[0].([]ApplicationSecretOverride)[vs[1].(int)]
	}).(ApplicationSecretOverrideOutput)
}

type ApplicationStorage struct {
	// Id of the storage.
	Id *string `pulumi:"id"`
	// Mount point of the storage for the application.
	MountPoint string `pulumi:"mountPoint"`
	// Size of the storage for the application in GB [1024MB = 1GB].
	// 	- Must be: `>= 1`.
	Size int `pulumi:"size"`
	// Type of the storage for the application.
	// 	- Can be: `FAST_SSD`.
	Type string `pulumi:"type"`
}

// ApplicationStorageInput is an input type that accepts ApplicationStorageArgs and ApplicationStorageOutput values.
// You can construct a concrete instance of `ApplicationStorageInput` via:
//
//	ApplicationStorageArgs{...}
type ApplicationStorageInput interface {
	pulumi.Input

	ToApplicationStorageOutput() ApplicationStorageOutput
	ToApplicationStorageOutputWithContext(context.Context) ApplicationStorageOutput
}

type ApplicationStorageArgs struct {
	// Id of the storage.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Mount point of the storage for the application.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// Size of the storage for the application in GB [1024MB = 1GB].
	// 	- Must be: `>= 1`.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of the storage for the application.
	// 	- Can be: `FAST_SSD`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStorage)(nil)).Elem()
}

func (i ApplicationStorageArgs) ToApplicationStorageOutput() ApplicationStorageOutput {
	return i.ToApplicationStorageOutputWithContext(context.Background())
}

func (i ApplicationStorageArgs) ToApplicationStorageOutputWithContext(ctx context.Context) ApplicationStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStorageOutput)
}

// ApplicationStorageArrayInput is an input type that accepts ApplicationStorageArray and ApplicationStorageArrayOutput values.
// You can construct a concrete instance of `ApplicationStorageArrayInput` via:
//
//	ApplicationStorageArray{ ApplicationStorageArgs{...} }
type ApplicationStorageArrayInput interface {
	pulumi.Input

	ToApplicationStorageArrayOutput() ApplicationStorageArrayOutput
	ToApplicationStorageArrayOutputWithContext(context.Context) ApplicationStorageArrayOutput
}

type ApplicationStorageArray []ApplicationStorageInput

func (ApplicationStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStorage)(nil)).Elem()
}

func (i ApplicationStorageArray) ToApplicationStorageArrayOutput() ApplicationStorageArrayOutput {
	return i.ToApplicationStorageArrayOutputWithContext(context.Background())
}

func (i ApplicationStorageArray) ToApplicationStorageArrayOutputWithContext(ctx context.Context) ApplicationStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStorageArrayOutput)
}

type ApplicationStorageOutput struct{ *pulumi.OutputState }

func (ApplicationStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStorage)(nil)).Elem()
}

func (o ApplicationStorageOutput) ToApplicationStorageOutput() ApplicationStorageOutput {
	return o
}

func (o ApplicationStorageOutput) ToApplicationStorageOutputWithContext(ctx context.Context) ApplicationStorageOutput {
	return o
}

// Id of the storage.
func (o ApplicationStorageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStorage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Mount point of the storage for the application.
func (o ApplicationStorageOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStorage) string { return v.MountPoint }).(pulumi.StringOutput)
}

// Size of the storage for the application in GB [1024MB = 1GB].
//   - Must be: `>= 1`.
func (o ApplicationStorageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationStorage) int { return v.Size }).(pulumi.IntOutput)
}

// Type of the storage for the application.
//   - Can be: `FAST_SSD`.
func (o ApplicationStorageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStorage) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationStorageArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStorage)(nil)).Elem()
}

func (o ApplicationStorageArrayOutput) ToApplicationStorageArrayOutput() ApplicationStorageArrayOutput {
	return o
}

func (o ApplicationStorageArrayOutput) ToApplicationStorageArrayOutputWithContext(ctx context.Context) ApplicationStorageArrayOutput {
	return o
}

func (o ApplicationStorageArrayOutput) Index(i pulumi.IntInput) ApplicationStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStorage {
		return vs[0].([]ApplicationStorage)[vs[1].(int)]
	}).(ApplicationStorageOutput)
}

type ClusterFeatures struct {
	// Network configuration if you want to install qovery on an existing VPC
	ExistingVpc *ClusterFeaturesExistingVpc `pulumi:"existingVpc"`
	// Static IP (AWS only) [NOTE: can't be updated after creation].
	// 	- Default: `false`.
	StaticIp *bool `pulumi:"staticIp"`
	// Custom VPC subnet (AWS only) [NOTE: can't be updated after creation].
	// 	- Default: `10.0.0.0/16`.
	VpcSubnet *string `pulumi:"vpcSubnet"`
}

// ClusterFeaturesInput is an input type that accepts ClusterFeaturesArgs and ClusterFeaturesOutput values.
// You can construct a concrete instance of `ClusterFeaturesInput` via:
//
//	ClusterFeaturesArgs{...}
type ClusterFeaturesInput interface {
	pulumi.Input

	ToClusterFeaturesOutput() ClusterFeaturesOutput
	ToClusterFeaturesOutputWithContext(context.Context) ClusterFeaturesOutput
}

type ClusterFeaturesArgs struct {
	// Network configuration if you want to install qovery on an existing VPC
	ExistingVpc ClusterFeaturesExistingVpcPtrInput `pulumi:"existingVpc"`
	// Static IP (AWS only) [NOTE: can't be updated after creation].
	// 	- Default: `false`.
	StaticIp pulumi.BoolPtrInput `pulumi:"staticIp"`
	// Custom VPC subnet (AWS only) [NOTE: can't be updated after creation].
	// 	- Default: `10.0.0.0/16`.
	VpcSubnet pulumi.StringPtrInput `pulumi:"vpcSubnet"`
}

func (ClusterFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFeatures)(nil)).Elem()
}

func (i ClusterFeaturesArgs) ToClusterFeaturesOutput() ClusterFeaturesOutput {
	return i.ToClusterFeaturesOutputWithContext(context.Background())
}

func (i ClusterFeaturesArgs) ToClusterFeaturesOutputWithContext(ctx context.Context) ClusterFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFeaturesOutput)
}

func (i ClusterFeaturesArgs) ToClusterFeaturesPtrOutput() ClusterFeaturesPtrOutput {
	return i.ToClusterFeaturesPtrOutputWithContext(context.Background())
}

func (i ClusterFeaturesArgs) ToClusterFeaturesPtrOutputWithContext(ctx context.Context) ClusterFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFeaturesOutput).ToClusterFeaturesPtrOutputWithContext(ctx)
}

// ClusterFeaturesPtrInput is an input type that accepts ClusterFeaturesArgs, ClusterFeaturesPtr and ClusterFeaturesPtrOutput values.
// You can construct a concrete instance of `ClusterFeaturesPtrInput` via:
//
//	        ClusterFeaturesArgs{...}
//
//	or:
//
//	        nil
type ClusterFeaturesPtrInput interface {
	pulumi.Input

	ToClusterFeaturesPtrOutput() ClusterFeaturesPtrOutput
	ToClusterFeaturesPtrOutputWithContext(context.Context) ClusterFeaturesPtrOutput
}

type clusterFeaturesPtrType ClusterFeaturesArgs

func ClusterFeaturesPtr(v *ClusterFeaturesArgs) ClusterFeaturesPtrInput {
	return (*clusterFeaturesPtrType)(v)
}

func (*clusterFeaturesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFeatures)(nil)).Elem()
}

func (i *clusterFeaturesPtrType) ToClusterFeaturesPtrOutput() ClusterFeaturesPtrOutput {
	return i.ToClusterFeaturesPtrOutputWithContext(context.Background())
}

func (i *clusterFeaturesPtrType) ToClusterFeaturesPtrOutputWithContext(ctx context.Context) ClusterFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFeaturesPtrOutput)
}

type ClusterFeaturesOutput struct{ *pulumi.OutputState }

func (ClusterFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFeatures)(nil)).Elem()
}

func (o ClusterFeaturesOutput) ToClusterFeaturesOutput() ClusterFeaturesOutput {
	return o
}

func (o ClusterFeaturesOutput) ToClusterFeaturesOutputWithContext(ctx context.Context) ClusterFeaturesOutput {
	return o
}

func (o ClusterFeaturesOutput) ToClusterFeaturesPtrOutput() ClusterFeaturesPtrOutput {
	return o.ToClusterFeaturesPtrOutputWithContext(context.Background())
}

func (o ClusterFeaturesOutput) ToClusterFeaturesPtrOutputWithContext(ctx context.Context) ClusterFeaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterFeatures) *ClusterFeatures {
		return &v
	}).(ClusterFeaturesPtrOutput)
}

// Network configuration if you want to install qovery on an existing VPC
func (o ClusterFeaturesOutput) ExistingVpc() ClusterFeaturesExistingVpcPtrOutput {
	return o.ApplyT(func(v ClusterFeatures) *ClusterFeaturesExistingVpc { return v.ExistingVpc }).(ClusterFeaturesExistingVpcPtrOutput)
}

// Static IP (AWS only) [NOTE: can't be updated after creation].
//   - Default: `false`.
func (o ClusterFeaturesOutput) StaticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterFeatures) *bool { return v.StaticIp }).(pulumi.BoolPtrOutput)
}

// Custom VPC subnet (AWS only) [NOTE: can't be updated after creation].
//   - Default: `10.0.0.0/16`.
func (o ClusterFeaturesOutput) VpcSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFeatures) *string { return v.VpcSubnet }).(pulumi.StringPtrOutput)
}

type ClusterFeaturesPtrOutput struct{ *pulumi.OutputState }

func (ClusterFeaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFeatures)(nil)).Elem()
}

func (o ClusterFeaturesPtrOutput) ToClusterFeaturesPtrOutput() ClusterFeaturesPtrOutput {
	return o
}

func (o ClusterFeaturesPtrOutput) ToClusterFeaturesPtrOutputWithContext(ctx context.Context) ClusterFeaturesPtrOutput {
	return o
}

func (o ClusterFeaturesPtrOutput) Elem() ClusterFeaturesOutput {
	return o.ApplyT(func(v *ClusterFeatures) ClusterFeatures {
		if v != nil {
			return *v
		}
		var ret ClusterFeatures
		return ret
	}).(ClusterFeaturesOutput)
}

// Network configuration if you want to install qovery on an existing VPC
func (o ClusterFeaturesPtrOutput) ExistingVpc() ClusterFeaturesExistingVpcPtrOutput {
	return o.ApplyT(func(v *ClusterFeatures) *ClusterFeaturesExistingVpc {
		if v == nil {
			return nil
		}
		return v.ExistingVpc
	}).(ClusterFeaturesExistingVpcPtrOutput)
}

// Static IP (AWS only) [NOTE: can't be updated after creation].
//   - Default: `false`.
func (o ClusterFeaturesPtrOutput) StaticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterFeatures) *bool {
		if v == nil {
			return nil
		}
		return v.StaticIp
	}).(pulumi.BoolPtrOutput)
}

// Custom VPC subnet (AWS only) [NOTE: can't be updated after creation].
//   - Default: `10.0.0.0/16`.
func (o ClusterFeaturesPtrOutput) VpcSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFeatures) *string {
		if v == nil {
			return nil
		}
		return v.VpcSubnet
	}).(pulumi.StringPtrOutput)
}

type ClusterFeaturesExistingVpc struct {
	// Aws VPC id
	AwsVpcEksId string `pulumi:"awsVpcEksId"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneAIds []string `pulumi:"documentdbSubnetsZoneAIds"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneBIds []string `pulumi:"documentdbSubnetsZoneBIds"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneCIds []string `pulumi:"documentdbSubnetsZoneCIds"`
	// Ids of the subnets for EKS zone a. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneAIds []string `pulumi:"eksSubnetsZoneAIds"`
	// Ids of the subnets for EKS zone b. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneBIds []string `pulumi:"eksSubnetsZoneBIds"`
	// Ids of the subnets for EKS zone c. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneCIds []string `pulumi:"eksSubnetsZoneCIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneAIds []string `pulumi:"elasticacheSubnetsZoneAIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneBIds []string `pulumi:"elasticacheSubnetsZoneBIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneCIds []string `pulumi:"elasticacheSubnetsZoneCIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneAIds []string `pulumi:"rdsSubnetsZoneAIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneBIds []string `pulumi:"rdsSubnetsZoneBIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneCIds []string `pulumi:"rdsSubnetsZoneCIds"`
}

// ClusterFeaturesExistingVpcInput is an input type that accepts ClusterFeaturesExistingVpcArgs and ClusterFeaturesExistingVpcOutput values.
// You can construct a concrete instance of `ClusterFeaturesExistingVpcInput` via:
//
//	ClusterFeaturesExistingVpcArgs{...}
type ClusterFeaturesExistingVpcInput interface {
	pulumi.Input

	ToClusterFeaturesExistingVpcOutput() ClusterFeaturesExistingVpcOutput
	ToClusterFeaturesExistingVpcOutputWithContext(context.Context) ClusterFeaturesExistingVpcOutput
}

type ClusterFeaturesExistingVpcArgs struct {
	// Aws VPC id
	AwsVpcEksId pulumi.StringInput `pulumi:"awsVpcEksId"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneAIds pulumi.StringArrayInput `pulumi:"documentdbSubnetsZoneAIds"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneBIds pulumi.StringArrayInput `pulumi:"documentdbSubnetsZoneBIds"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneCIds pulumi.StringArrayInput `pulumi:"documentdbSubnetsZoneCIds"`
	// Ids of the subnets for EKS zone a. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneAIds pulumi.StringArrayInput `pulumi:"eksSubnetsZoneAIds"`
	// Ids of the subnets for EKS zone b. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneBIds pulumi.StringArrayInput `pulumi:"eksSubnetsZoneBIds"`
	// Ids of the subnets for EKS zone c. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneCIds pulumi.StringArrayInput `pulumi:"eksSubnetsZoneCIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneAIds pulumi.StringArrayInput `pulumi:"elasticacheSubnetsZoneAIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneBIds pulumi.StringArrayInput `pulumi:"elasticacheSubnetsZoneBIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneCIds pulumi.StringArrayInput `pulumi:"elasticacheSubnetsZoneCIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneAIds pulumi.StringArrayInput `pulumi:"rdsSubnetsZoneAIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneBIds pulumi.StringArrayInput `pulumi:"rdsSubnetsZoneBIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneCIds pulumi.StringArrayInput `pulumi:"rdsSubnetsZoneCIds"`
}

func (ClusterFeaturesExistingVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFeaturesExistingVpc)(nil)).Elem()
}

func (i ClusterFeaturesExistingVpcArgs) ToClusterFeaturesExistingVpcOutput() ClusterFeaturesExistingVpcOutput {
	return i.ToClusterFeaturesExistingVpcOutputWithContext(context.Background())
}

func (i ClusterFeaturesExistingVpcArgs) ToClusterFeaturesExistingVpcOutputWithContext(ctx context.Context) ClusterFeaturesExistingVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFeaturesExistingVpcOutput)
}

func (i ClusterFeaturesExistingVpcArgs) ToClusterFeaturesExistingVpcPtrOutput() ClusterFeaturesExistingVpcPtrOutput {
	return i.ToClusterFeaturesExistingVpcPtrOutputWithContext(context.Background())
}

func (i ClusterFeaturesExistingVpcArgs) ToClusterFeaturesExistingVpcPtrOutputWithContext(ctx context.Context) ClusterFeaturesExistingVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFeaturesExistingVpcOutput).ToClusterFeaturesExistingVpcPtrOutputWithContext(ctx)
}

// ClusterFeaturesExistingVpcPtrInput is an input type that accepts ClusterFeaturesExistingVpcArgs, ClusterFeaturesExistingVpcPtr and ClusterFeaturesExistingVpcPtrOutput values.
// You can construct a concrete instance of `ClusterFeaturesExistingVpcPtrInput` via:
//
//	        ClusterFeaturesExistingVpcArgs{...}
//
//	or:
//
//	        nil
type ClusterFeaturesExistingVpcPtrInput interface {
	pulumi.Input

	ToClusterFeaturesExistingVpcPtrOutput() ClusterFeaturesExistingVpcPtrOutput
	ToClusterFeaturesExistingVpcPtrOutputWithContext(context.Context) ClusterFeaturesExistingVpcPtrOutput
}

type clusterFeaturesExistingVpcPtrType ClusterFeaturesExistingVpcArgs

func ClusterFeaturesExistingVpcPtr(v *ClusterFeaturesExistingVpcArgs) ClusterFeaturesExistingVpcPtrInput {
	return (*clusterFeaturesExistingVpcPtrType)(v)
}

func (*clusterFeaturesExistingVpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFeaturesExistingVpc)(nil)).Elem()
}

func (i *clusterFeaturesExistingVpcPtrType) ToClusterFeaturesExistingVpcPtrOutput() ClusterFeaturesExistingVpcPtrOutput {
	return i.ToClusterFeaturesExistingVpcPtrOutputWithContext(context.Background())
}

func (i *clusterFeaturesExistingVpcPtrType) ToClusterFeaturesExistingVpcPtrOutputWithContext(ctx context.Context) ClusterFeaturesExistingVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFeaturesExistingVpcPtrOutput)
}

type ClusterFeaturesExistingVpcOutput struct{ *pulumi.OutputState }

func (ClusterFeaturesExistingVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFeaturesExistingVpc)(nil)).Elem()
}

func (o ClusterFeaturesExistingVpcOutput) ToClusterFeaturesExistingVpcOutput() ClusterFeaturesExistingVpcOutput {
	return o
}

func (o ClusterFeaturesExistingVpcOutput) ToClusterFeaturesExistingVpcOutputWithContext(ctx context.Context) ClusterFeaturesExistingVpcOutput {
	return o
}

func (o ClusterFeaturesExistingVpcOutput) ToClusterFeaturesExistingVpcPtrOutput() ClusterFeaturesExistingVpcPtrOutput {
	return o.ToClusterFeaturesExistingVpcPtrOutputWithContext(context.Background())
}

func (o ClusterFeaturesExistingVpcOutput) ToClusterFeaturesExistingVpcPtrOutputWithContext(ctx context.Context) ClusterFeaturesExistingVpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterFeaturesExistingVpc) *ClusterFeaturesExistingVpc {
		return &v
	}).(ClusterFeaturesExistingVpcPtrOutput)
}

// Aws VPC id
func (o ClusterFeaturesExistingVpcOutput) AwsVpcEksId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) string { return v.AwsVpcEksId }).(pulumi.StringOutput)
}

// Ids of the subnets for document db
func (o ClusterFeaturesExistingVpcOutput) DocumentdbSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.DocumentdbSubnetsZoneAIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for document db
func (o ClusterFeaturesExistingVpcOutput) DocumentdbSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.DocumentdbSubnetsZoneBIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for document db
func (o ClusterFeaturesExistingVpcOutput) DocumentdbSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.DocumentdbSubnetsZoneCIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone a. Must have mapPublicIpOnLaunch set to true
func (o ClusterFeaturesExistingVpcOutput) EksSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.EksSubnetsZoneAIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone b. Must have mapPublicIpOnLaunch set to true
func (o ClusterFeaturesExistingVpcOutput) EksSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.EksSubnetsZoneBIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone c. Must have mapPublicIpOnLaunch set to true
func (o ClusterFeaturesExistingVpcOutput) EksSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.EksSubnetsZoneCIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o ClusterFeaturesExistingVpcOutput) ElasticacheSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.ElasticacheSubnetsZoneAIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o ClusterFeaturesExistingVpcOutput) ElasticacheSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.ElasticacheSubnetsZoneBIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o ClusterFeaturesExistingVpcOutput) ElasticacheSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.ElasticacheSubnetsZoneCIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o ClusterFeaturesExistingVpcOutput) RdsSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.RdsSubnetsZoneAIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o ClusterFeaturesExistingVpcOutput) RdsSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.RdsSubnetsZoneBIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o ClusterFeaturesExistingVpcOutput) RdsSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeaturesExistingVpc) []string { return v.RdsSubnetsZoneCIds }).(pulumi.StringArrayOutput)
}

type ClusterFeaturesExistingVpcPtrOutput struct{ *pulumi.OutputState }

func (ClusterFeaturesExistingVpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFeaturesExistingVpc)(nil)).Elem()
}

func (o ClusterFeaturesExistingVpcPtrOutput) ToClusterFeaturesExistingVpcPtrOutput() ClusterFeaturesExistingVpcPtrOutput {
	return o
}

func (o ClusterFeaturesExistingVpcPtrOutput) ToClusterFeaturesExistingVpcPtrOutputWithContext(ctx context.Context) ClusterFeaturesExistingVpcPtrOutput {
	return o
}

func (o ClusterFeaturesExistingVpcPtrOutput) Elem() ClusterFeaturesExistingVpcOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) ClusterFeaturesExistingVpc {
		if v != nil {
			return *v
		}
		var ret ClusterFeaturesExistingVpc
		return ret
	}).(ClusterFeaturesExistingVpcOutput)
}

// Aws VPC id
func (o ClusterFeaturesExistingVpcPtrOutput) AwsVpcEksId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) *string {
		if v == nil {
			return nil
		}
		return &v.AwsVpcEksId
	}).(pulumi.StringPtrOutput)
}

// Ids of the subnets for document db
func (o ClusterFeaturesExistingVpcPtrOutput) DocumentdbSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.DocumentdbSubnetsZoneAIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for document db
func (o ClusterFeaturesExistingVpcPtrOutput) DocumentdbSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.DocumentdbSubnetsZoneBIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for document db
func (o ClusterFeaturesExistingVpcPtrOutput) DocumentdbSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.DocumentdbSubnetsZoneCIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone a. Must have mapPublicIpOnLaunch set to true
func (o ClusterFeaturesExistingVpcPtrOutput) EksSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.EksSubnetsZoneAIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone b. Must have mapPublicIpOnLaunch set to true
func (o ClusterFeaturesExistingVpcPtrOutput) EksSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.EksSubnetsZoneBIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone c. Must have mapPublicIpOnLaunch set to true
func (o ClusterFeaturesExistingVpcPtrOutput) EksSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.EksSubnetsZoneCIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o ClusterFeaturesExistingVpcPtrOutput) ElasticacheSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.ElasticacheSubnetsZoneAIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o ClusterFeaturesExistingVpcPtrOutput) ElasticacheSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.ElasticacheSubnetsZoneBIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o ClusterFeaturesExistingVpcPtrOutput) ElasticacheSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.ElasticacheSubnetsZoneCIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o ClusterFeaturesExistingVpcPtrOutput) RdsSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.RdsSubnetsZoneAIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o ClusterFeaturesExistingVpcPtrOutput) RdsSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.RdsSubnetsZoneBIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o ClusterFeaturesExistingVpcPtrOutput) RdsSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.RdsSubnetsZoneCIds
	}).(pulumi.StringArrayOutput)
}

type ClusterRoutingTable struct {
	// Description of the route.
	Description string `pulumi:"description"`
	// Destination of the route.
	Destination string `pulumi:"destination"`
	// Target of the route.
	Target string `pulumi:"target"`
}

// ClusterRoutingTableInput is an input type that accepts ClusterRoutingTableArgs and ClusterRoutingTableOutput values.
// You can construct a concrete instance of `ClusterRoutingTableInput` via:
//
//	ClusterRoutingTableArgs{...}
type ClusterRoutingTableInput interface {
	pulumi.Input

	ToClusterRoutingTableOutput() ClusterRoutingTableOutput
	ToClusterRoutingTableOutputWithContext(context.Context) ClusterRoutingTableOutput
}

type ClusterRoutingTableArgs struct {
	// Description of the route.
	Description pulumi.StringInput `pulumi:"description"`
	// Destination of the route.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Target of the route.
	Target pulumi.StringInput `pulumi:"target"`
}

func (ClusterRoutingTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRoutingTable)(nil)).Elem()
}

func (i ClusterRoutingTableArgs) ToClusterRoutingTableOutput() ClusterRoutingTableOutput {
	return i.ToClusterRoutingTableOutputWithContext(context.Background())
}

func (i ClusterRoutingTableArgs) ToClusterRoutingTableOutputWithContext(ctx context.Context) ClusterRoutingTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRoutingTableOutput)
}

// ClusterRoutingTableArrayInput is an input type that accepts ClusterRoutingTableArray and ClusterRoutingTableArrayOutput values.
// You can construct a concrete instance of `ClusterRoutingTableArrayInput` via:
//
//	ClusterRoutingTableArray{ ClusterRoutingTableArgs{...} }
type ClusterRoutingTableArrayInput interface {
	pulumi.Input

	ToClusterRoutingTableArrayOutput() ClusterRoutingTableArrayOutput
	ToClusterRoutingTableArrayOutputWithContext(context.Context) ClusterRoutingTableArrayOutput
}

type ClusterRoutingTableArray []ClusterRoutingTableInput

func (ClusterRoutingTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRoutingTable)(nil)).Elem()
}

func (i ClusterRoutingTableArray) ToClusterRoutingTableArrayOutput() ClusterRoutingTableArrayOutput {
	return i.ToClusterRoutingTableArrayOutputWithContext(context.Background())
}

func (i ClusterRoutingTableArray) ToClusterRoutingTableArrayOutputWithContext(ctx context.Context) ClusterRoutingTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRoutingTableArrayOutput)
}

type ClusterRoutingTableOutput struct{ *pulumi.OutputState }

func (ClusterRoutingTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRoutingTable)(nil)).Elem()
}

func (o ClusterRoutingTableOutput) ToClusterRoutingTableOutput() ClusterRoutingTableOutput {
	return o
}

func (o ClusterRoutingTableOutput) ToClusterRoutingTableOutputWithContext(ctx context.Context) ClusterRoutingTableOutput {
	return o
}

// Description of the route.
func (o ClusterRoutingTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterRoutingTable) string { return v.Description }).(pulumi.StringOutput)
}

// Destination of the route.
func (o ClusterRoutingTableOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterRoutingTable) string { return v.Destination }).(pulumi.StringOutput)
}

// Target of the route.
func (o ClusterRoutingTableOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterRoutingTable) string { return v.Target }).(pulumi.StringOutput)
}

type ClusterRoutingTableArrayOutput struct{ *pulumi.OutputState }

func (ClusterRoutingTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterRoutingTable)(nil)).Elem()
}

func (o ClusterRoutingTableArrayOutput) ToClusterRoutingTableArrayOutput() ClusterRoutingTableArrayOutput {
	return o
}

func (o ClusterRoutingTableArrayOutput) ToClusterRoutingTableArrayOutputWithContext(ctx context.Context) ClusterRoutingTableArrayOutput {
	return o
}

func (o ClusterRoutingTableArrayOutput) Index(i pulumi.IntInput) ClusterRoutingTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterRoutingTable {
		return vs[0].([]ClusterRoutingTable)[vs[1].(int)]
	}).(ClusterRoutingTableOutput)
}

type ContainerBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key *string `pulumi:"key"`
	// Value of the environment variable.
	Value *string `pulumi:"value"`
}

// ContainerBuiltInEnvironmentVariableInput is an input type that accepts ContainerBuiltInEnvironmentVariableArgs and ContainerBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `ContainerBuiltInEnvironmentVariableInput` via:
//
//	ContainerBuiltInEnvironmentVariableArgs{...}
type ContainerBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToContainerBuiltInEnvironmentVariableOutput() ContainerBuiltInEnvironmentVariableOutput
	ToContainerBuiltInEnvironmentVariableOutputWithContext(context.Context) ContainerBuiltInEnvironmentVariableOutput
}

type ContainerBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ContainerBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i ContainerBuiltInEnvironmentVariableArgs) ToContainerBuiltInEnvironmentVariableOutput() ContainerBuiltInEnvironmentVariableOutput {
	return i.ToContainerBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i ContainerBuiltInEnvironmentVariableArgs) ToContainerBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) ContainerBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerBuiltInEnvironmentVariableOutput)
}

// ContainerBuiltInEnvironmentVariableArrayInput is an input type that accepts ContainerBuiltInEnvironmentVariableArray and ContainerBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ContainerBuiltInEnvironmentVariableArrayInput` via:
//
//	ContainerBuiltInEnvironmentVariableArray{ ContainerBuiltInEnvironmentVariableArgs{...} }
type ContainerBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToContainerBuiltInEnvironmentVariableArrayOutput() ContainerBuiltInEnvironmentVariableArrayOutput
	ToContainerBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) ContainerBuiltInEnvironmentVariableArrayOutput
}

type ContainerBuiltInEnvironmentVariableArray []ContainerBuiltInEnvironmentVariableInput

func (ContainerBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i ContainerBuiltInEnvironmentVariableArray) ToContainerBuiltInEnvironmentVariableArrayOutput() ContainerBuiltInEnvironmentVariableArrayOutput {
	return i.ToContainerBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ContainerBuiltInEnvironmentVariableArray) ToContainerBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) ContainerBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerBuiltInEnvironmentVariableArrayOutput)
}

type ContainerBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ContainerBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o ContainerBuiltInEnvironmentVariableOutput) ToContainerBuiltInEnvironmentVariableOutput() ContainerBuiltInEnvironmentVariableOutput {
	return o
}

func (o ContainerBuiltInEnvironmentVariableOutput) ToContainerBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) ContainerBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o ContainerBuiltInEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerBuiltInEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o ContainerBuiltInEnvironmentVariableOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerBuiltInEnvironmentVariable) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value of the environment variable.
func (o ContainerBuiltInEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerBuiltInEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ContainerBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ContainerBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o ContainerBuiltInEnvironmentVariableArrayOutput) ToContainerBuiltInEnvironmentVariableArrayOutput() ContainerBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o ContainerBuiltInEnvironmentVariableArrayOutput) ToContainerBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) ContainerBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o ContainerBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ContainerBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerBuiltInEnvironmentVariable {
		return vs[0].([]ContainerBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(ContainerBuiltInEnvironmentVariableOutput)
}

type ContainerCustomDomain struct {
	// Your custom domain.
	Domain string `pulumi:"domain"`
	// Id of the custom domain.
	Id *string `pulumi:"id"`
	// Status of the custom domain.
	Status *string `pulumi:"status"`
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
	ValidationDomain *string `pulumi:"validationDomain"`
}

// ContainerCustomDomainInput is an input type that accepts ContainerCustomDomainArgs and ContainerCustomDomainOutput values.
// You can construct a concrete instance of `ContainerCustomDomainInput` via:
//
//	ContainerCustomDomainArgs{...}
type ContainerCustomDomainInput interface {
	pulumi.Input

	ToContainerCustomDomainOutput() ContainerCustomDomainOutput
	ToContainerCustomDomainOutputWithContext(context.Context) ContainerCustomDomainOutput
}

type ContainerCustomDomainArgs struct {
	// Your custom domain.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Id of the custom domain.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Status of the custom domain.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
	ValidationDomain pulumi.StringPtrInput `pulumi:"validationDomain"`
}

func (ContainerCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerCustomDomain)(nil)).Elem()
}

func (i ContainerCustomDomainArgs) ToContainerCustomDomainOutput() ContainerCustomDomainOutput {
	return i.ToContainerCustomDomainOutputWithContext(context.Background())
}

func (i ContainerCustomDomainArgs) ToContainerCustomDomainOutputWithContext(ctx context.Context) ContainerCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerCustomDomainOutput)
}

// ContainerCustomDomainArrayInput is an input type that accepts ContainerCustomDomainArray and ContainerCustomDomainArrayOutput values.
// You can construct a concrete instance of `ContainerCustomDomainArrayInput` via:
//
//	ContainerCustomDomainArray{ ContainerCustomDomainArgs{...} }
type ContainerCustomDomainArrayInput interface {
	pulumi.Input

	ToContainerCustomDomainArrayOutput() ContainerCustomDomainArrayOutput
	ToContainerCustomDomainArrayOutputWithContext(context.Context) ContainerCustomDomainArrayOutput
}

type ContainerCustomDomainArray []ContainerCustomDomainInput

func (ContainerCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerCustomDomain)(nil)).Elem()
}

func (i ContainerCustomDomainArray) ToContainerCustomDomainArrayOutput() ContainerCustomDomainArrayOutput {
	return i.ToContainerCustomDomainArrayOutputWithContext(context.Background())
}

func (i ContainerCustomDomainArray) ToContainerCustomDomainArrayOutputWithContext(ctx context.Context) ContainerCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerCustomDomainArrayOutput)
}

type ContainerCustomDomainOutput struct{ *pulumi.OutputState }

func (ContainerCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerCustomDomain)(nil)).Elem()
}

func (o ContainerCustomDomainOutput) ToContainerCustomDomainOutput() ContainerCustomDomainOutput {
	return o
}

func (o ContainerCustomDomainOutput) ToContainerCustomDomainOutputWithContext(ctx context.Context) ContainerCustomDomainOutput {
	return o
}

// Your custom domain.
func (o ContainerCustomDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerCustomDomain) string { return v.Domain }).(pulumi.StringOutput)
}

// Id of the custom domain.
func (o ContainerCustomDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerCustomDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Status of the custom domain.
func (o ContainerCustomDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerCustomDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
func (o ContainerCustomDomainOutput) ValidationDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerCustomDomain) *string { return v.ValidationDomain }).(pulumi.StringPtrOutput)
}

type ContainerCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (ContainerCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerCustomDomain)(nil)).Elem()
}

func (o ContainerCustomDomainArrayOutput) ToContainerCustomDomainArrayOutput() ContainerCustomDomainArrayOutput {
	return o
}

func (o ContainerCustomDomainArrayOutput) ToContainerCustomDomainArrayOutputWithContext(ctx context.Context) ContainerCustomDomainArrayOutput {
	return o
}

func (o ContainerCustomDomainArrayOutput) Index(i pulumi.IntInput) ContainerCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerCustomDomain {
		return vs[0].([]ContainerCustomDomain)[vs[1].(int)]
	}).(ContainerCustomDomainOutput)
}

type ContainerEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// ContainerEnvironmentVariableInput is an input type that accepts ContainerEnvironmentVariableArgs and ContainerEnvironmentVariableOutput values.
// You can construct a concrete instance of `ContainerEnvironmentVariableInput` via:
//
//	ContainerEnvironmentVariableArgs{...}
type ContainerEnvironmentVariableInput interface {
	pulumi.Input

	ToContainerEnvironmentVariableOutput() ContainerEnvironmentVariableOutput
	ToContainerEnvironmentVariableOutputWithContext(context.Context) ContainerEnvironmentVariableOutput
}

type ContainerEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerEnvironmentVariable)(nil)).Elem()
}

func (i ContainerEnvironmentVariableArgs) ToContainerEnvironmentVariableOutput() ContainerEnvironmentVariableOutput {
	return i.ToContainerEnvironmentVariableOutputWithContext(context.Background())
}

func (i ContainerEnvironmentVariableArgs) ToContainerEnvironmentVariableOutputWithContext(ctx context.Context) ContainerEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerEnvironmentVariableOutput)
}

// ContainerEnvironmentVariableArrayInput is an input type that accepts ContainerEnvironmentVariableArray and ContainerEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ContainerEnvironmentVariableArrayInput` via:
//
//	ContainerEnvironmentVariableArray{ ContainerEnvironmentVariableArgs{...} }
type ContainerEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToContainerEnvironmentVariableArrayOutput() ContainerEnvironmentVariableArrayOutput
	ToContainerEnvironmentVariableArrayOutputWithContext(context.Context) ContainerEnvironmentVariableArrayOutput
}

type ContainerEnvironmentVariableArray []ContainerEnvironmentVariableInput

func (ContainerEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerEnvironmentVariable)(nil)).Elem()
}

func (i ContainerEnvironmentVariableArray) ToContainerEnvironmentVariableArrayOutput() ContainerEnvironmentVariableArrayOutput {
	return i.ToContainerEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ContainerEnvironmentVariableArray) ToContainerEnvironmentVariableArrayOutputWithContext(ctx context.Context) ContainerEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerEnvironmentVariableArrayOutput)
}

type ContainerEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ContainerEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerEnvironmentVariable)(nil)).Elem()
}

func (o ContainerEnvironmentVariableOutput) ToContainerEnvironmentVariableOutput() ContainerEnvironmentVariableOutput {
	return o
}

func (o ContainerEnvironmentVariableOutput) ToContainerEnvironmentVariableOutputWithContext(ctx context.Context) ContainerEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o ContainerEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o ContainerEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o ContainerEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ContainerEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerEnvironmentVariable)(nil)).Elem()
}

func (o ContainerEnvironmentVariableArrayOutput) ToContainerEnvironmentVariableArrayOutput() ContainerEnvironmentVariableArrayOutput {
	return o
}

func (o ContainerEnvironmentVariableArrayOutput) ToContainerEnvironmentVariableArrayOutputWithContext(ctx context.Context) ContainerEnvironmentVariableArrayOutput {
	return o
}

func (o ContainerEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ContainerEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerEnvironmentVariable {
		return vs[0].([]ContainerEnvironmentVariable)[vs[1].(int)]
	}).(ContainerEnvironmentVariableOutput)
}

type ContainerEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id *string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// ContainerEnvironmentVariableAliasInput is an input type that accepts ContainerEnvironmentVariableAliasArgs and ContainerEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `ContainerEnvironmentVariableAliasInput` via:
//
//	ContainerEnvironmentVariableAliasArgs{...}
type ContainerEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToContainerEnvironmentVariableAliasOutput() ContainerEnvironmentVariableAliasOutput
	ToContainerEnvironmentVariableAliasOutputWithContext(context.Context) ContainerEnvironmentVariableAliasOutput
}

type ContainerEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerEnvironmentVariableAlias)(nil)).Elem()
}

func (i ContainerEnvironmentVariableAliasArgs) ToContainerEnvironmentVariableAliasOutput() ContainerEnvironmentVariableAliasOutput {
	return i.ToContainerEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i ContainerEnvironmentVariableAliasArgs) ToContainerEnvironmentVariableAliasOutputWithContext(ctx context.Context) ContainerEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerEnvironmentVariableAliasOutput)
}

// ContainerEnvironmentVariableAliasArrayInput is an input type that accepts ContainerEnvironmentVariableAliasArray and ContainerEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `ContainerEnvironmentVariableAliasArrayInput` via:
//
//	ContainerEnvironmentVariableAliasArray{ ContainerEnvironmentVariableAliasArgs{...} }
type ContainerEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToContainerEnvironmentVariableAliasArrayOutput() ContainerEnvironmentVariableAliasArrayOutput
	ToContainerEnvironmentVariableAliasArrayOutputWithContext(context.Context) ContainerEnvironmentVariableAliasArrayOutput
}

type ContainerEnvironmentVariableAliasArray []ContainerEnvironmentVariableAliasInput

func (ContainerEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerEnvironmentVariableAlias)(nil)).Elem()
}

func (i ContainerEnvironmentVariableAliasArray) ToContainerEnvironmentVariableAliasArrayOutput() ContainerEnvironmentVariableAliasArrayOutput {
	return i.ToContainerEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i ContainerEnvironmentVariableAliasArray) ToContainerEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) ContainerEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerEnvironmentVariableAliasArrayOutput)
}

type ContainerEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (ContainerEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerEnvironmentVariableAlias)(nil)).Elem()
}

func (o ContainerEnvironmentVariableAliasOutput) ToContainerEnvironmentVariableAliasOutput() ContainerEnvironmentVariableAliasOutput {
	return o
}

func (o ContainerEnvironmentVariableAliasOutput) ToContainerEnvironmentVariableAliasOutputWithContext(ctx context.Context) ContainerEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o ContainerEnvironmentVariableAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariableAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable alias.
func (o ContainerEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o ContainerEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (ContainerEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerEnvironmentVariableAlias)(nil)).Elem()
}

func (o ContainerEnvironmentVariableAliasArrayOutput) ToContainerEnvironmentVariableAliasArrayOutput() ContainerEnvironmentVariableAliasArrayOutput {
	return o
}

func (o ContainerEnvironmentVariableAliasArrayOutput) ToContainerEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) ContainerEnvironmentVariableAliasArrayOutput {
	return o
}

func (o ContainerEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) ContainerEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerEnvironmentVariableAlias {
		return vs[0].([]ContainerEnvironmentVariableAlias)[vs[1].(int)]
	}).(ContainerEnvironmentVariableAliasOutput)
}

type ContainerEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id *string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// ContainerEnvironmentVariableOverrideInput is an input type that accepts ContainerEnvironmentVariableOverrideArgs and ContainerEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `ContainerEnvironmentVariableOverrideInput` via:
//
//	ContainerEnvironmentVariableOverrideArgs{...}
type ContainerEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToContainerEnvironmentVariableOverrideOutput() ContainerEnvironmentVariableOverrideOutput
	ToContainerEnvironmentVariableOverrideOutputWithContext(context.Context) ContainerEnvironmentVariableOverrideOutput
}

type ContainerEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerEnvironmentVariableOverride)(nil)).Elem()
}

func (i ContainerEnvironmentVariableOverrideArgs) ToContainerEnvironmentVariableOverrideOutput() ContainerEnvironmentVariableOverrideOutput {
	return i.ToContainerEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i ContainerEnvironmentVariableOverrideArgs) ToContainerEnvironmentVariableOverrideOutputWithContext(ctx context.Context) ContainerEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerEnvironmentVariableOverrideOutput)
}

// ContainerEnvironmentVariableOverrideArrayInput is an input type that accepts ContainerEnvironmentVariableOverrideArray and ContainerEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `ContainerEnvironmentVariableOverrideArrayInput` via:
//
//	ContainerEnvironmentVariableOverrideArray{ ContainerEnvironmentVariableOverrideArgs{...} }
type ContainerEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToContainerEnvironmentVariableOverrideArrayOutput() ContainerEnvironmentVariableOverrideArrayOutput
	ToContainerEnvironmentVariableOverrideArrayOutputWithContext(context.Context) ContainerEnvironmentVariableOverrideArrayOutput
}

type ContainerEnvironmentVariableOverrideArray []ContainerEnvironmentVariableOverrideInput

func (ContainerEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerEnvironmentVariableOverride)(nil)).Elem()
}

func (i ContainerEnvironmentVariableOverrideArray) ToContainerEnvironmentVariableOverrideArrayOutput() ContainerEnvironmentVariableOverrideArrayOutput {
	return i.ToContainerEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i ContainerEnvironmentVariableOverrideArray) ToContainerEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) ContainerEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerEnvironmentVariableOverrideArrayOutput)
}

type ContainerEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (ContainerEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerEnvironmentVariableOverride)(nil)).Elem()
}

func (o ContainerEnvironmentVariableOverrideOutput) ToContainerEnvironmentVariableOverrideOutput() ContainerEnvironmentVariableOverrideOutput {
	return o
}

func (o ContainerEnvironmentVariableOverrideOutput) ToContainerEnvironmentVariableOverrideOutputWithContext(ctx context.Context) ContainerEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o ContainerEnvironmentVariableOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariableOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable override.
func (o ContainerEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o ContainerEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (ContainerEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerEnvironmentVariableOverride)(nil)).Elem()
}

func (o ContainerEnvironmentVariableOverrideArrayOutput) ToContainerEnvironmentVariableOverrideArrayOutput() ContainerEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o ContainerEnvironmentVariableOverrideArrayOutput) ToContainerEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) ContainerEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o ContainerEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) ContainerEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerEnvironmentVariableOverride {
		return vs[0].([]ContainerEnvironmentVariableOverride)[vs[1].(int)]
	}).(ContainerEnvironmentVariableOverrideOutput)
}

type ContainerHealthchecks struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe *ContainerHealthchecksLivenessProbe `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe *ContainerHealthchecksReadinessProbe `pulumi:"readinessProbe"`
}

// ContainerHealthchecksInput is an input type that accepts ContainerHealthchecksArgs and ContainerHealthchecksOutput values.
// You can construct a concrete instance of `ContainerHealthchecksInput` via:
//
//	ContainerHealthchecksArgs{...}
type ContainerHealthchecksInput interface {
	pulumi.Input

	ToContainerHealthchecksOutput() ContainerHealthchecksOutput
	ToContainerHealthchecksOutputWithContext(context.Context) ContainerHealthchecksOutput
}

type ContainerHealthchecksArgs struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe ContainerHealthchecksLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe ContainerHealthchecksReadinessProbePtrInput `pulumi:"readinessProbe"`
}

func (ContainerHealthchecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecks)(nil)).Elem()
}

func (i ContainerHealthchecksArgs) ToContainerHealthchecksOutput() ContainerHealthchecksOutput {
	return i.ToContainerHealthchecksOutputWithContext(context.Background())
}

func (i ContainerHealthchecksArgs) ToContainerHealthchecksOutputWithContext(ctx context.Context) ContainerHealthchecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksOutput)
}

func (i ContainerHealthchecksArgs) ToContainerHealthchecksPtrOutput() ContainerHealthchecksPtrOutput {
	return i.ToContainerHealthchecksPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksArgs) ToContainerHealthchecksPtrOutputWithContext(ctx context.Context) ContainerHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksOutput).ToContainerHealthchecksPtrOutputWithContext(ctx)
}

// ContainerHealthchecksPtrInput is an input type that accepts ContainerHealthchecksArgs, ContainerHealthchecksPtr and ContainerHealthchecksPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksPtrInput` via:
//
//	        ContainerHealthchecksArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksPtrOutput() ContainerHealthchecksPtrOutput
	ToContainerHealthchecksPtrOutputWithContext(context.Context) ContainerHealthchecksPtrOutput
}

type containerHealthchecksPtrType ContainerHealthchecksArgs

func ContainerHealthchecksPtr(v *ContainerHealthchecksArgs) ContainerHealthchecksPtrInput {
	return (*containerHealthchecksPtrType)(v)
}

func (*containerHealthchecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecks)(nil)).Elem()
}

func (i *containerHealthchecksPtrType) ToContainerHealthchecksPtrOutput() ContainerHealthchecksPtrOutput {
	return i.ToContainerHealthchecksPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksPtrType) ToContainerHealthchecksPtrOutputWithContext(ctx context.Context) ContainerHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksPtrOutput)
}

type ContainerHealthchecksOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecks)(nil)).Elem()
}

func (o ContainerHealthchecksOutput) ToContainerHealthchecksOutput() ContainerHealthchecksOutput {
	return o
}

func (o ContainerHealthchecksOutput) ToContainerHealthchecksOutputWithContext(ctx context.Context) ContainerHealthchecksOutput {
	return o
}

func (o ContainerHealthchecksOutput) ToContainerHealthchecksPtrOutput() ContainerHealthchecksPtrOutput {
	return o.ToContainerHealthchecksPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksOutput) ToContainerHealthchecksPtrOutputWithContext(ctx context.Context) ContainerHealthchecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecks) *ContainerHealthchecks {
		return &v
	}).(ContainerHealthchecksPtrOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o ContainerHealthchecksOutput) LivenessProbe() ContainerHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v ContainerHealthchecks) *ContainerHealthchecksLivenessProbe { return v.LivenessProbe }).(ContainerHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o ContainerHealthchecksOutput) ReadinessProbe() ContainerHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v ContainerHealthchecks) *ContainerHealthchecksReadinessProbe { return v.ReadinessProbe }).(ContainerHealthchecksReadinessProbePtrOutput)
}

type ContainerHealthchecksPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecks)(nil)).Elem()
}

func (o ContainerHealthchecksPtrOutput) ToContainerHealthchecksPtrOutput() ContainerHealthchecksPtrOutput {
	return o
}

func (o ContainerHealthchecksPtrOutput) ToContainerHealthchecksPtrOutputWithContext(ctx context.Context) ContainerHealthchecksPtrOutput {
	return o
}

func (o ContainerHealthchecksPtrOutput) Elem() ContainerHealthchecksOutput {
	return o.ApplyT(func(v *ContainerHealthchecks) ContainerHealthchecks {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecks
		return ret
	}).(ContainerHealthchecksOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o ContainerHealthchecksPtrOutput) LivenessProbe() ContainerHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecks) *ContainerHealthchecksLivenessProbe {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(ContainerHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o ContainerHealthchecksPtrOutput) ReadinessProbe() ContainerHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecks) *ContainerHealthchecksReadinessProbe {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(ContainerHealthchecksReadinessProbePtrOutput)
}

type ContainerHealthchecksLivenessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type ContainerHealthchecksLivenessProbeType `pulumi:"type"`
}

// ContainerHealthchecksLivenessProbeInput is an input type that accepts ContainerHealthchecksLivenessProbeArgs and ContainerHealthchecksLivenessProbeOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeInput` via:
//
//	ContainerHealthchecksLivenessProbeArgs{...}
type ContainerHealthchecksLivenessProbeInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeOutput() ContainerHealthchecksLivenessProbeOutput
	ToContainerHealthchecksLivenessProbeOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeOutput
}

type ContainerHealthchecksLivenessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type ContainerHealthchecksLivenessProbeTypeInput `pulumi:"type"`
}

func (ContainerHealthchecksLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbe)(nil)).Elem()
}

func (i ContainerHealthchecksLivenessProbeArgs) ToContainerHealthchecksLivenessProbeOutput() ContainerHealthchecksLivenessProbeOutput {
	return i.ToContainerHealthchecksLivenessProbeOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeArgs) ToContainerHealthchecksLivenessProbeOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeOutput)
}

func (i ContainerHealthchecksLivenessProbeArgs) ToContainerHealthchecksLivenessProbePtrOutput() ContainerHealthchecksLivenessProbePtrOutput {
	return i.ToContainerHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeArgs) ToContainerHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeOutput).ToContainerHealthchecksLivenessProbePtrOutputWithContext(ctx)
}

// ContainerHealthchecksLivenessProbePtrInput is an input type that accepts ContainerHealthchecksLivenessProbeArgs, ContainerHealthchecksLivenessProbePtr and ContainerHealthchecksLivenessProbePtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbePtrInput` via:
//
//	        ContainerHealthchecksLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksLivenessProbePtrInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbePtrOutput() ContainerHealthchecksLivenessProbePtrOutput
	ToContainerHealthchecksLivenessProbePtrOutputWithContext(context.Context) ContainerHealthchecksLivenessProbePtrOutput
}

type containerHealthchecksLivenessProbePtrType ContainerHealthchecksLivenessProbeArgs

func ContainerHealthchecksLivenessProbePtr(v *ContainerHealthchecksLivenessProbeArgs) ContainerHealthchecksLivenessProbePtrInput {
	return (*containerHealthchecksLivenessProbePtrType)(v)
}

func (*containerHealthchecksLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbe)(nil)).Elem()
}

func (i *containerHealthchecksLivenessProbePtrType) ToContainerHealthchecksLivenessProbePtrOutput() ContainerHealthchecksLivenessProbePtrOutput {
	return i.ToContainerHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksLivenessProbePtrType) ToContainerHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbePtrOutput)
}

type ContainerHealthchecksLivenessProbeOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbe)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeOutput) ToContainerHealthchecksLivenessProbeOutput() ContainerHealthchecksLivenessProbeOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeOutput) ToContainerHealthchecksLivenessProbeOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeOutput) ToContainerHealthchecksLivenessProbePtrOutput() ContainerHealthchecksLivenessProbePtrOutput {
	return o.ToContainerHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksLivenessProbeOutput) ToContainerHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksLivenessProbe) *ContainerHealthchecksLivenessProbe {
		return &v
	}).(ContainerHealthchecksLivenessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o ContainerHealthchecksLivenessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o ContainerHealthchecksLivenessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o ContainerHealthchecksLivenessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o ContainerHealthchecksLivenessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o ContainerHealthchecksLivenessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o ContainerHealthchecksLivenessProbeOutput) Type() ContainerHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbe) ContainerHealthchecksLivenessProbeType { return v.Type }).(ContainerHealthchecksLivenessProbeTypeOutput)
}

type ContainerHealthchecksLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbe)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbePtrOutput) ToContainerHealthchecksLivenessProbePtrOutput() ContainerHealthchecksLivenessProbePtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbePtrOutput) ToContainerHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbePtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbePtrOutput) Elem() ContainerHealthchecksLivenessProbeOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbe) ContainerHealthchecksLivenessProbe {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksLivenessProbe
		return ret
	}).(ContainerHealthchecksLivenessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o ContainerHealthchecksLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o ContainerHealthchecksLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o ContainerHealthchecksLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o ContainerHealthchecksLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o ContainerHealthchecksLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o ContainerHealthchecksLivenessProbePtrOutput) Type() ContainerHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbe) *ContainerHealthchecksLivenessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(ContainerHealthchecksLivenessProbeTypePtrOutput)
}

type ContainerHealthchecksLivenessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *ContainerHealthchecksLivenessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *ContainerHealthchecksLivenessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *ContainerHealthchecksLivenessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *ContainerHealthchecksLivenessProbeTypeTcp `pulumi:"tcp"`
}

// ContainerHealthchecksLivenessProbeTypeInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeArgs and ContainerHealthchecksLivenessProbeTypeOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeInput` via:
//
//	ContainerHealthchecksLivenessProbeTypeArgs{...}
type ContainerHealthchecksLivenessProbeTypeInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeOutput() ContainerHealthchecksLivenessProbeTypeOutput
	ToContainerHealthchecksLivenessProbeTypeOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeOutput
}

type ContainerHealthchecksLivenessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec ContainerHealthchecksLivenessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc ContainerHealthchecksLivenessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http ContainerHealthchecksLivenessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp ContainerHealthchecksLivenessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (ContainerHealthchecksLivenessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i ContainerHealthchecksLivenessProbeTypeArgs) ToContainerHealthchecksLivenessProbeTypeOutput() ContainerHealthchecksLivenessProbeTypeOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeArgs) ToContainerHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeOutput)
}

func (i ContainerHealthchecksLivenessProbeTypeArgs) ToContainerHealthchecksLivenessProbeTypePtrOutput() ContainerHealthchecksLivenessProbeTypePtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeArgs) ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeOutput).ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx)
}

// ContainerHealthchecksLivenessProbeTypePtrInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeArgs, ContainerHealthchecksLivenessProbeTypePtr and ContainerHealthchecksLivenessProbeTypePtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypePtrInput` via:
//
//	        ContainerHealthchecksLivenessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksLivenessProbeTypePtrInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypePtrOutput() ContainerHealthchecksLivenessProbeTypePtrOutput
	ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypePtrOutput
}

type containerHealthchecksLivenessProbeTypePtrType ContainerHealthchecksLivenessProbeTypeArgs

func ContainerHealthchecksLivenessProbeTypePtr(v *ContainerHealthchecksLivenessProbeTypeArgs) ContainerHealthchecksLivenessProbeTypePtrInput {
	return (*containerHealthchecksLivenessProbeTypePtrType)(v)
}

func (*containerHealthchecksLivenessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i *containerHealthchecksLivenessProbeTypePtrType) ToContainerHealthchecksLivenessProbeTypePtrOutput() ContainerHealthchecksLivenessProbeTypePtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksLivenessProbeTypePtrType) ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypePtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeOutput) ToContainerHealthchecksLivenessProbeTypeOutput() ContainerHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeOutput) ToContainerHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeOutput) ToContainerHealthchecksLivenessProbeTypePtrOutput() ContainerHealthchecksLivenessProbeTypePtrOutput {
	return o.ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksLivenessProbeTypeOutput) ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeType {
		return &v
	}).(ContainerHealthchecksLivenessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o ContainerHealthchecksLivenessProbeTypeOutput) Exec() ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeTypeExec {
		return v.Exec
	}).(ContainerHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o ContainerHealthchecksLivenessProbeTypeOutput) Grpc() ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeTypeGrpc {
		return v.Grpc
	}).(ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o ContainerHealthchecksLivenessProbeTypeOutput) Http() ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeTypeHttp {
		return v.Http
	}).(ContainerHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o ContainerHealthchecksLivenessProbeTypeOutput) Tcp() ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeTypeTcp {
		return v.Tcp
	}).(ContainerHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypePtrOutput) ToContainerHealthchecksLivenessProbeTypePtrOutput() ContainerHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypePtrOutput) ToContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypePtrOutput) Elem() ContainerHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeType) ContainerHealthchecksLivenessProbeType {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksLivenessProbeType
		return ret
	}).(ContainerHealthchecksLivenessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o ContainerHealthchecksLivenessProbeTypePtrOutput) Exec() ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ContainerHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o ContainerHealthchecksLivenessProbeTypePtrOutput) Grpc() ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o ContainerHealthchecksLivenessProbeTypePtrOutput) Http() ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(ContainerHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o ContainerHealthchecksLivenessProbeTypePtrOutput) Tcp() ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeType) *ContainerHealthchecksLivenessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(ContainerHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// ContainerHealthchecksLivenessProbeTypeExecInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeExecArgs and ContainerHealthchecksLivenessProbeTypeExecOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeExecInput` via:
//
//	ContainerHealthchecksLivenessProbeTypeExecArgs{...}
type ContainerHealthchecksLivenessProbeTypeExecInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeExecOutput() ContainerHealthchecksLivenessProbeTypeExecOutput
	ToContainerHealthchecksLivenessProbeTypeExecOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeExecOutput
}

type ContainerHealthchecksLivenessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (ContainerHealthchecksLivenessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i ContainerHealthchecksLivenessProbeTypeExecArgs) ToContainerHealthchecksLivenessProbeTypeExecOutput() ContainerHealthchecksLivenessProbeTypeExecOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeExecOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeExecArgs) ToContainerHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeExecOutput)
}

func (i ContainerHealthchecksLivenessProbeTypeExecArgs) ToContainerHealthchecksLivenessProbeTypeExecPtrOutput() ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeExecArgs) ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeExecOutput).ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx)
}

// ContainerHealthchecksLivenessProbeTypeExecPtrInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeExecArgs, ContainerHealthchecksLivenessProbeTypeExecPtr and ContainerHealthchecksLivenessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeExecPtrInput` via:
//
//	        ContainerHealthchecksLivenessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksLivenessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeExecPtrOutput() ContainerHealthchecksLivenessProbeTypeExecPtrOutput
	ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeExecPtrOutput
}

type containerHealthchecksLivenessProbeTypeExecPtrType ContainerHealthchecksLivenessProbeTypeExecArgs

func ContainerHealthchecksLivenessProbeTypeExecPtr(v *ContainerHealthchecksLivenessProbeTypeExecArgs) ContainerHealthchecksLivenessProbeTypeExecPtrInput {
	return (*containerHealthchecksLivenessProbeTypeExecPtrType)(v)
}

func (*containerHealthchecksLivenessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i *containerHealthchecksLivenessProbeTypeExecPtrType) ToContainerHealthchecksLivenessProbeTypeExecPtrOutput() ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksLivenessProbeTypeExecPtrType) ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeExecPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeExecOutput) ToContainerHealthchecksLivenessProbeTypeExecOutput() ContainerHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeExecOutput) ToContainerHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeExecOutput) ToContainerHealthchecksLivenessProbeTypeExecPtrOutput() ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksLivenessProbeTypeExecOutput) ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksLivenessProbeTypeExec) *ContainerHealthchecksLivenessProbeTypeExec {
		return &v
	}).(ContainerHealthchecksLivenessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o ContainerHealthchecksLivenessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type ContainerHealthchecksLivenessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeExecPtrOutput) ToContainerHealthchecksLivenessProbeTypeExecPtrOutput() ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeExecPtrOutput) ToContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeExecPtrOutput) Elem() ContainerHealthchecksLivenessProbeTypeExecOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeExec) ContainerHealthchecksLivenessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksLivenessProbeTypeExec
		return ret
	}).(ContainerHealthchecksLivenessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o ContainerHealthchecksLivenessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type ContainerHealthchecksLivenessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// ContainerHealthchecksLivenessProbeTypeGrpcInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeGrpcArgs and ContainerHealthchecksLivenessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeGrpcInput` via:
//
//	ContainerHealthchecksLivenessProbeTypeGrpcArgs{...}
type ContainerHealthchecksLivenessProbeTypeGrpcInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeGrpcOutput() ContainerHealthchecksLivenessProbeTypeGrpcOutput
	ToContainerHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeGrpcOutput
}

type ContainerHealthchecksLivenessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ContainerHealthchecksLivenessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i ContainerHealthchecksLivenessProbeTypeGrpcArgs) ToContainerHealthchecksLivenessProbeTypeGrpcOutput() ContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeGrpcArgs) ToContainerHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeGrpcOutput)
}

func (i ContainerHealthchecksLivenessProbeTypeGrpcArgs) ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeGrpcArgs) ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeGrpcOutput).ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// ContainerHealthchecksLivenessProbeTypeGrpcPtrInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeGrpcArgs, ContainerHealthchecksLivenessProbeTypeGrpcPtr and ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeGrpcPtrInput` via:
//
//	        ContainerHealthchecksLivenessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksLivenessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput
	ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput
}

type containerHealthchecksLivenessProbeTypeGrpcPtrType ContainerHealthchecksLivenessProbeTypeGrpcArgs

func ContainerHealthchecksLivenessProbeTypeGrpcPtr(v *ContainerHealthchecksLivenessProbeTypeGrpcArgs) ContainerHealthchecksLivenessProbeTypeGrpcPtrInput {
	return (*containerHealthchecksLivenessProbeTypeGrpcPtrType)(v)
}

func (*containerHealthchecksLivenessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i *containerHealthchecksLivenessProbeTypeGrpcPtrType) ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksLivenessProbeTypeGrpcPtrType) ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeGrpcOutput) ToContainerHealthchecksLivenessProbeTypeGrpcOutput() ContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeGrpcOutput) ToContainerHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeGrpcOutput) ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksLivenessProbeTypeGrpcOutput) ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksLivenessProbeTypeGrpc) *ContainerHealthchecksLivenessProbeTypeGrpc {
		return &v
	}).(ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksLivenessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o ContainerHealthchecksLivenessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) ToContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) Elem() ContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeGrpc) ContainerHealthchecksLivenessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksLivenessProbeTypeGrpc
		return ret
	}).(ContainerHealthchecksLivenessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// ContainerHealthchecksLivenessProbeTypeHttpInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeHttpArgs and ContainerHealthchecksLivenessProbeTypeHttpOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeHttpInput` via:
//
//	ContainerHealthchecksLivenessProbeTypeHttpArgs{...}
type ContainerHealthchecksLivenessProbeTypeHttpInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeHttpOutput() ContainerHealthchecksLivenessProbeTypeHttpOutput
	ToContainerHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeHttpOutput
}

type ContainerHealthchecksLivenessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (ContainerHealthchecksLivenessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i ContainerHealthchecksLivenessProbeTypeHttpArgs) ToContainerHealthchecksLivenessProbeTypeHttpOutput() ContainerHealthchecksLivenessProbeTypeHttpOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeHttpArgs) ToContainerHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeHttpOutput)
}

func (i ContainerHealthchecksLivenessProbeTypeHttpArgs) ToContainerHealthchecksLivenessProbeTypeHttpPtrOutput() ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeHttpArgs) ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeHttpOutput).ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx)
}

// ContainerHealthchecksLivenessProbeTypeHttpPtrInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeHttpArgs, ContainerHealthchecksLivenessProbeTypeHttpPtr and ContainerHealthchecksLivenessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeHttpPtrInput` via:
//
//	        ContainerHealthchecksLivenessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksLivenessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeHttpPtrOutput() ContainerHealthchecksLivenessProbeTypeHttpPtrOutput
	ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeHttpPtrOutput
}

type containerHealthchecksLivenessProbeTypeHttpPtrType ContainerHealthchecksLivenessProbeTypeHttpArgs

func ContainerHealthchecksLivenessProbeTypeHttpPtr(v *ContainerHealthchecksLivenessProbeTypeHttpArgs) ContainerHealthchecksLivenessProbeTypeHttpPtrInput {
	return (*containerHealthchecksLivenessProbeTypeHttpPtrType)(v)
}

func (*containerHealthchecksLivenessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i *containerHealthchecksLivenessProbeTypeHttpPtrType) ToContainerHealthchecksLivenessProbeTypeHttpPtrOutput() ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksLivenessProbeTypeHttpPtrType) ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeHttpPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeHttpOutput) ToContainerHealthchecksLivenessProbeTypeHttpOutput() ContainerHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeHttpOutput) ToContainerHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeHttpOutput) ToContainerHealthchecksLivenessProbeTypeHttpPtrOutput() ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksLivenessProbeTypeHttpOutput) ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksLivenessProbeTypeHttp) *ContainerHealthchecksLivenessProbeTypeHttp {
		return &v
	}).(ContainerHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o ContainerHealthchecksLivenessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksLivenessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o ContainerHealthchecksLivenessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type ContainerHealthchecksLivenessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeHttpPtrOutput) ToContainerHealthchecksLivenessProbeTypeHttpPtrOutput() ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeHttpPtrOutput) ToContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeHttpPtrOutput) Elem() ContainerHealthchecksLivenessProbeTypeHttpOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeHttp) ContainerHealthchecksLivenessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksLivenessProbeTypeHttp
		return ret
	}).(ContainerHealthchecksLivenessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o ContainerHealthchecksLivenessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksLivenessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o ContainerHealthchecksLivenessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// ContainerHealthchecksLivenessProbeTypeTcpInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeTcpArgs and ContainerHealthchecksLivenessProbeTypeTcpOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeTcpInput` via:
//
//	ContainerHealthchecksLivenessProbeTypeTcpArgs{...}
type ContainerHealthchecksLivenessProbeTypeTcpInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeTcpOutput() ContainerHealthchecksLivenessProbeTypeTcpOutput
	ToContainerHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeTcpOutput
}

type ContainerHealthchecksLivenessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (ContainerHealthchecksLivenessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i ContainerHealthchecksLivenessProbeTypeTcpArgs) ToContainerHealthchecksLivenessProbeTypeTcpOutput() ContainerHealthchecksLivenessProbeTypeTcpOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeTcpArgs) ToContainerHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeTcpOutput)
}

func (i ContainerHealthchecksLivenessProbeTypeTcpArgs) ToContainerHealthchecksLivenessProbeTypeTcpPtrOutput() ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksLivenessProbeTypeTcpArgs) ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeTcpOutput).ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx)
}

// ContainerHealthchecksLivenessProbeTypeTcpPtrInput is an input type that accepts ContainerHealthchecksLivenessProbeTypeTcpArgs, ContainerHealthchecksLivenessProbeTypeTcpPtr and ContainerHealthchecksLivenessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksLivenessProbeTypeTcpPtrInput` via:
//
//	        ContainerHealthchecksLivenessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksLivenessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksLivenessProbeTypeTcpPtrOutput() ContainerHealthchecksLivenessProbeTypeTcpPtrOutput
	ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Context) ContainerHealthchecksLivenessProbeTypeTcpPtrOutput
}

type containerHealthchecksLivenessProbeTypeTcpPtrType ContainerHealthchecksLivenessProbeTypeTcpArgs

func ContainerHealthchecksLivenessProbeTypeTcpPtr(v *ContainerHealthchecksLivenessProbeTypeTcpArgs) ContainerHealthchecksLivenessProbeTypeTcpPtrInput {
	return (*containerHealthchecksLivenessProbeTypeTcpPtrType)(v)
}

func (*containerHealthchecksLivenessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i *containerHealthchecksLivenessProbeTypeTcpPtrType) ToContainerHealthchecksLivenessProbeTypeTcpPtrOutput() ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksLivenessProbeTypeTcpPtrType) ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type ContainerHealthchecksLivenessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeTcpOutput) ToContainerHealthchecksLivenessProbeTypeTcpOutput() ContainerHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeTcpOutput) ToContainerHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeTcpOutput) ToContainerHealthchecksLivenessProbeTypeTcpPtrOutput() ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksLivenessProbeTypeTcpOutput) ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksLivenessProbeTypeTcp) *ContainerHealthchecksLivenessProbeTypeTcp {
		return &v
	}).(ContainerHealthchecksLivenessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o ContainerHealthchecksLivenessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksLivenessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksLivenessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type ContainerHealthchecksLivenessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksLivenessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o ContainerHealthchecksLivenessProbeTypeTcpPtrOutput) ToContainerHealthchecksLivenessProbeTypeTcpPtrOutput() ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeTcpPtrOutput) ToContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o ContainerHealthchecksLivenessProbeTypeTcpPtrOutput) Elem() ContainerHealthchecksLivenessProbeTypeTcpOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeTcp) ContainerHealthchecksLivenessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksLivenessProbeTypeTcp
		return ret
	}).(ContainerHealthchecksLivenessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o ContainerHealthchecksLivenessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksLivenessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksLivenessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ContainerHealthchecksReadinessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type ContainerHealthchecksReadinessProbeType `pulumi:"type"`
}

// ContainerHealthchecksReadinessProbeInput is an input type that accepts ContainerHealthchecksReadinessProbeArgs and ContainerHealthchecksReadinessProbeOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeInput` via:
//
//	ContainerHealthchecksReadinessProbeArgs{...}
type ContainerHealthchecksReadinessProbeInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeOutput() ContainerHealthchecksReadinessProbeOutput
	ToContainerHealthchecksReadinessProbeOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeOutput
}

type ContainerHealthchecksReadinessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type ContainerHealthchecksReadinessProbeTypeInput `pulumi:"type"`
}

func (ContainerHealthchecksReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbe)(nil)).Elem()
}

func (i ContainerHealthchecksReadinessProbeArgs) ToContainerHealthchecksReadinessProbeOutput() ContainerHealthchecksReadinessProbeOutput {
	return i.ToContainerHealthchecksReadinessProbeOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeArgs) ToContainerHealthchecksReadinessProbeOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeOutput)
}

func (i ContainerHealthchecksReadinessProbeArgs) ToContainerHealthchecksReadinessProbePtrOutput() ContainerHealthchecksReadinessProbePtrOutput {
	return i.ToContainerHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeArgs) ToContainerHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeOutput).ToContainerHealthchecksReadinessProbePtrOutputWithContext(ctx)
}

// ContainerHealthchecksReadinessProbePtrInput is an input type that accepts ContainerHealthchecksReadinessProbeArgs, ContainerHealthchecksReadinessProbePtr and ContainerHealthchecksReadinessProbePtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbePtrInput` via:
//
//	        ContainerHealthchecksReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksReadinessProbePtrInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbePtrOutput() ContainerHealthchecksReadinessProbePtrOutput
	ToContainerHealthchecksReadinessProbePtrOutputWithContext(context.Context) ContainerHealthchecksReadinessProbePtrOutput
}

type containerHealthchecksReadinessProbePtrType ContainerHealthchecksReadinessProbeArgs

func ContainerHealthchecksReadinessProbePtr(v *ContainerHealthchecksReadinessProbeArgs) ContainerHealthchecksReadinessProbePtrInput {
	return (*containerHealthchecksReadinessProbePtrType)(v)
}

func (*containerHealthchecksReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbe)(nil)).Elem()
}

func (i *containerHealthchecksReadinessProbePtrType) ToContainerHealthchecksReadinessProbePtrOutput() ContainerHealthchecksReadinessProbePtrOutput {
	return i.ToContainerHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksReadinessProbePtrType) ToContainerHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbePtrOutput)
}

type ContainerHealthchecksReadinessProbeOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbe)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeOutput) ToContainerHealthchecksReadinessProbeOutput() ContainerHealthchecksReadinessProbeOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeOutput) ToContainerHealthchecksReadinessProbeOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeOutput) ToContainerHealthchecksReadinessProbePtrOutput() ContainerHealthchecksReadinessProbePtrOutput {
	return o.ToContainerHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksReadinessProbeOutput) ToContainerHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksReadinessProbe) *ContainerHealthchecksReadinessProbe {
		return &v
	}).(ContainerHealthchecksReadinessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o ContainerHealthchecksReadinessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o ContainerHealthchecksReadinessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o ContainerHealthchecksReadinessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o ContainerHealthchecksReadinessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o ContainerHealthchecksReadinessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o ContainerHealthchecksReadinessProbeOutput) Type() ContainerHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbe) ContainerHealthchecksReadinessProbeType { return v.Type }).(ContainerHealthchecksReadinessProbeTypeOutput)
}

type ContainerHealthchecksReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbe)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbePtrOutput) ToContainerHealthchecksReadinessProbePtrOutput() ContainerHealthchecksReadinessProbePtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbePtrOutput) ToContainerHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbePtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbePtrOutput) Elem() ContainerHealthchecksReadinessProbeOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbe) ContainerHealthchecksReadinessProbe {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksReadinessProbe
		return ret
	}).(ContainerHealthchecksReadinessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o ContainerHealthchecksReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o ContainerHealthchecksReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o ContainerHealthchecksReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o ContainerHealthchecksReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o ContainerHealthchecksReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o ContainerHealthchecksReadinessProbePtrOutput) Type() ContainerHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbe) *ContainerHealthchecksReadinessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(ContainerHealthchecksReadinessProbeTypePtrOutput)
}

type ContainerHealthchecksReadinessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *ContainerHealthchecksReadinessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *ContainerHealthchecksReadinessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *ContainerHealthchecksReadinessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *ContainerHealthchecksReadinessProbeTypeTcp `pulumi:"tcp"`
}

// ContainerHealthchecksReadinessProbeTypeInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeArgs and ContainerHealthchecksReadinessProbeTypeOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeInput` via:
//
//	ContainerHealthchecksReadinessProbeTypeArgs{...}
type ContainerHealthchecksReadinessProbeTypeInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeOutput() ContainerHealthchecksReadinessProbeTypeOutput
	ToContainerHealthchecksReadinessProbeTypeOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeOutput
}

type ContainerHealthchecksReadinessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec ContainerHealthchecksReadinessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc ContainerHealthchecksReadinessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http ContainerHealthchecksReadinessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp ContainerHealthchecksReadinessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (ContainerHealthchecksReadinessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i ContainerHealthchecksReadinessProbeTypeArgs) ToContainerHealthchecksReadinessProbeTypeOutput() ContainerHealthchecksReadinessProbeTypeOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeArgs) ToContainerHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeOutput)
}

func (i ContainerHealthchecksReadinessProbeTypeArgs) ToContainerHealthchecksReadinessProbeTypePtrOutput() ContainerHealthchecksReadinessProbeTypePtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeArgs) ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeOutput).ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx)
}

// ContainerHealthchecksReadinessProbeTypePtrInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeArgs, ContainerHealthchecksReadinessProbeTypePtr and ContainerHealthchecksReadinessProbeTypePtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypePtrInput` via:
//
//	        ContainerHealthchecksReadinessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksReadinessProbeTypePtrInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypePtrOutput() ContainerHealthchecksReadinessProbeTypePtrOutput
	ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypePtrOutput
}

type containerHealthchecksReadinessProbeTypePtrType ContainerHealthchecksReadinessProbeTypeArgs

func ContainerHealthchecksReadinessProbeTypePtr(v *ContainerHealthchecksReadinessProbeTypeArgs) ContainerHealthchecksReadinessProbeTypePtrInput {
	return (*containerHealthchecksReadinessProbeTypePtrType)(v)
}

func (*containerHealthchecksReadinessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i *containerHealthchecksReadinessProbeTypePtrType) ToContainerHealthchecksReadinessProbeTypePtrOutput() ContainerHealthchecksReadinessProbeTypePtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksReadinessProbeTypePtrType) ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypePtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeOutput) ToContainerHealthchecksReadinessProbeTypeOutput() ContainerHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeOutput) ToContainerHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeOutput) ToContainerHealthchecksReadinessProbeTypePtrOutput() ContainerHealthchecksReadinessProbeTypePtrOutput {
	return o.ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksReadinessProbeTypeOutput) ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeType {
		return &v
	}).(ContainerHealthchecksReadinessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o ContainerHealthchecksReadinessProbeTypeOutput) Exec() ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeTypeExec {
		return v.Exec
	}).(ContainerHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o ContainerHealthchecksReadinessProbeTypeOutput) Grpc() ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeTypeGrpc {
		return v.Grpc
	}).(ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o ContainerHealthchecksReadinessProbeTypeOutput) Http() ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeTypeHttp {
		return v.Http
	}).(ContainerHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o ContainerHealthchecksReadinessProbeTypeOutput) Tcp() ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeTypeTcp {
		return v.Tcp
	}).(ContainerHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypePtrOutput) ToContainerHealthchecksReadinessProbeTypePtrOutput() ContainerHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypePtrOutput) ToContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypePtrOutput) Elem() ContainerHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeType) ContainerHealthchecksReadinessProbeType {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksReadinessProbeType
		return ret
	}).(ContainerHealthchecksReadinessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o ContainerHealthchecksReadinessProbeTypePtrOutput) Exec() ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ContainerHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o ContainerHealthchecksReadinessProbeTypePtrOutput) Grpc() ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o ContainerHealthchecksReadinessProbeTypePtrOutput) Http() ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(ContainerHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o ContainerHealthchecksReadinessProbeTypePtrOutput) Tcp() ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeType) *ContainerHealthchecksReadinessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(ContainerHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// ContainerHealthchecksReadinessProbeTypeExecInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeExecArgs and ContainerHealthchecksReadinessProbeTypeExecOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeExecInput` via:
//
//	ContainerHealthchecksReadinessProbeTypeExecArgs{...}
type ContainerHealthchecksReadinessProbeTypeExecInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeExecOutput() ContainerHealthchecksReadinessProbeTypeExecOutput
	ToContainerHealthchecksReadinessProbeTypeExecOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeExecOutput
}

type ContainerHealthchecksReadinessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (ContainerHealthchecksReadinessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i ContainerHealthchecksReadinessProbeTypeExecArgs) ToContainerHealthchecksReadinessProbeTypeExecOutput() ContainerHealthchecksReadinessProbeTypeExecOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeExecOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeExecArgs) ToContainerHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeExecOutput)
}

func (i ContainerHealthchecksReadinessProbeTypeExecArgs) ToContainerHealthchecksReadinessProbeTypeExecPtrOutput() ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeExecArgs) ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeExecOutput).ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx)
}

// ContainerHealthchecksReadinessProbeTypeExecPtrInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeExecArgs, ContainerHealthchecksReadinessProbeTypeExecPtr and ContainerHealthchecksReadinessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeExecPtrInput` via:
//
//	        ContainerHealthchecksReadinessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksReadinessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeExecPtrOutput() ContainerHealthchecksReadinessProbeTypeExecPtrOutput
	ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeExecPtrOutput
}

type containerHealthchecksReadinessProbeTypeExecPtrType ContainerHealthchecksReadinessProbeTypeExecArgs

func ContainerHealthchecksReadinessProbeTypeExecPtr(v *ContainerHealthchecksReadinessProbeTypeExecArgs) ContainerHealthchecksReadinessProbeTypeExecPtrInput {
	return (*containerHealthchecksReadinessProbeTypeExecPtrType)(v)
}

func (*containerHealthchecksReadinessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i *containerHealthchecksReadinessProbeTypeExecPtrType) ToContainerHealthchecksReadinessProbeTypeExecPtrOutput() ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksReadinessProbeTypeExecPtrType) ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeExecPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeExecOutput) ToContainerHealthchecksReadinessProbeTypeExecOutput() ContainerHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeExecOutput) ToContainerHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeExecOutput) ToContainerHealthchecksReadinessProbeTypeExecPtrOutput() ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksReadinessProbeTypeExecOutput) ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksReadinessProbeTypeExec) *ContainerHealthchecksReadinessProbeTypeExec {
		return &v
	}).(ContainerHealthchecksReadinessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o ContainerHealthchecksReadinessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type ContainerHealthchecksReadinessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeExecPtrOutput) ToContainerHealthchecksReadinessProbeTypeExecPtrOutput() ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeExecPtrOutput) ToContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeExecPtrOutput) Elem() ContainerHealthchecksReadinessProbeTypeExecOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeExec) ContainerHealthchecksReadinessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksReadinessProbeTypeExec
		return ret
	}).(ContainerHealthchecksReadinessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o ContainerHealthchecksReadinessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type ContainerHealthchecksReadinessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// ContainerHealthchecksReadinessProbeTypeGrpcInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeGrpcArgs and ContainerHealthchecksReadinessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeGrpcInput` via:
//
//	ContainerHealthchecksReadinessProbeTypeGrpcArgs{...}
type ContainerHealthchecksReadinessProbeTypeGrpcInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeGrpcOutput() ContainerHealthchecksReadinessProbeTypeGrpcOutput
	ToContainerHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeGrpcOutput
}

type ContainerHealthchecksReadinessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ContainerHealthchecksReadinessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i ContainerHealthchecksReadinessProbeTypeGrpcArgs) ToContainerHealthchecksReadinessProbeTypeGrpcOutput() ContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeGrpcArgs) ToContainerHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeGrpcOutput)
}

func (i ContainerHealthchecksReadinessProbeTypeGrpcArgs) ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeGrpcArgs) ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeGrpcOutput).ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// ContainerHealthchecksReadinessProbeTypeGrpcPtrInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeGrpcArgs, ContainerHealthchecksReadinessProbeTypeGrpcPtr and ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeGrpcPtrInput` via:
//
//	        ContainerHealthchecksReadinessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksReadinessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput
	ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput
}

type containerHealthchecksReadinessProbeTypeGrpcPtrType ContainerHealthchecksReadinessProbeTypeGrpcArgs

func ContainerHealthchecksReadinessProbeTypeGrpcPtr(v *ContainerHealthchecksReadinessProbeTypeGrpcArgs) ContainerHealthchecksReadinessProbeTypeGrpcPtrInput {
	return (*containerHealthchecksReadinessProbeTypeGrpcPtrType)(v)
}

func (*containerHealthchecksReadinessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i *containerHealthchecksReadinessProbeTypeGrpcPtrType) ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksReadinessProbeTypeGrpcPtrType) ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeGrpcOutput) ToContainerHealthchecksReadinessProbeTypeGrpcOutput() ContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeGrpcOutput) ToContainerHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeGrpcOutput) ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksReadinessProbeTypeGrpcOutput) ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksReadinessProbeTypeGrpc) *ContainerHealthchecksReadinessProbeTypeGrpc {
		return &v
	}).(ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksReadinessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o ContainerHealthchecksReadinessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) ToContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) Elem() ContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeGrpc) ContainerHealthchecksReadinessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksReadinessProbeTypeGrpc
		return ret
	}).(ContainerHealthchecksReadinessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// ContainerHealthchecksReadinessProbeTypeHttpInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeHttpArgs and ContainerHealthchecksReadinessProbeTypeHttpOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeHttpInput` via:
//
//	ContainerHealthchecksReadinessProbeTypeHttpArgs{...}
type ContainerHealthchecksReadinessProbeTypeHttpInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeHttpOutput() ContainerHealthchecksReadinessProbeTypeHttpOutput
	ToContainerHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeHttpOutput
}

type ContainerHealthchecksReadinessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (ContainerHealthchecksReadinessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i ContainerHealthchecksReadinessProbeTypeHttpArgs) ToContainerHealthchecksReadinessProbeTypeHttpOutput() ContainerHealthchecksReadinessProbeTypeHttpOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeHttpArgs) ToContainerHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeHttpOutput)
}

func (i ContainerHealthchecksReadinessProbeTypeHttpArgs) ToContainerHealthchecksReadinessProbeTypeHttpPtrOutput() ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeHttpArgs) ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeHttpOutput).ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx)
}

// ContainerHealthchecksReadinessProbeTypeHttpPtrInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeHttpArgs, ContainerHealthchecksReadinessProbeTypeHttpPtr and ContainerHealthchecksReadinessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeHttpPtrInput` via:
//
//	        ContainerHealthchecksReadinessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksReadinessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeHttpPtrOutput() ContainerHealthchecksReadinessProbeTypeHttpPtrOutput
	ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeHttpPtrOutput
}

type containerHealthchecksReadinessProbeTypeHttpPtrType ContainerHealthchecksReadinessProbeTypeHttpArgs

func ContainerHealthchecksReadinessProbeTypeHttpPtr(v *ContainerHealthchecksReadinessProbeTypeHttpArgs) ContainerHealthchecksReadinessProbeTypeHttpPtrInput {
	return (*containerHealthchecksReadinessProbeTypeHttpPtrType)(v)
}

func (*containerHealthchecksReadinessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i *containerHealthchecksReadinessProbeTypeHttpPtrType) ToContainerHealthchecksReadinessProbeTypeHttpPtrOutput() ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksReadinessProbeTypeHttpPtrType) ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeHttpPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeHttpOutput) ToContainerHealthchecksReadinessProbeTypeHttpOutput() ContainerHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeHttpOutput) ToContainerHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeHttpOutput) ToContainerHealthchecksReadinessProbeTypeHttpPtrOutput() ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksReadinessProbeTypeHttpOutput) ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksReadinessProbeTypeHttp) *ContainerHealthchecksReadinessProbeTypeHttp {
		return &v
	}).(ContainerHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o ContainerHealthchecksReadinessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksReadinessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o ContainerHealthchecksReadinessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type ContainerHealthchecksReadinessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeHttpPtrOutput) ToContainerHealthchecksReadinessProbeTypeHttpPtrOutput() ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeHttpPtrOutput) ToContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeHttpPtrOutput) Elem() ContainerHealthchecksReadinessProbeTypeHttpOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeHttp) ContainerHealthchecksReadinessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksReadinessProbeTypeHttp
		return ret
	}).(ContainerHealthchecksReadinessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o ContainerHealthchecksReadinessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksReadinessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o ContainerHealthchecksReadinessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// ContainerHealthchecksReadinessProbeTypeTcpInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeTcpArgs and ContainerHealthchecksReadinessProbeTypeTcpOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeTcpInput` via:
//
//	ContainerHealthchecksReadinessProbeTypeTcpArgs{...}
type ContainerHealthchecksReadinessProbeTypeTcpInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeTcpOutput() ContainerHealthchecksReadinessProbeTypeTcpOutput
	ToContainerHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeTcpOutput
}

type ContainerHealthchecksReadinessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (ContainerHealthchecksReadinessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i ContainerHealthchecksReadinessProbeTypeTcpArgs) ToContainerHealthchecksReadinessProbeTypeTcpOutput() ContainerHealthchecksReadinessProbeTypeTcpOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeTcpArgs) ToContainerHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeTcpOutput)
}

func (i ContainerHealthchecksReadinessProbeTypeTcpArgs) ToContainerHealthchecksReadinessProbeTypeTcpPtrOutput() ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i ContainerHealthchecksReadinessProbeTypeTcpArgs) ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeTcpOutput).ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx)
}

// ContainerHealthchecksReadinessProbeTypeTcpPtrInput is an input type that accepts ContainerHealthchecksReadinessProbeTypeTcpArgs, ContainerHealthchecksReadinessProbeTypeTcpPtr and ContainerHealthchecksReadinessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `ContainerHealthchecksReadinessProbeTypeTcpPtrInput` via:
//
//	        ContainerHealthchecksReadinessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthchecksReadinessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToContainerHealthchecksReadinessProbeTypeTcpPtrOutput() ContainerHealthchecksReadinessProbeTypeTcpPtrOutput
	ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Context) ContainerHealthchecksReadinessProbeTypeTcpPtrOutput
}

type containerHealthchecksReadinessProbeTypeTcpPtrType ContainerHealthchecksReadinessProbeTypeTcpArgs

func ContainerHealthchecksReadinessProbeTypeTcpPtr(v *ContainerHealthchecksReadinessProbeTypeTcpArgs) ContainerHealthchecksReadinessProbeTypeTcpPtrInput {
	return (*containerHealthchecksReadinessProbeTypeTcpPtrType)(v)
}

func (*containerHealthchecksReadinessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i *containerHealthchecksReadinessProbeTypeTcpPtrType) ToContainerHealthchecksReadinessProbeTypeTcpPtrOutput() ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *containerHealthchecksReadinessProbeTypeTcpPtrType) ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type ContainerHealthchecksReadinessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeTcpOutput) ToContainerHealthchecksReadinessProbeTypeTcpOutput() ContainerHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeTcpOutput) ToContainerHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeTcpOutput) ToContainerHealthchecksReadinessProbeTypeTcpPtrOutput() ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o ContainerHealthchecksReadinessProbeTypeTcpOutput) ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthchecksReadinessProbeTypeTcp) *ContainerHealthchecksReadinessProbeTypeTcp {
		return &v
	}).(ContainerHealthchecksReadinessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o ContainerHealthchecksReadinessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksReadinessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerHealthchecksReadinessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type ContainerHealthchecksReadinessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthchecksReadinessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o ContainerHealthchecksReadinessProbeTypeTcpPtrOutput) ToContainerHealthchecksReadinessProbeTypeTcpPtrOutput() ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeTcpPtrOutput) ToContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) ContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o ContainerHealthchecksReadinessProbeTypeTcpPtrOutput) Elem() ContainerHealthchecksReadinessProbeTypeTcpOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeTcp) ContainerHealthchecksReadinessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret ContainerHealthchecksReadinessProbeTypeTcp
		return ret
	}).(ContainerHealthchecksReadinessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o ContainerHealthchecksReadinessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o ContainerHealthchecksReadinessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthchecksReadinessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ContainerPort struct {
	// External port of the container.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort *int `pulumi:"externalPort"`
	// Id of the port.
	Id *string `pulumi:"id"`
	// Internal port of the container.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort int `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault bool `pulumi:"isDefault"`
	// Name of the port.
	Name *string `pulumi:"name"`
	// Protocol used for the port of the container.
	// 	- Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
	// 	- Default: `HTTP`.
	Protocol *string `pulumi:"protocol"`
	// Specify if the port is exposed to the world or not for this container.
	PubliclyAccessible bool `pulumi:"publiclyAccessible"`
}

// ContainerPortInput is an input type that accepts ContainerPortArgs and ContainerPortOutput values.
// You can construct a concrete instance of `ContainerPortInput` via:
//
//	ContainerPortArgs{...}
type ContainerPortInput interface {
	pulumi.Input

	ToContainerPortOutput() ContainerPortOutput
	ToContainerPortOutputWithContext(context.Context) ContainerPortOutput
}

type ContainerPortArgs struct {
	// External port of the container.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort pulumi.IntPtrInput `pulumi:"externalPort"`
	// Id of the port.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Internal port of the container.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort pulumi.IntInput `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of the port.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol used for the port of the container.
	// 	- Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
	// 	- Default: `HTTP`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Specify if the port is exposed to the world or not for this container.
	PubliclyAccessible pulumi.BoolInput `pulumi:"publiclyAccessible"`
}

func (ContainerPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPort)(nil)).Elem()
}

func (i ContainerPortArgs) ToContainerPortOutput() ContainerPortOutput {
	return i.ToContainerPortOutputWithContext(context.Background())
}

func (i ContainerPortArgs) ToContainerPortOutputWithContext(ctx context.Context) ContainerPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPortOutput)
}

// ContainerPortArrayInput is an input type that accepts ContainerPortArray and ContainerPortArrayOutput values.
// You can construct a concrete instance of `ContainerPortArrayInput` via:
//
//	ContainerPortArray{ ContainerPortArgs{...} }
type ContainerPortArrayInput interface {
	pulumi.Input

	ToContainerPortArrayOutput() ContainerPortArrayOutput
	ToContainerPortArrayOutputWithContext(context.Context) ContainerPortArrayOutput
}

type ContainerPortArray []ContainerPortInput

func (ContainerPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerPort)(nil)).Elem()
}

func (i ContainerPortArray) ToContainerPortArrayOutput() ContainerPortArrayOutput {
	return i.ToContainerPortArrayOutputWithContext(context.Background())
}

func (i ContainerPortArray) ToContainerPortArrayOutputWithContext(ctx context.Context) ContainerPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPortArrayOutput)
}

type ContainerPortOutput struct{ *pulumi.OutputState }

func (ContainerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPort)(nil)).Elem()
}

func (o ContainerPortOutput) ToContainerPortOutput() ContainerPortOutput {
	return o
}

func (o ContainerPortOutput) ToContainerPortOutputWithContext(ctx context.Context) ContainerPortOutput {
	return o
}

// External port of the container.
//   - Required if: `ports.publicly_accessible=true`.
//   - Must be: `>= 1` and `<= 65535`.
func (o ContainerPortOutput) ExternalPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerPort) *int { return v.ExternalPort }).(pulumi.IntPtrOutput)
}

// Id of the port.
func (o ContainerPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Internal port of the container.
//   - Must be: `>= 1` and `<= 65535`.
func (o ContainerPortOutput) InternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerPort) int { return v.InternalPort }).(pulumi.IntOutput)
}

// If this port will be used for the root domain
func (o ContainerPortOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v ContainerPort) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of the port.
func (o ContainerPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol used for the port of the container.
//   - Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
//   - Default: `HTTP`.
func (o ContainerPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Specify if the port is exposed to the world or not for this container.
func (o ContainerPortOutput) PubliclyAccessible() pulumi.BoolOutput {
	return o.ApplyT(func(v ContainerPort) bool { return v.PubliclyAccessible }).(pulumi.BoolOutput)
}

type ContainerPortArrayOutput struct{ *pulumi.OutputState }

func (ContainerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerPort)(nil)).Elem()
}

func (o ContainerPortArrayOutput) ToContainerPortArrayOutput() ContainerPortArrayOutput {
	return o
}

func (o ContainerPortArrayOutput) ToContainerPortArrayOutputWithContext(ctx context.Context) ContainerPortArrayOutput {
	return o
}

func (o ContainerPortArrayOutput) Index(i pulumi.IntInput) ContainerPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerPort {
		return vs[0].([]ContainerPort)[vs[1].(int)]
	}).(ContainerPortOutput)
}

type ContainerRegistryConfig struct {
	// Required if kind is `ECR` or `PUBLIC_ECR`.
	AccessKeyId *string `pulumi:"accessKeyId"`
	// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
	Password *string `pulumi:"password"`
	// Required if kind is `ECR` or `SCALEWAY_CR`.
	Region *string `pulumi:"region"`
	// Required if kind is `SCALEWAY_CR`.
	ScalewayAccessKey *string `pulumi:"scalewayAccessKey"`
	// Required if kind is `SCALEWAY_CR`.
	ScalewaySecretKey *string `pulumi:"scalewaySecretKey"`
	// Required if kind is `ECR` or `PUBLIC_ECR`.
	SecretAccessKey *string `pulumi:"secretAccessKey"`
	// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
	Username *string `pulumi:"username"`
}

// ContainerRegistryConfigInput is an input type that accepts ContainerRegistryConfigArgs and ContainerRegistryConfigOutput values.
// You can construct a concrete instance of `ContainerRegistryConfigInput` via:
//
//	ContainerRegistryConfigArgs{...}
type ContainerRegistryConfigInput interface {
	pulumi.Input

	ToContainerRegistryConfigOutput() ContainerRegistryConfigOutput
	ToContainerRegistryConfigOutputWithContext(context.Context) ContainerRegistryConfigOutput
}

type ContainerRegistryConfigArgs struct {
	// Required if kind is `ECR` or `PUBLIC_ECR`.
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Required if kind is `ECR` or `SCALEWAY_CR`.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Required if kind is `SCALEWAY_CR`.
	ScalewayAccessKey pulumi.StringPtrInput `pulumi:"scalewayAccessKey"`
	// Required if kind is `SCALEWAY_CR`.
	ScalewaySecretKey pulumi.StringPtrInput `pulumi:"scalewaySecretKey"`
	// Required if kind is `ECR` or `PUBLIC_ECR`.
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
	// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ContainerRegistryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryConfig)(nil)).Elem()
}

func (i ContainerRegistryConfigArgs) ToContainerRegistryConfigOutput() ContainerRegistryConfigOutput {
	return i.ToContainerRegistryConfigOutputWithContext(context.Background())
}

func (i ContainerRegistryConfigArgs) ToContainerRegistryConfigOutputWithContext(ctx context.Context) ContainerRegistryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryConfigOutput)
}

func (i ContainerRegistryConfigArgs) ToContainerRegistryConfigPtrOutput() ContainerRegistryConfigPtrOutput {
	return i.ToContainerRegistryConfigPtrOutputWithContext(context.Background())
}

func (i ContainerRegistryConfigArgs) ToContainerRegistryConfigPtrOutputWithContext(ctx context.Context) ContainerRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryConfigOutput).ToContainerRegistryConfigPtrOutputWithContext(ctx)
}

// ContainerRegistryConfigPtrInput is an input type that accepts ContainerRegistryConfigArgs, ContainerRegistryConfigPtr and ContainerRegistryConfigPtrOutput values.
// You can construct a concrete instance of `ContainerRegistryConfigPtrInput` via:
//
//	        ContainerRegistryConfigArgs{...}
//
//	or:
//
//	        nil
type ContainerRegistryConfigPtrInput interface {
	pulumi.Input

	ToContainerRegistryConfigPtrOutput() ContainerRegistryConfigPtrOutput
	ToContainerRegistryConfigPtrOutputWithContext(context.Context) ContainerRegistryConfigPtrOutput
}

type containerRegistryConfigPtrType ContainerRegistryConfigArgs

func ContainerRegistryConfigPtr(v *ContainerRegistryConfigArgs) ContainerRegistryConfigPtrInput {
	return (*containerRegistryConfigPtrType)(v)
}

func (*containerRegistryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryConfig)(nil)).Elem()
}

func (i *containerRegistryConfigPtrType) ToContainerRegistryConfigPtrOutput() ContainerRegistryConfigPtrOutput {
	return i.ToContainerRegistryConfigPtrOutputWithContext(context.Background())
}

func (i *containerRegistryConfigPtrType) ToContainerRegistryConfigPtrOutputWithContext(ctx context.Context) ContainerRegistryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryConfigPtrOutput)
}

type ContainerRegistryConfigOutput struct{ *pulumi.OutputState }

func (ContainerRegistryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryConfig)(nil)).Elem()
}

func (o ContainerRegistryConfigOutput) ToContainerRegistryConfigOutput() ContainerRegistryConfigOutput {
	return o
}

func (o ContainerRegistryConfigOutput) ToContainerRegistryConfigOutputWithContext(ctx context.Context) ContainerRegistryConfigOutput {
	return o
}

func (o ContainerRegistryConfigOutput) ToContainerRegistryConfigPtrOutput() ContainerRegistryConfigPtrOutput {
	return o.ToContainerRegistryConfigPtrOutputWithContext(context.Background())
}

func (o ContainerRegistryConfigOutput) ToContainerRegistryConfigPtrOutputWithContext(ctx context.Context) ContainerRegistryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerRegistryConfig) *ContainerRegistryConfig {
		return &v
	}).(ContainerRegistryConfigPtrOutput)
}

// Required if kind is `ECR` or `PUBLIC_ECR`.
func (o ContainerRegistryConfigOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryConfig) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
func (o ContainerRegistryConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Required if kind is `ECR` or `SCALEWAY_CR`.
func (o ContainerRegistryConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Required if kind is `SCALEWAY_CR`.
func (o ContainerRegistryConfigOutput) ScalewayAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryConfig) *string { return v.ScalewayAccessKey }).(pulumi.StringPtrOutput)
}

// Required if kind is `SCALEWAY_CR`.
func (o ContainerRegistryConfigOutput) ScalewaySecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryConfig) *string { return v.ScalewaySecretKey }).(pulumi.StringPtrOutput)
}

// Required if kind is `ECR` or `PUBLIC_ECR`.
func (o ContainerRegistryConfigOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryConfig) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
func (o ContainerRegistryConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerRegistryConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ContainerRegistryConfigPtrOutput struct{ *pulumi.OutputState }

func (ContainerRegistryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerRegistryConfig)(nil)).Elem()
}

func (o ContainerRegistryConfigPtrOutput) ToContainerRegistryConfigPtrOutput() ContainerRegistryConfigPtrOutput {
	return o
}

func (o ContainerRegistryConfigPtrOutput) ToContainerRegistryConfigPtrOutputWithContext(ctx context.Context) ContainerRegistryConfigPtrOutput {
	return o
}

func (o ContainerRegistryConfigPtrOutput) Elem() ContainerRegistryConfigOutput {
	return o.ApplyT(func(v *ContainerRegistryConfig) ContainerRegistryConfig {
		if v != nil {
			return *v
		}
		var ret ContainerRegistryConfig
		return ret
	}).(ContainerRegistryConfigOutput)
}

// Required if kind is `ECR` or `PUBLIC_ECR`.
func (o ContainerRegistryConfigPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
func (o ContainerRegistryConfigPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Required if kind is `ECR` or `SCALEWAY_CR`.
func (o ContainerRegistryConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Required if kind is `SCALEWAY_CR`.
func (o ContainerRegistryConfigPtrOutput) ScalewayAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScalewayAccessKey
	}).(pulumi.StringPtrOutput)
}

// Required if kind is `SCALEWAY_CR`.
func (o ContainerRegistryConfigPtrOutput) ScalewaySecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScalewaySecretKey
	}).(pulumi.StringPtrOutput)
}

// Required if kind is `ECR` or `PUBLIC_ECR`.
func (o ContainerRegistryConfigPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
func (o ContainerRegistryConfigPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerRegistryConfig) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ContainerSecret struct {
	// Id of the secret.
	Id *string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// ContainerSecretInput is an input type that accepts ContainerSecretArgs and ContainerSecretOutput values.
// You can construct a concrete instance of `ContainerSecretInput` via:
//
//	ContainerSecretArgs{...}
type ContainerSecretInput interface {
	pulumi.Input

	ToContainerSecretOutput() ContainerSecretOutput
	ToContainerSecretOutputWithContext(context.Context) ContainerSecretOutput
}

type ContainerSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSecret)(nil)).Elem()
}

func (i ContainerSecretArgs) ToContainerSecretOutput() ContainerSecretOutput {
	return i.ToContainerSecretOutputWithContext(context.Background())
}

func (i ContainerSecretArgs) ToContainerSecretOutputWithContext(ctx context.Context) ContainerSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSecretOutput)
}

// ContainerSecretArrayInput is an input type that accepts ContainerSecretArray and ContainerSecretArrayOutput values.
// You can construct a concrete instance of `ContainerSecretArrayInput` via:
//
//	ContainerSecretArray{ ContainerSecretArgs{...} }
type ContainerSecretArrayInput interface {
	pulumi.Input

	ToContainerSecretArrayOutput() ContainerSecretArrayOutput
	ToContainerSecretArrayOutputWithContext(context.Context) ContainerSecretArrayOutput
}

type ContainerSecretArray []ContainerSecretInput

func (ContainerSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerSecret)(nil)).Elem()
}

func (i ContainerSecretArray) ToContainerSecretArrayOutput() ContainerSecretArrayOutput {
	return i.ToContainerSecretArrayOutputWithContext(context.Background())
}

func (i ContainerSecretArray) ToContainerSecretArrayOutputWithContext(ctx context.Context) ContainerSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSecretArrayOutput)
}

type ContainerSecretOutput struct{ *pulumi.OutputState }

func (ContainerSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSecret)(nil)).Elem()
}

func (o ContainerSecretOutput) ToContainerSecretOutput() ContainerSecretOutput {
	return o
}

func (o ContainerSecretOutput) ToContainerSecretOutputWithContext(ctx context.Context) ContainerSecretOutput {
	return o
}

// Id of the secret.
func (o ContainerSecretOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerSecret) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the secret.
func (o ContainerSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o ContainerSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerSecret) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerSecretArrayOutput struct{ *pulumi.OutputState }

func (ContainerSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerSecret)(nil)).Elem()
}

func (o ContainerSecretArrayOutput) ToContainerSecretArrayOutput() ContainerSecretArrayOutput {
	return o
}

func (o ContainerSecretArrayOutput) ToContainerSecretArrayOutputWithContext(ctx context.Context) ContainerSecretArrayOutput {
	return o
}

func (o ContainerSecretArrayOutput) Index(i pulumi.IntInput) ContainerSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerSecret {
		return vs[0].([]ContainerSecret)[vs[1].(int)]
	}).(ContainerSecretOutput)
}

type ContainerSecretAlias struct {
	// Id of the secret alias.
	Id *string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// ContainerSecretAliasInput is an input type that accepts ContainerSecretAliasArgs and ContainerSecretAliasOutput values.
// You can construct a concrete instance of `ContainerSecretAliasInput` via:
//
//	ContainerSecretAliasArgs{...}
type ContainerSecretAliasInput interface {
	pulumi.Input

	ToContainerSecretAliasOutput() ContainerSecretAliasOutput
	ToContainerSecretAliasOutputWithContext(context.Context) ContainerSecretAliasOutput
}

type ContainerSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSecretAlias)(nil)).Elem()
}

func (i ContainerSecretAliasArgs) ToContainerSecretAliasOutput() ContainerSecretAliasOutput {
	return i.ToContainerSecretAliasOutputWithContext(context.Background())
}

func (i ContainerSecretAliasArgs) ToContainerSecretAliasOutputWithContext(ctx context.Context) ContainerSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSecretAliasOutput)
}

// ContainerSecretAliasArrayInput is an input type that accepts ContainerSecretAliasArray and ContainerSecretAliasArrayOutput values.
// You can construct a concrete instance of `ContainerSecretAliasArrayInput` via:
//
//	ContainerSecretAliasArray{ ContainerSecretAliasArgs{...} }
type ContainerSecretAliasArrayInput interface {
	pulumi.Input

	ToContainerSecretAliasArrayOutput() ContainerSecretAliasArrayOutput
	ToContainerSecretAliasArrayOutputWithContext(context.Context) ContainerSecretAliasArrayOutput
}

type ContainerSecretAliasArray []ContainerSecretAliasInput

func (ContainerSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerSecretAlias)(nil)).Elem()
}

func (i ContainerSecretAliasArray) ToContainerSecretAliasArrayOutput() ContainerSecretAliasArrayOutput {
	return i.ToContainerSecretAliasArrayOutputWithContext(context.Background())
}

func (i ContainerSecretAliasArray) ToContainerSecretAliasArrayOutputWithContext(ctx context.Context) ContainerSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSecretAliasArrayOutput)
}

type ContainerSecretAliasOutput struct{ *pulumi.OutputState }

func (ContainerSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSecretAlias)(nil)).Elem()
}

func (o ContainerSecretAliasOutput) ToContainerSecretAliasOutput() ContainerSecretAliasOutput {
	return o
}

func (o ContainerSecretAliasOutput) ToContainerSecretAliasOutputWithContext(ctx context.Context) ContainerSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o ContainerSecretAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerSecretAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret alias.
func (o ContainerSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o ContainerSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (ContainerSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerSecretAlias)(nil)).Elem()
}

func (o ContainerSecretAliasArrayOutput) ToContainerSecretAliasArrayOutput() ContainerSecretAliasArrayOutput {
	return o
}

func (o ContainerSecretAliasArrayOutput) ToContainerSecretAliasArrayOutputWithContext(ctx context.Context) ContainerSecretAliasArrayOutput {
	return o
}

func (o ContainerSecretAliasArrayOutput) Index(i pulumi.IntInput) ContainerSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerSecretAlias {
		return vs[0].([]ContainerSecretAlias)[vs[1].(int)]
	}).(ContainerSecretAliasOutput)
}

type ContainerSecretOverride struct {
	// Id of the secret override.
	Id *string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// ContainerSecretOverrideInput is an input type that accepts ContainerSecretOverrideArgs and ContainerSecretOverrideOutput values.
// You can construct a concrete instance of `ContainerSecretOverrideInput` via:
//
//	ContainerSecretOverrideArgs{...}
type ContainerSecretOverrideInput interface {
	pulumi.Input

	ToContainerSecretOverrideOutput() ContainerSecretOverrideOutput
	ToContainerSecretOverrideOutputWithContext(context.Context) ContainerSecretOverrideOutput
}

type ContainerSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ContainerSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSecretOverride)(nil)).Elem()
}

func (i ContainerSecretOverrideArgs) ToContainerSecretOverrideOutput() ContainerSecretOverrideOutput {
	return i.ToContainerSecretOverrideOutputWithContext(context.Background())
}

func (i ContainerSecretOverrideArgs) ToContainerSecretOverrideOutputWithContext(ctx context.Context) ContainerSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSecretOverrideOutput)
}

// ContainerSecretOverrideArrayInput is an input type that accepts ContainerSecretOverrideArray and ContainerSecretOverrideArrayOutput values.
// You can construct a concrete instance of `ContainerSecretOverrideArrayInput` via:
//
//	ContainerSecretOverrideArray{ ContainerSecretOverrideArgs{...} }
type ContainerSecretOverrideArrayInput interface {
	pulumi.Input

	ToContainerSecretOverrideArrayOutput() ContainerSecretOverrideArrayOutput
	ToContainerSecretOverrideArrayOutputWithContext(context.Context) ContainerSecretOverrideArrayOutput
}

type ContainerSecretOverrideArray []ContainerSecretOverrideInput

func (ContainerSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerSecretOverride)(nil)).Elem()
}

func (i ContainerSecretOverrideArray) ToContainerSecretOverrideArrayOutput() ContainerSecretOverrideArrayOutput {
	return i.ToContainerSecretOverrideArrayOutputWithContext(context.Background())
}

func (i ContainerSecretOverrideArray) ToContainerSecretOverrideArrayOutputWithContext(ctx context.Context) ContainerSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerSecretOverrideArrayOutput)
}

type ContainerSecretOverrideOutput struct{ *pulumi.OutputState }

func (ContainerSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerSecretOverride)(nil)).Elem()
}

func (o ContainerSecretOverrideOutput) ToContainerSecretOverrideOutput() ContainerSecretOverrideOutput {
	return o
}

func (o ContainerSecretOverrideOutput) ToContainerSecretOverrideOutputWithContext(ctx context.Context) ContainerSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o ContainerSecretOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerSecretOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret override.
func (o ContainerSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o ContainerSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (ContainerSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerSecretOverride)(nil)).Elem()
}

func (o ContainerSecretOverrideArrayOutput) ToContainerSecretOverrideArrayOutput() ContainerSecretOverrideArrayOutput {
	return o
}

func (o ContainerSecretOverrideArrayOutput) ToContainerSecretOverrideArrayOutputWithContext(ctx context.Context) ContainerSecretOverrideArrayOutput {
	return o
}

func (o ContainerSecretOverrideArrayOutput) Index(i pulumi.IntInput) ContainerSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerSecretOverride {
		return vs[0].([]ContainerSecretOverride)[vs[1].(int)]
	}).(ContainerSecretOverrideOutput)
}

type ContainerStorage struct {
	// Id of the storage.
	Id *string `pulumi:"id"`
	// Mount point of the storage for the container.
	MountPoint string `pulumi:"mountPoint"`
	// Size of the storage for the container in GB [1024MB = 1GB].
	// 	- Must be: `>= 1`.
	Size int `pulumi:"size"`
	// Type of the storage for the container.
	// 	- Can be: `FAST_SSD`.
	Type string `pulumi:"type"`
}

// ContainerStorageInput is an input type that accepts ContainerStorageArgs and ContainerStorageOutput values.
// You can construct a concrete instance of `ContainerStorageInput` via:
//
//	ContainerStorageArgs{...}
type ContainerStorageInput interface {
	pulumi.Input

	ToContainerStorageOutput() ContainerStorageOutput
	ToContainerStorageOutputWithContext(context.Context) ContainerStorageOutput
}

type ContainerStorageArgs struct {
	// Id of the storage.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Mount point of the storage for the container.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// Size of the storage for the container in GB [1024MB = 1GB].
	// 	- Must be: `>= 1`.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of the storage for the container.
	// 	- Can be: `FAST_SSD`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerStorage)(nil)).Elem()
}

func (i ContainerStorageArgs) ToContainerStorageOutput() ContainerStorageOutput {
	return i.ToContainerStorageOutputWithContext(context.Background())
}

func (i ContainerStorageArgs) ToContainerStorageOutputWithContext(ctx context.Context) ContainerStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerStorageOutput)
}

// ContainerStorageArrayInput is an input type that accepts ContainerStorageArray and ContainerStorageArrayOutput values.
// You can construct a concrete instance of `ContainerStorageArrayInput` via:
//
//	ContainerStorageArray{ ContainerStorageArgs{...} }
type ContainerStorageArrayInput interface {
	pulumi.Input

	ToContainerStorageArrayOutput() ContainerStorageArrayOutput
	ToContainerStorageArrayOutputWithContext(context.Context) ContainerStorageArrayOutput
}

type ContainerStorageArray []ContainerStorageInput

func (ContainerStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerStorage)(nil)).Elem()
}

func (i ContainerStorageArray) ToContainerStorageArrayOutput() ContainerStorageArrayOutput {
	return i.ToContainerStorageArrayOutputWithContext(context.Background())
}

func (i ContainerStorageArray) ToContainerStorageArrayOutputWithContext(ctx context.Context) ContainerStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerStorageArrayOutput)
}

type ContainerStorageOutput struct{ *pulumi.OutputState }

func (ContainerStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerStorage)(nil)).Elem()
}

func (o ContainerStorageOutput) ToContainerStorageOutput() ContainerStorageOutput {
	return o
}

func (o ContainerStorageOutput) ToContainerStorageOutputWithContext(ctx context.Context) ContainerStorageOutput {
	return o
}

// Id of the storage.
func (o ContainerStorageOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerStorage) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Mount point of the storage for the container.
func (o ContainerStorageOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerStorage) string { return v.MountPoint }).(pulumi.StringOutput)
}

// Size of the storage for the container in GB [1024MB = 1GB].
//   - Must be: `>= 1`.
func (o ContainerStorageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerStorage) int { return v.Size }).(pulumi.IntOutput)
}

// Type of the storage for the container.
//   - Can be: `FAST_SSD`.
func (o ContainerStorageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerStorage) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerStorageArrayOutput struct{ *pulumi.OutputState }

func (ContainerStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerStorage)(nil)).Elem()
}

func (o ContainerStorageArrayOutput) ToContainerStorageArrayOutput() ContainerStorageArrayOutput {
	return o
}

func (o ContainerStorageArrayOutput) ToContainerStorageArrayOutputWithContext(ctx context.Context) ContainerStorageArrayOutput {
	return o
}

func (o ContainerStorageArrayOutput) Index(i pulumi.IntInput) ContainerStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerStorage {
		return vs[0].([]ContainerStorage)[vs[1].(int)]
	}).(ContainerStorageOutput)
}

type EnvironmentBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key *string `pulumi:"key"`
	// Value of the environment variable.
	Value *string `pulumi:"value"`
}

// EnvironmentBuiltInEnvironmentVariableInput is an input type that accepts EnvironmentBuiltInEnvironmentVariableArgs and EnvironmentBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `EnvironmentBuiltInEnvironmentVariableInput` via:
//
//	EnvironmentBuiltInEnvironmentVariableArgs{...}
type EnvironmentBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToEnvironmentBuiltInEnvironmentVariableOutput() EnvironmentBuiltInEnvironmentVariableOutput
	ToEnvironmentBuiltInEnvironmentVariableOutputWithContext(context.Context) EnvironmentBuiltInEnvironmentVariableOutput
}

type EnvironmentBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvironmentBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i EnvironmentBuiltInEnvironmentVariableArgs) ToEnvironmentBuiltInEnvironmentVariableOutput() EnvironmentBuiltInEnvironmentVariableOutput {
	return i.ToEnvironmentBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i EnvironmentBuiltInEnvironmentVariableArgs) ToEnvironmentBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) EnvironmentBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBuiltInEnvironmentVariableOutput)
}

// EnvironmentBuiltInEnvironmentVariableArrayInput is an input type that accepts EnvironmentBuiltInEnvironmentVariableArray and EnvironmentBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `EnvironmentBuiltInEnvironmentVariableArrayInput` via:
//
//	EnvironmentBuiltInEnvironmentVariableArray{ EnvironmentBuiltInEnvironmentVariableArgs{...} }
type EnvironmentBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToEnvironmentBuiltInEnvironmentVariableArrayOutput() EnvironmentBuiltInEnvironmentVariableArrayOutput
	ToEnvironmentBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) EnvironmentBuiltInEnvironmentVariableArrayOutput
}

type EnvironmentBuiltInEnvironmentVariableArray []EnvironmentBuiltInEnvironmentVariableInput

func (EnvironmentBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i EnvironmentBuiltInEnvironmentVariableArray) ToEnvironmentBuiltInEnvironmentVariableArrayOutput() EnvironmentBuiltInEnvironmentVariableArrayOutput {
	return i.ToEnvironmentBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i EnvironmentBuiltInEnvironmentVariableArray) ToEnvironmentBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) EnvironmentBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBuiltInEnvironmentVariableArrayOutput)
}

type EnvironmentBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (EnvironmentBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o EnvironmentBuiltInEnvironmentVariableOutput) ToEnvironmentBuiltInEnvironmentVariableOutput() EnvironmentBuiltInEnvironmentVariableOutput {
	return o
}

func (o EnvironmentBuiltInEnvironmentVariableOutput) ToEnvironmentBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) EnvironmentBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o EnvironmentBuiltInEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentBuiltInEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o EnvironmentBuiltInEnvironmentVariableOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentBuiltInEnvironmentVariable) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value of the environment variable.
func (o EnvironmentBuiltInEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentBuiltInEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o EnvironmentBuiltInEnvironmentVariableArrayOutput) ToEnvironmentBuiltInEnvironmentVariableArrayOutput() EnvironmentBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o EnvironmentBuiltInEnvironmentVariableArrayOutput) ToEnvironmentBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) EnvironmentBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o EnvironmentBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) EnvironmentBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentBuiltInEnvironmentVariable {
		return vs[0].([]EnvironmentBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(EnvironmentBuiltInEnvironmentVariableOutput)
}

type EnvironmentEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// EnvironmentEnvironmentVariableInput is an input type that accepts EnvironmentEnvironmentVariableArgs and EnvironmentEnvironmentVariableOutput values.
// You can construct a concrete instance of `EnvironmentEnvironmentVariableInput` via:
//
//	EnvironmentEnvironmentVariableArgs{...}
type EnvironmentEnvironmentVariableInput interface {
	pulumi.Input

	ToEnvironmentEnvironmentVariableOutput() EnvironmentEnvironmentVariableOutput
	ToEnvironmentEnvironmentVariableOutputWithContext(context.Context) EnvironmentEnvironmentVariableOutput
}

type EnvironmentEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEnvironmentVariable)(nil)).Elem()
}

func (i EnvironmentEnvironmentVariableArgs) ToEnvironmentEnvironmentVariableOutput() EnvironmentEnvironmentVariableOutput {
	return i.ToEnvironmentEnvironmentVariableOutputWithContext(context.Background())
}

func (i EnvironmentEnvironmentVariableArgs) ToEnvironmentEnvironmentVariableOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEnvironmentVariableOutput)
}

// EnvironmentEnvironmentVariableArrayInput is an input type that accepts EnvironmentEnvironmentVariableArray and EnvironmentEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `EnvironmentEnvironmentVariableArrayInput` via:
//
//	EnvironmentEnvironmentVariableArray{ EnvironmentEnvironmentVariableArgs{...} }
type EnvironmentEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToEnvironmentEnvironmentVariableArrayOutput() EnvironmentEnvironmentVariableArrayOutput
	ToEnvironmentEnvironmentVariableArrayOutputWithContext(context.Context) EnvironmentEnvironmentVariableArrayOutput
}

type EnvironmentEnvironmentVariableArray []EnvironmentEnvironmentVariableInput

func (EnvironmentEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentEnvironmentVariable)(nil)).Elem()
}

func (i EnvironmentEnvironmentVariableArray) ToEnvironmentEnvironmentVariableArrayOutput() EnvironmentEnvironmentVariableArrayOutput {
	return i.ToEnvironmentEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i EnvironmentEnvironmentVariableArray) ToEnvironmentEnvironmentVariableArrayOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEnvironmentVariableArrayOutput)
}

type EnvironmentEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (EnvironmentEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEnvironmentVariable)(nil)).Elem()
}

func (o EnvironmentEnvironmentVariableOutput) ToEnvironmentEnvironmentVariableOutput() EnvironmentEnvironmentVariableOutput {
	return o
}

func (o EnvironmentEnvironmentVariableOutput) ToEnvironmentEnvironmentVariableOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o EnvironmentEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o EnvironmentEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o EnvironmentEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentEnvironmentVariable)(nil)).Elem()
}

func (o EnvironmentEnvironmentVariableArrayOutput) ToEnvironmentEnvironmentVariableArrayOutput() EnvironmentEnvironmentVariableArrayOutput {
	return o
}

func (o EnvironmentEnvironmentVariableArrayOutput) ToEnvironmentEnvironmentVariableArrayOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableArrayOutput {
	return o
}

func (o EnvironmentEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) EnvironmentEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentEnvironmentVariable {
		return vs[0].([]EnvironmentEnvironmentVariable)[vs[1].(int)]
	}).(EnvironmentEnvironmentVariableOutput)
}

type EnvironmentEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id *string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// EnvironmentEnvironmentVariableAliasInput is an input type that accepts EnvironmentEnvironmentVariableAliasArgs and EnvironmentEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `EnvironmentEnvironmentVariableAliasInput` via:
//
//	EnvironmentEnvironmentVariableAliasArgs{...}
type EnvironmentEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToEnvironmentEnvironmentVariableAliasOutput() EnvironmentEnvironmentVariableAliasOutput
	ToEnvironmentEnvironmentVariableAliasOutputWithContext(context.Context) EnvironmentEnvironmentVariableAliasOutput
}

type EnvironmentEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEnvironmentVariableAlias)(nil)).Elem()
}

func (i EnvironmentEnvironmentVariableAliasArgs) ToEnvironmentEnvironmentVariableAliasOutput() EnvironmentEnvironmentVariableAliasOutput {
	return i.ToEnvironmentEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i EnvironmentEnvironmentVariableAliasArgs) ToEnvironmentEnvironmentVariableAliasOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEnvironmentVariableAliasOutput)
}

// EnvironmentEnvironmentVariableAliasArrayInput is an input type that accepts EnvironmentEnvironmentVariableAliasArray and EnvironmentEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `EnvironmentEnvironmentVariableAliasArrayInput` via:
//
//	EnvironmentEnvironmentVariableAliasArray{ EnvironmentEnvironmentVariableAliasArgs{...} }
type EnvironmentEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToEnvironmentEnvironmentVariableAliasArrayOutput() EnvironmentEnvironmentVariableAliasArrayOutput
	ToEnvironmentEnvironmentVariableAliasArrayOutputWithContext(context.Context) EnvironmentEnvironmentVariableAliasArrayOutput
}

type EnvironmentEnvironmentVariableAliasArray []EnvironmentEnvironmentVariableAliasInput

func (EnvironmentEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentEnvironmentVariableAlias)(nil)).Elem()
}

func (i EnvironmentEnvironmentVariableAliasArray) ToEnvironmentEnvironmentVariableAliasArrayOutput() EnvironmentEnvironmentVariableAliasArrayOutput {
	return i.ToEnvironmentEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i EnvironmentEnvironmentVariableAliasArray) ToEnvironmentEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEnvironmentVariableAliasArrayOutput)
}

type EnvironmentEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (EnvironmentEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEnvironmentVariableAlias)(nil)).Elem()
}

func (o EnvironmentEnvironmentVariableAliasOutput) ToEnvironmentEnvironmentVariableAliasOutput() EnvironmentEnvironmentVariableAliasOutput {
	return o
}

func (o EnvironmentEnvironmentVariableAliasOutput) ToEnvironmentEnvironmentVariableAliasOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o EnvironmentEnvironmentVariableAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariableAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable alias.
func (o EnvironmentEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o EnvironmentEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentEnvironmentVariableAlias)(nil)).Elem()
}

func (o EnvironmentEnvironmentVariableAliasArrayOutput) ToEnvironmentEnvironmentVariableAliasArrayOutput() EnvironmentEnvironmentVariableAliasArrayOutput {
	return o
}

func (o EnvironmentEnvironmentVariableAliasArrayOutput) ToEnvironmentEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableAliasArrayOutput {
	return o
}

func (o EnvironmentEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) EnvironmentEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentEnvironmentVariableAlias {
		return vs[0].([]EnvironmentEnvironmentVariableAlias)[vs[1].(int)]
	}).(EnvironmentEnvironmentVariableAliasOutput)
}

type EnvironmentEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id *string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// EnvironmentEnvironmentVariableOverrideInput is an input type that accepts EnvironmentEnvironmentVariableOverrideArgs and EnvironmentEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `EnvironmentEnvironmentVariableOverrideInput` via:
//
//	EnvironmentEnvironmentVariableOverrideArgs{...}
type EnvironmentEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToEnvironmentEnvironmentVariableOverrideOutput() EnvironmentEnvironmentVariableOverrideOutput
	ToEnvironmentEnvironmentVariableOverrideOutputWithContext(context.Context) EnvironmentEnvironmentVariableOverrideOutput
}

type EnvironmentEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEnvironmentVariableOverride)(nil)).Elem()
}

func (i EnvironmentEnvironmentVariableOverrideArgs) ToEnvironmentEnvironmentVariableOverrideOutput() EnvironmentEnvironmentVariableOverrideOutput {
	return i.ToEnvironmentEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i EnvironmentEnvironmentVariableOverrideArgs) ToEnvironmentEnvironmentVariableOverrideOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEnvironmentVariableOverrideOutput)
}

// EnvironmentEnvironmentVariableOverrideArrayInput is an input type that accepts EnvironmentEnvironmentVariableOverrideArray and EnvironmentEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `EnvironmentEnvironmentVariableOverrideArrayInput` via:
//
//	EnvironmentEnvironmentVariableOverrideArray{ EnvironmentEnvironmentVariableOverrideArgs{...} }
type EnvironmentEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToEnvironmentEnvironmentVariableOverrideArrayOutput() EnvironmentEnvironmentVariableOverrideArrayOutput
	ToEnvironmentEnvironmentVariableOverrideArrayOutputWithContext(context.Context) EnvironmentEnvironmentVariableOverrideArrayOutput
}

type EnvironmentEnvironmentVariableOverrideArray []EnvironmentEnvironmentVariableOverrideInput

func (EnvironmentEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentEnvironmentVariableOverride)(nil)).Elem()
}

func (i EnvironmentEnvironmentVariableOverrideArray) ToEnvironmentEnvironmentVariableOverrideArrayOutput() EnvironmentEnvironmentVariableOverrideArrayOutput {
	return i.ToEnvironmentEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i EnvironmentEnvironmentVariableOverrideArray) ToEnvironmentEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEnvironmentVariableOverrideArrayOutput)
}

type EnvironmentEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (EnvironmentEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEnvironmentVariableOverride)(nil)).Elem()
}

func (o EnvironmentEnvironmentVariableOverrideOutput) ToEnvironmentEnvironmentVariableOverrideOutput() EnvironmentEnvironmentVariableOverrideOutput {
	return o
}

func (o EnvironmentEnvironmentVariableOverrideOutput) ToEnvironmentEnvironmentVariableOverrideOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o EnvironmentEnvironmentVariableOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariableOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable override.
func (o EnvironmentEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o EnvironmentEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentEnvironmentVariableOverride)(nil)).Elem()
}

func (o EnvironmentEnvironmentVariableOverrideArrayOutput) ToEnvironmentEnvironmentVariableOverrideArrayOutput() EnvironmentEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o EnvironmentEnvironmentVariableOverrideArrayOutput) ToEnvironmentEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) EnvironmentEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o EnvironmentEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) EnvironmentEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentEnvironmentVariableOverride {
		return vs[0].([]EnvironmentEnvironmentVariableOverride)[vs[1].(int)]
	}).(EnvironmentEnvironmentVariableOverrideOutput)
}

type EnvironmentSecret struct {
	// Id of the secret.
	Id *string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// EnvironmentSecretInput is an input type that accepts EnvironmentSecretArgs and EnvironmentSecretOutput values.
// You can construct a concrete instance of `EnvironmentSecretInput` via:
//
//	EnvironmentSecretArgs{...}
type EnvironmentSecretInput interface {
	pulumi.Input

	ToEnvironmentSecretOutput() EnvironmentSecretOutput
	ToEnvironmentSecretOutputWithContext(context.Context) EnvironmentSecretOutput
}

type EnvironmentSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSecret)(nil)).Elem()
}

func (i EnvironmentSecretArgs) ToEnvironmentSecretOutput() EnvironmentSecretOutput {
	return i.ToEnvironmentSecretOutputWithContext(context.Background())
}

func (i EnvironmentSecretArgs) ToEnvironmentSecretOutputWithContext(ctx context.Context) EnvironmentSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSecretOutput)
}

// EnvironmentSecretArrayInput is an input type that accepts EnvironmentSecretArray and EnvironmentSecretArrayOutput values.
// You can construct a concrete instance of `EnvironmentSecretArrayInput` via:
//
//	EnvironmentSecretArray{ EnvironmentSecretArgs{...} }
type EnvironmentSecretArrayInput interface {
	pulumi.Input

	ToEnvironmentSecretArrayOutput() EnvironmentSecretArrayOutput
	ToEnvironmentSecretArrayOutputWithContext(context.Context) EnvironmentSecretArrayOutput
}

type EnvironmentSecretArray []EnvironmentSecretInput

func (EnvironmentSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSecret)(nil)).Elem()
}

func (i EnvironmentSecretArray) ToEnvironmentSecretArrayOutput() EnvironmentSecretArrayOutput {
	return i.ToEnvironmentSecretArrayOutputWithContext(context.Background())
}

func (i EnvironmentSecretArray) ToEnvironmentSecretArrayOutputWithContext(ctx context.Context) EnvironmentSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSecretArrayOutput)
}

type EnvironmentSecretOutput struct{ *pulumi.OutputState }

func (EnvironmentSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSecret)(nil)).Elem()
}

func (o EnvironmentSecretOutput) ToEnvironmentSecretOutput() EnvironmentSecretOutput {
	return o
}

func (o EnvironmentSecretOutput) ToEnvironmentSecretOutputWithContext(ctx context.Context) EnvironmentSecretOutput {
	return o
}

// Id of the secret.
func (o EnvironmentSecretOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSecret) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the secret.
func (o EnvironmentSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o EnvironmentSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSecret) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentSecretArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSecret)(nil)).Elem()
}

func (o EnvironmentSecretArrayOutput) ToEnvironmentSecretArrayOutput() EnvironmentSecretArrayOutput {
	return o
}

func (o EnvironmentSecretArrayOutput) ToEnvironmentSecretArrayOutputWithContext(ctx context.Context) EnvironmentSecretArrayOutput {
	return o
}

func (o EnvironmentSecretArrayOutput) Index(i pulumi.IntInput) EnvironmentSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSecret {
		return vs[0].([]EnvironmentSecret)[vs[1].(int)]
	}).(EnvironmentSecretOutput)
}

type EnvironmentSecretAlias struct {
	// Id of the secret alias.
	Id *string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// EnvironmentSecretAliasInput is an input type that accepts EnvironmentSecretAliasArgs and EnvironmentSecretAliasOutput values.
// You can construct a concrete instance of `EnvironmentSecretAliasInput` via:
//
//	EnvironmentSecretAliasArgs{...}
type EnvironmentSecretAliasInput interface {
	pulumi.Input

	ToEnvironmentSecretAliasOutput() EnvironmentSecretAliasOutput
	ToEnvironmentSecretAliasOutputWithContext(context.Context) EnvironmentSecretAliasOutput
}

type EnvironmentSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSecretAlias)(nil)).Elem()
}

func (i EnvironmentSecretAliasArgs) ToEnvironmentSecretAliasOutput() EnvironmentSecretAliasOutput {
	return i.ToEnvironmentSecretAliasOutputWithContext(context.Background())
}

func (i EnvironmentSecretAliasArgs) ToEnvironmentSecretAliasOutputWithContext(ctx context.Context) EnvironmentSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSecretAliasOutput)
}

// EnvironmentSecretAliasArrayInput is an input type that accepts EnvironmentSecretAliasArray and EnvironmentSecretAliasArrayOutput values.
// You can construct a concrete instance of `EnvironmentSecretAliasArrayInput` via:
//
//	EnvironmentSecretAliasArray{ EnvironmentSecretAliasArgs{...} }
type EnvironmentSecretAliasArrayInput interface {
	pulumi.Input

	ToEnvironmentSecretAliasArrayOutput() EnvironmentSecretAliasArrayOutput
	ToEnvironmentSecretAliasArrayOutputWithContext(context.Context) EnvironmentSecretAliasArrayOutput
}

type EnvironmentSecretAliasArray []EnvironmentSecretAliasInput

func (EnvironmentSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSecretAlias)(nil)).Elem()
}

func (i EnvironmentSecretAliasArray) ToEnvironmentSecretAliasArrayOutput() EnvironmentSecretAliasArrayOutput {
	return i.ToEnvironmentSecretAliasArrayOutputWithContext(context.Background())
}

func (i EnvironmentSecretAliasArray) ToEnvironmentSecretAliasArrayOutputWithContext(ctx context.Context) EnvironmentSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSecretAliasArrayOutput)
}

type EnvironmentSecretAliasOutput struct{ *pulumi.OutputState }

func (EnvironmentSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSecretAlias)(nil)).Elem()
}

func (o EnvironmentSecretAliasOutput) ToEnvironmentSecretAliasOutput() EnvironmentSecretAliasOutput {
	return o
}

func (o EnvironmentSecretAliasOutput) ToEnvironmentSecretAliasOutputWithContext(ctx context.Context) EnvironmentSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o EnvironmentSecretAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSecretAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret alias.
func (o EnvironmentSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o EnvironmentSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSecretAlias)(nil)).Elem()
}

func (o EnvironmentSecretAliasArrayOutput) ToEnvironmentSecretAliasArrayOutput() EnvironmentSecretAliasArrayOutput {
	return o
}

func (o EnvironmentSecretAliasArrayOutput) ToEnvironmentSecretAliasArrayOutputWithContext(ctx context.Context) EnvironmentSecretAliasArrayOutput {
	return o
}

func (o EnvironmentSecretAliasArrayOutput) Index(i pulumi.IntInput) EnvironmentSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSecretAlias {
		return vs[0].([]EnvironmentSecretAlias)[vs[1].(int)]
	}).(EnvironmentSecretAliasOutput)
}

type EnvironmentSecretOverride struct {
	// Id of the secret override.
	Id *string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// EnvironmentSecretOverrideInput is an input type that accepts EnvironmentSecretOverrideArgs and EnvironmentSecretOverrideOutput values.
// You can construct a concrete instance of `EnvironmentSecretOverrideInput` via:
//
//	EnvironmentSecretOverrideArgs{...}
type EnvironmentSecretOverrideInput interface {
	pulumi.Input

	ToEnvironmentSecretOverrideOutput() EnvironmentSecretOverrideOutput
	ToEnvironmentSecretOverrideOutputWithContext(context.Context) EnvironmentSecretOverrideOutput
}

type EnvironmentSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSecretOverride)(nil)).Elem()
}

func (i EnvironmentSecretOverrideArgs) ToEnvironmentSecretOverrideOutput() EnvironmentSecretOverrideOutput {
	return i.ToEnvironmentSecretOverrideOutputWithContext(context.Background())
}

func (i EnvironmentSecretOverrideArgs) ToEnvironmentSecretOverrideOutputWithContext(ctx context.Context) EnvironmentSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSecretOverrideOutput)
}

// EnvironmentSecretOverrideArrayInput is an input type that accepts EnvironmentSecretOverrideArray and EnvironmentSecretOverrideArrayOutput values.
// You can construct a concrete instance of `EnvironmentSecretOverrideArrayInput` via:
//
//	EnvironmentSecretOverrideArray{ EnvironmentSecretOverrideArgs{...} }
type EnvironmentSecretOverrideArrayInput interface {
	pulumi.Input

	ToEnvironmentSecretOverrideArrayOutput() EnvironmentSecretOverrideArrayOutput
	ToEnvironmentSecretOverrideArrayOutputWithContext(context.Context) EnvironmentSecretOverrideArrayOutput
}

type EnvironmentSecretOverrideArray []EnvironmentSecretOverrideInput

func (EnvironmentSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSecretOverride)(nil)).Elem()
}

func (i EnvironmentSecretOverrideArray) ToEnvironmentSecretOverrideArrayOutput() EnvironmentSecretOverrideArrayOutput {
	return i.ToEnvironmentSecretOverrideArrayOutputWithContext(context.Background())
}

func (i EnvironmentSecretOverrideArray) ToEnvironmentSecretOverrideArrayOutputWithContext(ctx context.Context) EnvironmentSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSecretOverrideArrayOutput)
}

type EnvironmentSecretOverrideOutput struct{ *pulumi.OutputState }

func (EnvironmentSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSecretOverride)(nil)).Elem()
}

func (o EnvironmentSecretOverrideOutput) ToEnvironmentSecretOverrideOutput() EnvironmentSecretOverrideOutput {
	return o
}

func (o EnvironmentSecretOverrideOutput) ToEnvironmentSecretOverrideOutputWithContext(ctx context.Context) EnvironmentSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o EnvironmentSecretOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSecretOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret override.
func (o EnvironmentSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o EnvironmentSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSecretOverride)(nil)).Elem()
}

func (o EnvironmentSecretOverrideArrayOutput) ToEnvironmentSecretOverrideArrayOutput() EnvironmentSecretOverrideArrayOutput {
	return o
}

func (o EnvironmentSecretOverrideArrayOutput) ToEnvironmentSecretOverrideArrayOutputWithContext(ctx context.Context) EnvironmentSecretOverrideArrayOutput {
	return o
}

func (o EnvironmentSecretOverrideArrayOutput) Index(i pulumi.IntInput) EnvironmentSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSecretOverride {
		return vs[0].([]EnvironmentSecretOverride)[vs[1].(int)]
	}).(EnvironmentSecretOverrideOutput)
}

type HelmBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key *string `pulumi:"key"`
	// Value of the environment variable.
	Value *string `pulumi:"value"`
}

// HelmBuiltInEnvironmentVariableInput is an input type that accepts HelmBuiltInEnvironmentVariableArgs and HelmBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `HelmBuiltInEnvironmentVariableInput` via:
//
//	HelmBuiltInEnvironmentVariableArgs{...}
type HelmBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToHelmBuiltInEnvironmentVariableOutput() HelmBuiltInEnvironmentVariableOutput
	ToHelmBuiltInEnvironmentVariableOutputWithContext(context.Context) HelmBuiltInEnvironmentVariableOutput
}

type HelmBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HelmBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i HelmBuiltInEnvironmentVariableArgs) ToHelmBuiltInEnvironmentVariableOutput() HelmBuiltInEnvironmentVariableOutput {
	return i.ToHelmBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i HelmBuiltInEnvironmentVariableArgs) ToHelmBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) HelmBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmBuiltInEnvironmentVariableOutput)
}

// HelmBuiltInEnvironmentVariableArrayInput is an input type that accepts HelmBuiltInEnvironmentVariableArray and HelmBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `HelmBuiltInEnvironmentVariableArrayInput` via:
//
//	HelmBuiltInEnvironmentVariableArray{ HelmBuiltInEnvironmentVariableArgs{...} }
type HelmBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToHelmBuiltInEnvironmentVariableArrayOutput() HelmBuiltInEnvironmentVariableArrayOutput
	ToHelmBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) HelmBuiltInEnvironmentVariableArrayOutput
}

type HelmBuiltInEnvironmentVariableArray []HelmBuiltInEnvironmentVariableInput

func (HelmBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i HelmBuiltInEnvironmentVariableArray) ToHelmBuiltInEnvironmentVariableArrayOutput() HelmBuiltInEnvironmentVariableArrayOutput {
	return i.ToHelmBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i HelmBuiltInEnvironmentVariableArray) ToHelmBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) HelmBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmBuiltInEnvironmentVariableArrayOutput)
}

type HelmBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (HelmBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o HelmBuiltInEnvironmentVariableOutput) ToHelmBuiltInEnvironmentVariableOutput() HelmBuiltInEnvironmentVariableOutput {
	return o
}

func (o HelmBuiltInEnvironmentVariableOutput) ToHelmBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) HelmBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o HelmBuiltInEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmBuiltInEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o HelmBuiltInEnvironmentVariableOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmBuiltInEnvironmentVariable) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value of the environment variable.
func (o HelmBuiltInEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmBuiltInEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HelmBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (HelmBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o HelmBuiltInEnvironmentVariableArrayOutput) ToHelmBuiltInEnvironmentVariableArrayOutput() HelmBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o HelmBuiltInEnvironmentVariableArrayOutput) ToHelmBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) HelmBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o HelmBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) HelmBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HelmBuiltInEnvironmentVariable {
		return vs[0].([]HelmBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(HelmBuiltInEnvironmentVariableOutput)
}

type HelmDeploymentRestriction struct {
	// Id of the deployment restriction
	Id *string `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode string `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type string `pulumi:"type"`
	// Value of the deployment restriction
	Value string `pulumi:"value"`
}

// HelmDeploymentRestrictionInput is an input type that accepts HelmDeploymentRestrictionArgs and HelmDeploymentRestrictionOutput values.
// You can construct a concrete instance of `HelmDeploymentRestrictionInput` via:
//
//	HelmDeploymentRestrictionArgs{...}
type HelmDeploymentRestrictionInput interface {
	pulumi.Input

	ToHelmDeploymentRestrictionOutput() HelmDeploymentRestrictionOutput
	ToHelmDeploymentRestrictionOutputWithContext(context.Context) HelmDeploymentRestrictionOutput
}

type HelmDeploymentRestrictionArgs struct {
	// Id of the deployment restriction
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode pulumi.StringInput `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the deployment restriction
	Value pulumi.StringInput `pulumi:"value"`
}

func (HelmDeploymentRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmDeploymentRestriction)(nil)).Elem()
}

func (i HelmDeploymentRestrictionArgs) ToHelmDeploymentRestrictionOutput() HelmDeploymentRestrictionOutput {
	return i.ToHelmDeploymentRestrictionOutputWithContext(context.Background())
}

func (i HelmDeploymentRestrictionArgs) ToHelmDeploymentRestrictionOutputWithContext(ctx context.Context) HelmDeploymentRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmDeploymentRestrictionOutput)
}

// HelmDeploymentRestrictionArrayInput is an input type that accepts HelmDeploymentRestrictionArray and HelmDeploymentRestrictionArrayOutput values.
// You can construct a concrete instance of `HelmDeploymentRestrictionArrayInput` via:
//
//	HelmDeploymentRestrictionArray{ HelmDeploymentRestrictionArgs{...} }
type HelmDeploymentRestrictionArrayInput interface {
	pulumi.Input

	ToHelmDeploymentRestrictionArrayOutput() HelmDeploymentRestrictionArrayOutput
	ToHelmDeploymentRestrictionArrayOutputWithContext(context.Context) HelmDeploymentRestrictionArrayOutput
}

type HelmDeploymentRestrictionArray []HelmDeploymentRestrictionInput

func (HelmDeploymentRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmDeploymentRestriction)(nil)).Elem()
}

func (i HelmDeploymentRestrictionArray) ToHelmDeploymentRestrictionArrayOutput() HelmDeploymentRestrictionArrayOutput {
	return i.ToHelmDeploymentRestrictionArrayOutputWithContext(context.Background())
}

func (i HelmDeploymentRestrictionArray) ToHelmDeploymentRestrictionArrayOutputWithContext(ctx context.Context) HelmDeploymentRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmDeploymentRestrictionArrayOutput)
}

type HelmDeploymentRestrictionOutput struct{ *pulumi.OutputState }

func (HelmDeploymentRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmDeploymentRestriction)(nil)).Elem()
}

func (o HelmDeploymentRestrictionOutput) ToHelmDeploymentRestrictionOutput() HelmDeploymentRestrictionOutput {
	return o
}

func (o HelmDeploymentRestrictionOutput) ToHelmDeploymentRestrictionOutputWithContext(ctx context.Context) HelmDeploymentRestrictionOutput {
	return o
}

// Id of the deployment restriction
func (o HelmDeploymentRestrictionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmDeploymentRestriction) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Can be EXCLUDE or MATCH
func (o HelmDeploymentRestrictionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v HelmDeploymentRestriction) string { return v.Mode }).(pulumi.StringOutput)
}

// Currently, only PATH is accepted
func (o HelmDeploymentRestrictionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HelmDeploymentRestriction) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the deployment restriction
func (o HelmDeploymentRestrictionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HelmDeploymentRestriction) string { return v.Value }).(pulumi.StringOutput)
}

type HelmDeploymentRestrictionArrayOutput struct{ *pulumi.OutputState }

func (HelmDeploymentRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmDeploymentRestriction)(nil)).Elem()
}

func (o HelmDeploymentRestrictionArrayOutput) ToHelmDeploymentRestrictionArrayOutput() HelmDeploymentRestrictionArrayOutput {
	return o
}

func (o HelmDeploymentRestrictionArrayOutput) ToHelmDeploymentRestrictionArrayOutputWithContext(ctx context.Context) HelmDeploymentRestrictionArrayOutput {
	return o
}

func (o HelmDeploymentRestrictionArrayOutput) Index(i pulumi.IntInput) HelmDeploymentRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HelmDeploymentRestriction {
		return vs[0].([]HelmDeploymentRestriction)[vs[1].(int)]
	}).(HelmDeploymentRestrictionOutput)
}

type HelmEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// HelmEnvironmentVariableInput is an input type that accepts HelmEnvironmentVariableArgs and HelmEnvironmentVariableOutput values.
// You can construct a concrete instance of `HelmEnvironmentVariableInput` via:
//
//	HelmEnvironmentVariableArgs{...}
type HelmEnvironmentVariableInput interface {
	pulumi.Input

	ToHelmEnvironmentVariableOutput() HelmEnvironmentVariableOutput
	ToHelmEnvironmentVariableOutputWithContext(context.Context) HelmEnvironmentVariableOutput
}

type HelmEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HelmEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmEnvironmentVariable)(nil)).Elem()
}

func (i HelmEnvironmentVariableArgs) ToHelmEnvironmentVariableOutput() HelmEnvironmentVariableOutput {
	return i.ToHelmEnvironmentVariableOutputWithContext(context.Background())
}

func (i HelmEnvironmentVariableArgs) ToHelmEnvironmentVariableOutputWithContext(ctx context.Context) HelmEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmEnvironmentVariableOutput)
}

// HelmEnvironmentVariableArrayInput is an input type that accepts HelmEnvironmentVariableArray and HelmEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `HelmEnvironmentVariableArrayInput` via:
//
//	HelmEnvironmentVariableArray{ HelmEnvironmentVariableArgs{...} }
type HelmEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToHelmEnvironmentVariableArrayOutput() HelmEnvironmentVariableArrayOutput
	ToHelmEnvironmentVariableArrayOutputWithContext(context.Context) HelmEnvironmentVariableArrayOutput
}

type HelmEnvironmentVariableArray []HelmEnvironmentVariableInput

func (HelmEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmEnvironmentVariable)(nil)).Elem()
}

func (i HelmEnvironmentVariableArray) ToHelmEnvironmentVariableArrayOutput() HelmEnvironmentVariableArrayOutput {
	return i.ToHelmEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i HelmEnvironmentVariableArray) ToHelmEnvironmentVariableArrayOutputWithContext(ctx context.Context) HelmEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmEnvironmentVariableArrayOutput)
}

type HelmEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (HelmEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmEnvironmentVariable)(nil)).Elem()
}

func (o HelmEnvironmentVariableOutput) ToHelmEnvironmentVariableOutput() HelmEnvironmentVariableOutput {
	return o
}

func (o HelmEnvironmentVariableOutput) ToHelmEnvironmentVariableOutputWithContext(ctx context.Context) HelmEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o HelmEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o HelmEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HelmEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o HelmEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HelmEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type HelmEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (HelmEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmEnvironmentVariable)(nil)).Elem()
}

func (o HelmEnvironmentVariableArrayOutput) ToHelmEnvironmentVariableArrayOutput() HelmEnvironmentVariableArrayOutput {
	return o
}

func (o HelmEnvironmentVariableArrayOutput) ToHelmEnvironmentVariableArrayOutputWithContext(ctx context.Context) HelmEnvironmentVariableArrayOutput {
	return o
}

func (o HelmEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) HelmEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HelmEnvironmentVariable {
		return vs[0].([]HelmEnvironmentVariable)[vs[1].(int)]
	}).(HelmEnvironmentVariableOutput)
}

type HelmEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id *string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// HelmEnvironmentVariableAliasInput is an input type that accepts HelmEnvironmentVariableAliasArgs and HelmEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `HelmEnvironmentVariableAliasInput` via:
//
//	HelmEnvironmentVariableAliasArgs{...}
type HelmEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToHelmEnvironmentVariableAliasOutput() HelmEnvironmentVariableAliasOutput
	ToHelmEnvironmentVariableAliasOutputWithContext(context.Context) HelmEnvironmentVariableAliasOutput
}

type HelmEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HelmEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmEnvironmentVariableAlias)(nil)).Elem()
}

func (i HelmEnvironmentVariableAliasArgs) ToHelmEnvironmentVariableAliasOutput() HelmEnvironmentVariableAliasOutput {
	return i.ToHelmEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i HelmEnvironmentVariableAliasArgs) ToHelmEnvironmentVariableAliasOutputWithContext(ctx context.Context) HelmEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmEnvironmentVariableAliasOutput)
}

// HelmEnvironmentVariableAliasArrayInput is an input type that accepts HelmEnvironmentVariableAliasArray and HelmEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `HelmEnvironmentVariableAliasArrayInput` via:
//
//	HelmEnvironmentVariableAliasArray{ HelmEnvironmentVariableAliasArgs{...} }
type HelmEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToHelmEnvironmentVariableAliasArrayOutput() HelmEnvironmentVariableAliasArrayOutput
	ToHelmEnvironmentVariableAliasArrayOutputWithContext(context.Context) HelmEnvironmentVariableAliasArrayOutput
}

type HelmEnvironmentVariableAliasArray []HelmEnvironmentVariableAliasInput

func (HelmEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmEnvironmentVariableAlias)(nil)).Elem()
}

func (i HelmEnvironmentVariableAliasArray) ToHelmEnvironmentVariableAliasArrayOutput() HelmEnvironmentVariableAliasArrayOutput {
	return i.ToHelmEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i HelmEnvironmentVariableAliasArray) ToHelmEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) HelmEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmEnvironmentVariableAliasArrayOutput)
}

type HelmEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (HelmEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmEnvironmentVariableAlias)(nil)).Elem()
}

func (o HelmEnvironmentVariableAliasOutput) ToHelmEnvironmentVariableAliasOutput() HelmEnvironmentVariableAliasOutput {
	return o
}

func (o HelmEnvironmentVariableAliasOutput) ToHelmEnvironmentVariableAliasOutputWithContext(ctx context.Context) HelmEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o HelmEnvironmentVariableAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmEnvironmentVariableAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable alias.
func (o HelmEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HelmEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o HelmEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HelmEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type HelmEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (HelmEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmEnvironmentVariableAlias)(nil)).Elem()
}

func (o HelmEnvironmentVariableAliasArrayOutput) ToHelmEnvironmentVariableAliasArrayOutput() HelmEnvironmentVariableAliasArrayOutput {
	return o
}

func (o HelmEnvironmentVariableAliasArrayOutput) ToHelmEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) HelmEnvironmentVariableAliasArrayOutput {
	return o
}

func (o HelmEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) HelmEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HelmEnvironmentVariableAlias {
		return vs[0].([]HelmEnvironmentVariableAlias)[vs[1].(int)]
	}).(HelmEnvironmentVariableAliasOutput)
}

type HelmEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id *string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// HelmEnvironmentVariableOverrideInput is an input type that accepts HelmEnvironmentVariableOverrideArgs and HelmEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `HelmEnvironmentVariableOverrideInput` via:
//
//	HelmEnvironmentVariableOverrideArgs{...}
type HelmEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToHelmEnvironmentVariableOverrideOutput() HelmEnvironmentVariableOverrideOutput
	ToHelmEnvironmentVariableOverrideOutputWithContext(context.Context) HelmEnvironmentVariableOverrideOutput
}

type HelmEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HelmEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmEnvironmentVariableOverride)(nil)).Elem()
}

func (i HelmEnvironmentVariableOverrideArgs) ToHelmEnvironmentVariableOverrideOutput() HelmEnvironmentVariableOverrideOutput {
	return i.ToHelmEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i HelmEnvironmentVariableOverrideArgs) ToHelmEnvironmentVariableOverrideOutputWithContext(ctx context.Context) HelmEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmEnvironmentVariableOverrideOutput)
}

// HelmEnvironmentVariableOverrideArrayInput is an input type that accepts HelmEnvironmentVariableOverrideArray and HelmEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `HelmEnvironmentVariableOverrideArrayInput` via:
//
//	HelmEnvironmentVariableOverrideArray{ HelmEnvironmentVariableOverrideArgs{...} }
type HelmEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToHelmEnvironmentVariableOverrideArrayOutput() HelmEnvironmentVariableOverrideArrayOutput
	ToHelmEnvironmentVariableOverrideArrayOutputWithContext(context.Context) HelmEnvironmentVariableOverrideArrayOutput
}

type HelmEnvironmentVariableOverrideArray []HelmEnvironmentVariableOverrideInput

func (HelmEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmEnvironmentVariableOverride)(nil)).Elem()
}

func (i HelmEnvironmentVariableOverrideArray) ToHelmEnvironmentVariableOverrideArrayOutput() HelmEnvironmentVariableOverrideArrayOutput {
	return i.ToHelmEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i HelmEnvironmentVariableOverrideArray) ToHelmEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) HelmEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmEnvironmentVariableOverrideArrayOutput)
}

type HelmEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (HelmEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmEnvironmentVariableOverride)(nil)).Elem()
}

func (o HelmEnvironmentVariableOverrideOutput) ToHelmEnvironmentVariableOverrideOutput() HelmEnvironmentVariableOverrideOutput {
	return o
}

func (o HelmEnvironmentVariableOverrideOutput) ToHelmEnvironmentVariableOverrideOutputWithContext(ctx context.Context) HelmEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o HelmEnvironmentVariableOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmEnvironmentVariableOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable override.
func (o HelmEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HelmEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o HelmEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HelmEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type HelmEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (HelmEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmEnvironmentVariableOverride)(nil)).Elem()
}

func (o HelmEnvironmentVariableOverrideArrayOutput) ToHelmEnvironmentVariableOverrideArrayOutput() HelmEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o HelmEnvironmentVariableOverrideArrayOutput) ToHelmEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) HelmEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o HelmEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) HelmEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HelmEnvironmentVariableOverride {
		return vs[0].([]HelmEnvironmentVariableOverride)[vs[1].(int)]
	}).(HelmEnvironmentVariableOverrideOutput)
}

type HelmPorts struct {
	// External port of the container.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort int `pulumi:"externalPort"`
	// Internal port of the container.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort int `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault bool    `pulumi:"isDefault"`
	Namespace *string `pulumi:"namespace"`
	// Protocol used for the port of the container.
	// 	- Can be: `GRPC`, `HTTP`.
	// 	- Default: `HTTP`.
	Protocol    *string `pulumi:"protocol"`
	ServiceName string  `pulumi:"serviceName"`
}

// HelmPortsInput is an input type that accepts HelmPortsArgs and HelmPortsOutput values.
// You can construct a concrete instance of `HelmPortsInput` via:
//
//	HelmPortsArgs{...}
type HelmPortsInput interface {
	pulumi.Input

	ToHelmPortsOutput() HelmPortsOutput
	ToHelmPortsOutputWithContext(context.Context) HelmPortsOutput
}

type HelmPortsArgs struct {
	// External port of the container.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort pulumi.IntInput `pulumi:"externalPort"`
	// Internal port of the container.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort pulumi.IntInput `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault pulumi.BoolInput      `pulumi:"isDefault"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Protocol used for the port of the container.
	// 	- Can be: `GRPC`, `HTTP`.
	// 	- Default: `HTTP`.
	Protocol    pulumi.StringPtrInput `pulumi:"protocol"`
	ServiceName pulumi.StringInput    `pulumi:"serviceName"`
}

func (HelmPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmPorts)(nil)).Elem()
}

func (i HelmPortsArgs) ToHelmPortsOutput() HelmPortsOutput {
	return i.ToHelmPortsOutputWithContext(context.Background())
}

func (i HelmPortsArgs) ToHelmPortsOutputWithContext(ctx context.Context) HelmPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmPortsOutput)
}

// HelmPortsMapInput is an input type that accepts HelmPortsMap and HelmPortsMapOutput values.
// You can construct a concrete instance of `HelmPortsMapInput` via:
//
//	HelmPortsMap{ "key": HelmPortsArgs{...} }
type HelmPortsMapInput interface {
	pulumi.Input

	ToHelmPortsMapOutput() HelmPortsMapOutput
	ToHelmPortsMapOutputWithContext(context.Context) HelmPortsMapOutput
}

type HelmPortsMap map[string]HelmPortsInput

func (HelmPortsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]HelmPorts)(nil)).Elem()
}

func (i HelmPortsMap) ToHelmPortsMapOutput() HelmPortsMapOutput {
	return i.ToHelmPortsMapOutputWithContext(context.Background())
}

func (i HelmPortsMap) ToHelmPortsMapOutputWithContext(ctx context.Context) HelmPortsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmPortsMapOutput)
}

type HelmPortsOutput struct{ *pulumi.OutputState }

func (HelmPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmPorts)(nil)).Elem()
}

func (o HelmPortsOutput) ToHelmPortsOutput() HelmPortsOutput {
	return o
}

func (o HelmPortsOutput) ToHelmPortsOutputWithContext(ctx context.Context) HelmPortsOutput {
	return o
}

// External port of the container.
//   - Required if: `ports.publicly_accessible=true`.
//   - Must be: `>= 1` and `<= 65535`.
func (o HelmPortsOutput) ExternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v HelmPorts) int { return v.ExternalPort }).(pulumi.IntOutput)
}

// Internal port of the container.
//   - Must be: `>= 1` and `<= 65535`.
func (o HelmPortsOutput) InternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v HelmPorts) int { return v.InternalPort }).(pulumi.IntOutput)
}

// If this port will be used for the root domain
func (o HelmPortsOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v HelmPorts) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o HelmPortsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmPorts) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Protocol used for the port of the container.
//   - Can be: `GRPC`, `HTTP`.
//   - Default: `HTTP`.
func (o HelmPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o HelmPortsOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v HelmPorts) string { return v.ServiceName }).(pulumi.StringOutput)
}

type HelmPortsMapOutput struct{ *pulumi.OutputState }

func (HelmPortsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]HelmPorts)(nil)).Elem()
}

func (o HelmPortsMapOutput) ToHelmPortsMapOutput() HelmPortsMapOutput {
	return o
}

func (o HelmPortsMapOutput) ToHelmPortsMapOutputWithContext(ctx context.Context) HelmPortsMapOutput {
	return o
}

func (o HelmPortsMapOutput) MapIndex(k pulumi.StringInput) HelmPortsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) HelmPorts {
		return vs[0].(map[string]HelmPorts)[vs[1].(string)]
	}).(HelmPortsOutput)
}

type HelmRepositoryConfig struct {
	// Required if kind is `ECR` or `PUBLIC_ECR`.
	AccessKeyId *string `pulumi:"accessKeyId"`
	// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
	Password *string `pulumi:"password"`
	// Required if kind is `ECR` or `SCALEWAY_CR`.
	Region *string `pulumi:"region"`
	// Required if kind is `SCALEWAY_CR`.
	ScalewayAccessKey *string `pulumi:"scalewayAccessKey"`
	// Required if kind is `SCALEWAY_CR`.
	ScalewaySecretKey *string `pulumi:"scalewaySecretKey"`
	// Required if kind is `ECR` or `PUBLIC_ECR`.
	SecretAccessKey *string `pulumi:"secretAccessKey"`
	// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
	Username *string `pulumi:"username"`
}

// HelmRepositoryConfigInput is an input type that accepts HelmRepositoryConfigArgs and HelmRepositoryConfigOutput values.
// You can construct a concrete instance of `HelmRepositoryConfigInput` via:
//
//	HelmRepositoryConfigArgs{...}
type HelmRepositoryConfigInput interface {
	pulumi.Input

	ToHelmRepositoryConfigOutput() HelmRepositoryConfigOutput
	ToHelmRepositoryConfigOutputWithContext(context.Context) HelmRepositoryConfigOutput
}

type HelmRepositoryConfigArgs struct {
	// Required if kind is `ECR` or `PUBLIC_ECR`.
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Required if kind is `ECR` or `SCALEWAY_CR`.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Required if kind is `SCALEWAY_CR`.
	ScalewayAccessKey pulumi.StringPtrInput `pulumi:"scalewayAccessKey"`
	// Required if kind is `SCALEWAY_CR`.
	ScalewaySecretKey pulumi.StringPtrInput `pulumi:"scalewaySecretKey"`
	// Required if kind is `ECR` or `PUBLIC_ECR`.
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
	// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (HelmRepositoryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmRepositoryConfig)(nil)).Elem()
}

func (i HelmRepositoryConfigArgs) ToHelmRepositoryConfigOutput() HelmRepositoryConfigOutput {
	return i.ToHelmRepositoryConfigOutputWithContext(context.Background())
}

func (i HelmRepositoryConfigArgs) ToHelmRepositoryConfigOutputWithContext(ctx context.Context) HelmRepositoryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmRepositoryConfigOutput)
}

func (i HelmRepositoryConfigArgs) ToHelmRepositoryConfigPtrOutput() HelmRepositoryConfigPtrOutput {
	return i.ToHelmRepositoryConfigPtrOutputWithContext(context.Background())
}

func (i HelmRepositoryConfigArgs) ToHelmRepositoryConfigPtrOutputWithContext(ctx context.Context) HelmRepositoryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmRepositoryConfigOutput).ToHelmRepositoryConfigPtrOutputWithContext(ctx)
}

// HelmRepositoryConfigPtrInput is an input type that accepts HelmRepositoryConfigArgs, HelmRepositoryConfigPtr and HelmRepositoryConfigPtrOutput values.
// You can construct a concrete instance of `HelmRepositoryConfigPtrInput` via:
//
//	        HelmRepositoryConfigArgs{...}
//
//	or:
//
//	        nil
type HelmRepositoryConfigPtrInput interface {
	pulumi.Input

	ToHelmRepositoryConfigPtrOutput() HelmRepositoryConfigPtrOutput
	ToHelmRepositoryConfigPtrOutputWithContext(context.Context) HelmRepositoryConfigPtrOutput
}

type helmRepositoryConfigPtrType HelmRepositoryConfigArgs

func HelmRepositoryConfigPtr(v *HelmRepositoryConfigArgs) HelmRepositoryConfigPtrInput {
	return (*helmRepositoryConfigPtrType)(v)
}

func (*helmRepositoryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmRepositoryConfig)(nil)).Elem()
}

func (i *helmRepositoryConfigPtrType) ToHelmRepositoryConfigPtrOutput() HelmRepositoryConfigPtrOutput {
	return i.ToHelmRepositoryConfigPtrOutputWithContext(context.Background())
}

func (i *helmRepositoryConfigPtrType) ToHelmRepositoryConfigPtrOutputWithContext(ctx context.Context) HelmRepositoryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmRepositoryConfigPtrOutput)
}

type HelmRepositoryConfigOutput struct{ *pulumi.OutputState }

func (HelmRepositoryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmRepositoryConfig)(nil)).Elem()
}

func (o HelmRepositoryConfigOutput) ToHelmRepositoryConfigOutput() HelmRepositoryConfigOutput {
	return o
}

func (o HelmRepositoryConfigOutput) ToHelmRepositoryConfigOutputWithContext(ctx context.Context) HelmRepositoryConfigOutput {
	return o
}

func (o HelmRepositoryConfigOutput) ToHelmRepositoryConfigPtrOutput() HelmRepositoryConfigPtrOutput {
	return o.ToHelmRepositoryConfigPtrOutputWithContext(context.Background())
}

func (o HelmRepositoryConfigOutput) ToHelmRepositoryConfigPtrOutputWithContext(ctx context.Context) HelmRepositoryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmRepositoryConfig) *HelmRepositoryConfig {
		return &v
	}).(HelmRepositoryConfigPtrOutput)
}

// Required if kind is `ECR` or `PUBLIC_ECR`.
func (o HelmRepositoryConfigOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmRepositoryConfig) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
func (o HelmRepositoryConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmRepositoryConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Required if kind is `ECR` or `SCALEWAY_CR`.
func (o HelmRepositoryConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmRepositoryConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Required if kind is `SCALEWAY_CR`.
func (o HelmRepositoryConfigOutput) ScalewayAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmRepositoryConfig) *string { return v.ScalewayAccessKey }).(pulumi.StringPtrOutput)
}

// Required if kind is `SCALEWAY_CR`.
func (o HelmRepositoryConfigOutput) ScalewaySecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmRepositoryConfig) *string { return v.ScalewaySecretKey }).(pulumi.StringPtrOutput)
}

// Required if kind is `ECR` or `PUBLIC_ECR`.
func (o HelmRepositoryConfigOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmRepositoryConfig) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
func (o HelmRepositoryConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmRepositoryConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type HelmRepositoryConfigPtrOutput struct{ *pulumi.OutputState }

func (HelmRepositoryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmRepositoryConfig)(nil)).Elem()
}

func (o HelmRepositoryConfigPtrOutput) ToHelmRepositoryConfigPtrOutput() HelmRepositoryConfigPtrOutput {
	return o
}

func (o HelmRepositoryConfigPtrOutput) ToHelmRepositoryConfigPtrOutputWithContext(ctx context.Context) HelmRepositoryConfigPtrOutput {
	return o
}

func (o HelmRepositoryConfigPtrOutput) Elem() HelmRepositoryConfigOutput {
	return o.ApplyT(func(v *HelmRepositoryConfig) HelmRepositoryConfig {
		if v != nil {
			return *v
		}
		var ret HelmRepositoryConfig
		return ret
	}).(HelmRepositoryConfigOutput)
}

// Required if kind is `ECR` or `PUBLIC_ECR`.
func (o HelmRepositoryConfigPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmRepositoryConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
func (o HelmRepositoryConfigPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmRepositoryConfig) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Required if kind is `ECR` or `SCALEWAY_CR`.
func (o HelmRepositoryConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmRepositoryConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Required if kind is `SCALEWAY_CR`.
func (o HelmRepositoryConfigPtrOutput) ScalewayAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmRepositoryConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScalewayAccessKey
	}).(pulumi.StringPtrOutput)
}

// Required if kind is `SCALEWAY_CR`.
func (o HelmRepositoryConfigPtrOutput) ScalewaySecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmRepositoryConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScalewaySecretKey
	}).(pulumi.StringPtrOutput)
}

// Required if kind is `ECR` or `PUBLIC_ECR`.
func (o HelmRepositoryConfigPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmRepositoryConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// Required if kinds are `DOCKER_HUB`, `GITHUB_CR`, `GITLAB`CR` ,  `GENERIC_CR`.
func (o HelmRepositoryConfigPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmRepositoryConfig) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type HelmSecret struct {
	// Id of the secret.
	Id *string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// HelmSecretInput is an input type that accepts HelmSecretArgs and HelmSecretOutput values.
// You can construct a concrete instance of `HelmSecretInput` via:
//
//	HelmSecretArgs{...}
type HelmSecretInput interface {
	pulumi.Input

	ToHelmSecretOutput() HelmSecretOutput
	ToHelmSecretOutputWithContext(context.Context) HelmSecretOutput
}

type HelmSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HelmSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSecret)(nil)).Elem()
}

func (i HelmSecretArgs) ToHelmSecretOutput() HelmSecretOutput {
	return i.ToHelmSecretOutputWithContext(context.Background())
}

func (i HelmSecretArgs) ToHelmSecretOutputWithContext(ctx context.Context) HelmSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSecretOutput)
}

// HelmSecretArrayInput is an input type that accepts HelmSecretArray and HelmSecretArrayOutput values.
// You can construct a concrete instance of `HelmSecretArrayInput` via:
//
//	HelmSecretArray{ HelmSecretArgs{...} }
type HelmSecretArrayInput interface {
	pulumi.Input

	ToHelmSecretArrayOutput() HelmSecretArrayOutput
	ToHelmSecretArrayOutputWithContext(context.Context) HelmSecretArrayOutput
}

type HelmSecretArray []HelmSecretInput

func (HelmSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmSecret)(nil)).Elem()
}

func (i HelmSecretArray) ToHelmSecretArrayOutput() HelmSecretArrayOutput {
	return i.ToHelmSecretArrayOutputWithContext(context.Background())
}

func (i HelmSecretArray) ToHelmSecretArrayOutputWithContext(ctx context.Context) HelmSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSecretArrayOutput)
}

type HelmSecretOutput struct{ *pulumi.OutputState }

func (HelmSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSecret)(nil)).Elem()
}

func (o HelmSecretOutput) ToHelmSecretOutput() HelmSecretOutput {
	return o
}

func (o HelmSecretOutput) ToHelmSecretOutputWithContext(ctx context.Context) HelmSecretOutput {
	return o
}

// Id of the secret.
func (o HelmSecretOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmSecret) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the secret.
func (o HelmSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o HelmSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSecret) string { return v.Value }).(pulumi.StringOutput)
}

type HelmSecretArrayOutput struct{ *pulumi.OutputState }

func (HelmSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmSecret)(nil)).Elem()
}

func (o HelmSecretArrayOutput) ToHelmSecretArrayOutput() HelmSecretArrayOutput {
	return o
}

func (o HelmSecretArrayOutput) ToHelmSecretArrayOutputWithContext(ctx context.Context) HelmSecretArrayOutput {
	return o
}

func (o HelmSecretArrayOutput) Index(i pulumi.IntInput) HelmSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HelmSecret {
		return vs[0].([]HelmSecret)[vs[1].(int)]
	}).(HelmSecretOutput)
}

type HelmSecretAlias struct {
	// Id of the secret alias.
	Id *string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// HelmSecretAliasInput is an input type that accepts HelmSecretAliasArgs and HelmSecretAliasOutput values.
// You can construct a concrete instance of `HelmSecretAliasInput` via:
//
//	HelmSecretAliasArgs{...}
type HelmSecretAliasInput interface {
	pulumi.Input

	ToHelmSecretAliasOutput() HelmSecretAliasOutput
	ToHelmSecretAliasOutputWithContext(context.Context) HelmSecretAliasOutput
}

type HelmSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HelmSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSecretAlias)(nil)).Elem()
}

func (i HelmSecretAliasArgs) ToHelmSecretAliasOutput() HelmSecretAliasOutput {
	return i.ToHelmSecretAliasOutputWithContext(context.Background())
}

func (i HelmSecretAliasArgs) ToHelmSecretAliasOutputWithContext(ctx context.Context) HelmSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSecretAliasOutput)
}

// HelmSecretAliasArrayInput is an input type that accepts HelmSecretAliasArray and HelmSecretAliasArrayOutput values.
// You can construct a concrete instance of `HelmSecretAliasArrayInput` via:
//
//	HelmSecretAliasArray{ HelmSecretAliasArgs{...} }
type HelmSecretAliasArrayInput interface {
	pulumi.Input

	ToHelmSecretAliasArrayOutput() HelmSecretAliasArrayOutput
	ToHelmSecretAliasArrayOutputWithContext(context.Context) HelmSecretAliasArrayOutput
}

type HelmSecretAliasArray []HelmSecretAliasInput

func (HelmSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmSecretAlias)(nil)).Elem()
}

func (i HelmSecretAliasArray) ToHelmSecretAliasArrayOutput() HelmSecretAliasArrayOutput {
	return i.ToHelmSecretAliasArrayOutputWithContext(context.Background())
}

func (i HelmSecretAliasArray) ToHelmSecretAliasArrayOutputWithContext(ctx context.Context) HelmSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSecretAliasArrayOutput)
}

type HelmSecretAliasOutput struct{ *pulumi.OutputState }

func (HelmSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSecretAlias)(nil)).Elem()
}

func (o HelmSecretAliasOutput) ToHelmSecretAliasOutput() HelmSecretAliasOutput {
	return o
}

func (o HelmSecretAliasOutput) ToHelmSecretAliasOutputWithContext(ctx context.Context) HelmSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o HelmSecretAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmSecretAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret alias.
func (o HelmSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o HelmSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type HelmSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (HelmSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmSecretAlias)(nil)).Elem()
}

func (o HelmSecretAliasArrayOutput) ToHelmSecretAliasArrayOutput() HelmSecretAliasArrayOutput {
	return o
}

func (o HelmSecretAliasArrayOutput) ToHelmSecretAliasArrayOutputWithContext(ctx context.Context) HelmSecretAliasArrayOutput {
	return o
}

func (o HelmSecretAliasArrayOutput) Index(i pulumi.IntInput) HelmSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HelmSecretAlias {
		return vs[0].([]HelmSecretAlias)[vs[1].(int)]
	}).(HelmSecretAliasOutput)
}

type HelmSecretOverride struct {
	// Id of the secret override.
	Id *string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// HelmSecretOverrideInput is an input type that accepts HelmSecretOverrideArgs and HelmSecretOverrideOutput values.
// You can construct a concrete instance of `HelmSecretOverrideInput` via:
//
//	HelmSecretOverrideArgs{...}
type HelmSecretOverrideInput interface {
	pulumi.Input

	ToHelmSecretOverrideOutput() HelmSecretOverrideOutput
	ToHelmSecretOverrideOutputWithContext(context.Context) HelmSecretOverrideOutput
}

type HelmSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HelmSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSecretOverride)(nil)).Elem()
}

func (i HelmSecretOverrideArgs) ToHelmSecretOverrideOutput() HelmSecretOverrideOutput {
	return i.ToHelmSecretOverrideOutputWithContext(context.Background())
}

func (i HelmSecretOverrideArgs) ToHelmSecretOverrideOutputWithContext(ctx context.Context) HelmSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSecretOverrideOutput)
}

// HelmSecretOverrideArrayInput is an input type that accepts HelmSecretOverrideArray and HelmSecretOverrideArrayOutput values.
// You can construct a concrete instance of `HelmSecretOverrideArrayInput` via:
//
//	HelmSecretOverrideArray{ HelmSecretOverrideArgs{...} }
type HelmSecretOverrideArrayInput interface {
	pulumi.Input

	ToHelmSecretOverrideArrayOutput() HelmSecretOverrideArrayOutput
	ToHelmSecretOverrideArrayOutputWithContext(context.Context) HelmSecretOverrideArrayOutput
}

type HelmSecretOverrideArray []HelmSecretOverrideInput

func (HelmSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmSecretOverride)(nil)).Elem()
}

func (i HelmSecretOverrideArray) ToHelmSecretOverrideArrayOutput() HelmSecretOverrideArrayOutput {
	return i.ToHelmSecretOverrideArrayOutputWithContext(context.Background())
}

func (i HelmSecretOverrideArray) ToHelmSecretOverrideArrayOutputWithContext(ctx context.Context) HelmSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSecretOverrideArrayOutput)
}

type HelmSecretOverrideOutput struct{ *pulumi.OutputState }

func (HelmSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSecretOverride)(nil)).Elem()
}

func (o HelmSecretOverrideOutput) ToHelmSecretOverrideOutput() HelmSecretOverrideOutput {
	return o
}

func (o HelmSecretOverrideOutput) ToHelmSecretOverrideOutputWithContext(ctx context.Context) HelmSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o HelmSecretOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmSecretOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret override.
func (o HelmSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o HelmSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type HelmSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (HelmSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HelmSecretOverride)(nil)).Elem()
}

func (o HelmSecretOverrideArrayOutput) ToHelmSecretOverrideArrayOutput() HelmSecretOverrideArrayOutput {
	return o
}

func (o HelmSecretOverrideArrayOutput) ToHelmSecretOverrideArrayOutputWithContext(ctx context.Context) HelmSecretOverrideArrayOutput {
	return o
}

func (o HelmSecretOverrideArrayOutput) Index(i pulumi.IntInput) HelmSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HelmSecretOverride {
		return vs[0].([]HelmSecretOverride)[vs[1].(int)]
	}).(HelmSecretOverrideOutput)
}

type HelmSource struct {
	// Git repository
	GitRepository *HelmSourceGitRepository `pulumi:"gitRepository"`
	// Helm repositories can be private or public
	HelmRepository *HelmSourceHelmRepository `pulumi:"helmRepository"`
}

// HelmSourceInput is an input type that accepts HelmSourceArgs and HelmSourceOutput values.
// You can construct a concrete instance of `HelmSourceInput` via:
//
//	HelmSourceArgs{...}
type HelmSourceInput interface {
	pulumi.Input

	ToHelmSourceOutput() HelmSourceOutput
	ToHelmSourceOutputWithContext(context.Context) HelmSourceOutput
}

type HelmSourceArgs struct {
	// Git repository
	GitRepository HelmSourceGitRepositoryPtrInput `pulumi:"gitRepository"`
	// Helm repositories can be private or public
	HelmRepository HelmSourceHelmRepositoryPtrInput `pulumi:"helmRepository"`
}

func (HelmSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSource)(nil)).Elem()
}

func (i HelmSourceArgs) ToHelmSourceOutput() HelmSourceOutput {
	return i.ToHelmSourceOutputWithContext(context.Background())
}

func (i HelmSourceArgs) ToHelmSourceOutputWithContext(ctx context.Context) HelmSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourceOutput)
}

func (i HelmSourceArgs) ToHelmSourcePtrOutput() HelmSourcePtrOutput {
	return i.ToHelmSourcePtrOutputWithContext(context.Background())
}

func (i HelmSourceArgs) ToHelmSourcePtrOutputWithContext(ctx context.Context) HelmSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourceOutput).ToHelmSourcePtrOutputWithContext(ctx)
}

// HelmSourcePtrInput is an input type that accepts HelmSourceArgs, HelmSourcePtr and HelmSourcePtrOutput values.
// You can construct a concrete instance of `HelmSourcePtrInput` via:
//
//	        HelmSourceArgs{...}
//
//	or:
//
//	        nil
type HelmSourcePtrInput interface {
	pulumi.Input

	ToHelmSourcePtrOutput() HelmSourcePtrOutput
	ToHelmSourcePtrOutputWithContext(context.Context) HelmSourcePtrOutput
}

type helmSourcePtrType HelmSourceArgs

func HelmSourcePtr(v *HelmSourceArgs) HelmSourcePtrInput {
	return (*helmSourcePtrType)(v)
}

func (*helmSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmSource)(nil)).Elem()
}

func (i *helmSourcePtrType) ToHelmSourcePtrOutput() HelmSourcePtrOutput {
	return i.ToHelmSourcePtrOutputWithContext(context.Background())
}

func (i *helmSourcePtrType) ToHelmSourcePtrOutputWithContext(ctx context.Context) HelmSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourcePtrOutput)
}

type HelmSourceOutput struct{ *pulumi.OutputState }

func (HelmSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSource)(nil)).Elem()
}

func (o HelmSourceOutput) ToHelmSourceOutput() HelmSourceOutput {
	return o
}

func (o HelmSourceOutput) ToHelmSourceOutputWithContext(ctx context.Context) HelmSourceOutput {
	return o
}

func (o HelmSourceOutput) ToHelmSourcePtrOutput() HelmSourcePtrOutput {
	return o.ToHelmSourcePtrOutputWithContext(context.Background())
}

func (o HelmSourceOutput) ToHelmSourcePtrOutputWithContext(ctx context.Context) HelmSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmSource) *HelmSource {
		return &v
	}).(HelmSourcePtrOutput)
}

// Git repository
func (o HelmSourceOutput) GitRepository() HelmSourceGitRepositoryPtrOutput {
	return o.ApplyT(func(v HelmSource) *HelmSourceGitRepository { return v.GitRepository }).(HelmSourceGitRepositoryPtrOutput)
}

// Helm repositories can be private or public
func (o HelmSourceOutput) HelmRepository() HelmSourceHelmRepositoryPtrOutput {
	return o.ApplyT(func(v HelmSource) *HelmSourceHelmRepository { return v.HelmRepository }).(HelmSourceHelmRepositoryPtrOutput)
}

type HelmSourcePtrOutput struct{ *pulumi.OutputState }

func (HelmSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmSource)(nil)).Elem()
}

func (o HelmSourcePtrOutput) ToHelmSourcePtrOutput() HelmSourcePtrOutput {
	return o
}

func (o HelmSourcePtrOutput) ToHelmSourcePtrOutputWithContext(ctx context.Context) HelmSourcePtrOutput {
	return o
}

func (o HelmSourcePtrOutput) Elem() HelmSourceOutput {
	return o.ApplyT(func(v *HelmSource) HelmSource {
		if v != nil {
			return *v
		}
		var ret HelmSource
		return ret
	}).(HelmSourceOutput)
}

// Git repository
func (o HelmSourcePtrOutput) GitRepository() HelmSourceGitRepositoryPtrOutput {
	return o.ApplyT(func(v *HelmSource) *HelmSourceGitRepository {
		if v == nil {
			return nil
		}
		return v.GitRepository
	}).(HelmSourceGitRepositoryPtrOutput)
}

// Helm repositories can be private or public
func (o HelmSourcePtrOutput) HelmRepository() HelmSourceHelmRepositoryPtrOutput {
	return o.ApplyT(func(v *HelmSource) *HelmSourceHelmRepository {
		if v == nil {
			return nil
		}
		return v.HelmRepository
	}).(HelmSourceHelmRepositoryPtrOutput)
}

type HelmSourceGitRepository struct {
	// Helm's source git repository branch
	Branch *string `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId *string `pulumi:"gitTokenId"`
	// Helm's source git repository root path
	RootPath *string `pulumi:"rootPath"`
	// Helm's source git repository URL
	Url string `pulumi:"url"`
}

// HelmSourceGitRepositoryInput is an input type that accepts HelmSourceGitRepositoryArgs and HelmSourceGitRepositoryOutput values.
// You can construct a concrete instance of `HelmSourceGitRepositoryInput` via:
//
//	HelmSourceGitRepositoryArgs{...}
type HelmSourceGitRepositoryInput interface {
	pulumi.Input

	ToHelmSourceGitRepositoryOutput() HelmSourceGitRepositoryOutput
	ToHelmSourceGitRepositoryOutputWithContext(context.Context) HelmSourceGitRepositoryOutput
}

type HelmSourceGitRepositoryArgs struct {
	// Helm's source git repository branch
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId pulumi.StringPtrInput `pulumi:"gitTokenId"`
	// Helm's source git repository root path
	RootPath pulumi.StringPtrInput `pulumi:"rootPath"`
	// Helm's source git repository URL
	Url pulumi.StringInput `pulumi:"url"`
}

func (HelmSourceGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSourceGitRepository)(nil)).Elem()
}

func (i HelmSourceGitRepositoryArgs) ToHelmSourceGitRepositoryOutput() HelmSourceGitRepositoryOutput {
	return i.ToHelmSourceGitRepositoryOutputWithContext(context.Background())
}

func (i HelmSourceGitRepositoryArgs) ToHelmSourceGitRepositoryOutputWithContext(ctx context.Context) HelmSourceGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourceGitRepositoryOutput)
}

func (i HelmSourceGitRepositoryArgs) ToHelmSourceGitRepositoryPtrOutput() HelmSourceGitRepositoryPtrOutput {
	return i.ToHelmSourceGitRepositoryPtrOutputWithContext(context.Background())
}

func (i HelmSourceGitRepositoryArgs) ToHelmSourceGitRepositoryPtrOutputWithContext(ctx context.Context) HelmSourceGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourceGitRepositoryOutput).ToHelmSourceGitRepositoryPtrOutputWithContext(ctx)
}

// HelmSourceGitRepositoryPtrInput is an input type that accepts HelmSourceGitRepositoryArgs, HelmSourceGitRepositoryPtr and HelmSourceGitRepositoryPtrOutput values.
// You can construct a concrete instance of `HelmSourceGitRepositoryPtrInput` via:
//
//	        HelmSourceGitRepositoryArgs{...}
//
//	or:
//
//	        nil
type HelmSourceGitRepositoryPtrInput interface {
	pulumi.Input

	ToHelmSourceGitRepositoryPtrOutput() HelmSourceGitRepositoryPtrOutput
	ToHelmSourceGitRepositoryPtrOutputWithContext(context.Context) HelmSourceGitRepositoryPtrOutput
}

type helmSourceGitRepositoryPtrType HelmSourceGitRepositoryArgs

func HelmSourceGitRepositoryPtr(v *HelmSourceGitRepositoryArgs) HelmSourceGitRepositoryPtrInput {
	return (*helmSourceGitRepositoryPtrType)(v)
}

func (*helmSourceGitRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmSourceGitRepository)(nil)).Elem()
}

func (i *helmSourceGitRepositoryPtrType) ToHelmSourceGitRepositoryPtrOutput() HelmSourceGitRepositoryPtrOutput {
	return i.ToHelmSourceGitRepositoryPtrOutputWithContext(context.Background())
}

func (i *helmSourceGitRepositoryPtrType) ToHelmSourceGitRepositoryPtrOutputWithContext(ctx context.Context) HelmSourceGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourceGitRepositoryPtrOutput)
}

type HelmSourceGitRepositoryOutput struct{ *pulumi.OutputState }

func (HelmSourceGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSourceGitRepository)(nil)).Elem()
}

func (o HelmSourceGitRepositoryOutput) ToHelmSourceGitRepositoryOutput() HelmSourceGitRepositoryOutput {
	return o
}

func (o HelmSourceGitRepositoryOutput) ToHelmSourceGitRepositoryOutputWithContext(ctx context.Context) HelmSourceGitRepositoryOutput {
	return o
}

func (o HelmSourceGitRepositoryOutput) ToHelmSourceGitRepositoryPtrOutput() HelmSourceGitRepositoryPtrOutput {
	return o.ToHelmSourceGitRepositoryPtrOutputWithContext(context.Background())
}

func (o HelmSourceGitRepositoryOutput) ToHelmSourceGitRepositoryPtrOutputWithContext(ctx context.Context) HelmSourceGitRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmSourceGitRepository) *HelmSourceGitRepository {
		return &v
	}).(HelmSourceGitRepositoryPtrOutput)
}

// Helm's source git repository branch
func (o HelmSourceGitRepositoryOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmSourceGitRepository) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The git token ID to be used
func (o HelmSourceGitRepositoryOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmSourceGitRepository) *string { return v.GitTokenId }).(pulumi.StringPtrOutput)
}

// Helm's source git repository root path
func (o HelmSourceGitRepositoryOutput) RootPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmSourceGitRepository) *string { return v.RootPath }).(pulumi.StringPtrOutput)
}

// Helm's source git repository URL
func (o HelmSourceGitRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSourceGitRepository) string { return v.Url }).(pulumi.StringOutput)
}

type HelmSourceGitRepositoryPtrOutput struct{ *pulumi.OutputState }

func (HelmSourceGitRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmSourceGitRepository)(nil)).Elem()
}

func (o HelmSourceGitRepositoryPtrOutput) ToHelmSourceGitRepositoryPtrOutput() HelmSourceGitRepositoryPtrOutput {
	return o
}

func (o HelmSourceGitRepositoryPtrOutput) ToHelmSourceGitRepositoryPtrOutputWithContext(ctx context.Context) HelmSourceGitRepositoryPtrOutput {
	return o
}

func (o HelmSourceGitRepositoryPtrOutput) Elem() HelmSourceGitRepositoryOutput {
	return o.ApplyT(func(v *HelmSourceGitRepository) HelmSourceGitRepository {
		if v != nil {
			return *v
		}
		var ret HelmSourceGitRepository
		return ret
	}).(HelmSourceGitRepositoryOutput)
}

// Helm's source git repository branch
func (o HelmSourceGitRepositoryPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmSourceGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The git token ID to be used
func (o HelmSourceGitRepositoryPtrOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmSourceGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.GitTokenId
	}).(pulumi.StringPtrOutput)
}

// Helm's source git repository root path
func (o HelmSourceGitRepositoryPtrOutput) RootPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmSourceGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.RootPath
	}).(pulumi.StringPtrOutput)
}

// Helm's source git repository URL
func (o HelmSourceGitRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmSourceGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type HelmSourceHelmRepository struct {
	// Chart name
	ChartName string `pulumi:"chartName"`
	// Chart version
	ChartVersion string `pulumi:"chartVersion"`
	// helm repository id
	HelmRepositoryId string `pulumi:"helmRepositoryId"`
}

// HelmSourceHelmRepositoryInput is an input type that accepts HelmSourceHelmRepositoryArgs and HelmSourceHelmRepositoryOutput values.
// You can construct a concrete instance of `HelmSourceHelmRepositoryInput` via:
//
//	HelmSourceHelmRepositoryArgs{...}
type HelmSourceHelmRepositoryInput interface {
	pulumi.Input

	ToHelmSourceHelmRepositoryOutput() HelmSourceHelmRepositoryOutput
	ToHelmSourceHelmRepositoryOutputWithContext(context.Context) HelmSourceHelmRepositoryOutput
}

type HelmSourceHelmRepositoryArgs struct {
	// Chart name
	ChartName pulumi.StringInput `pulumi:"chartName"`
	// Chart version
	ChartVersion pulumi.StringInput `pulumi:"chartVersion"`
	// helm repository id
	HelmRepositoryId pulumi.StringInput `pulumi:"helmRepositoryId"`
}

func (HelmSourceHelmRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSourceHelmRepository)(nil)).Elem()
}

func (i HelmSourceHelmRepositoryArgs) ToHelmSourceHelmRepositoryOutput() HelmSourceHelmRepositoryOutput {
	return i.ToHelmSourceHelmRepositoryOutputWithContext(context.Background())
}

func (i HelmSourceHelmRepositoryArgs) ToHelmSourceHelmRepositoryOutputWithContext(ctx context.Context) HelmSourceHelmRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourceHelmRepositoryOutput)
}

func (i HelmSourceHelmRepositoryArgs) ToHelmSourceHelmRepositoryPtrOutput() HelmSourceHelmRepositoryPtrOutput {
	return i.ToHelmSourceHelmRepositoryPtrOutputWithContext(context.Background())
}

func (i HelmSourceHelmRepositoryArgs) ToHelmSourceHelmRepositoryPtrOutputWithContext(ctx context.Context) HelmSourceHelmRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourceHelmRepositoryOutput).ToHelmSourceHelmRepositoryPtrOutputWithContext(ctx)
}

// HelmSourceHelmRepositoryPtrInput is an input type that accepts HelmSourceHelmRepositoryArgs, HelmSourceHelmRepositoryPtr and HelmSourceHelmRepositoryPtrOutput values.
// You can construct a concrete instance of `HelmSourceHelmRepositoryPtrInput` via:
//
//	        HelmSourceHelmRepositoryArgs{...}
//
//	or:
//
//	        nil
type HelmSourceHelmRepositoryPtrInput interface {
	pulumi.Input

	ToHelmSourceHelmRepositoryPtrOutput() HelmSourceHelmRepositoryPtrOutput
	ToHelmSourceHelmRepositoryPtrOutputWithContext(context.Context) HelmSourceHelmRepositoryPtrOutput
}

type helmSourceHelmRepositoryPtrType HelmSourceHelmRepositoryArgs

func HelmSourceHelmRepositoryPtr(v *HelmSourceHelmRepositoryArgs) HelmSourceHelmRepositoryPtrInput {
	return (*helmSourceHelmRepositoryPtrType)(v)
}

func (*helmSourceHelmRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmSourceHelmRepository)(nil)).Elem()
}

func (i *helmSourceHelmRepositoryPtrType) ToHelmSourceHelmRepositoryPtrOutput() HelmSourceHelmRepositoryPtrOutput {
	return i.ToHelmSourceHelmRepositoryPtrOutputWithContext(context.Background())
}

func (i *helmSourceHelmRepositoryPtrType) ToHelmSourceHelmRepositoryPtrOutputWithContext(ctx context.Context) HelmSourceHelmRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmSourceHelmRepositoryPtrOutput)
}

type HelmSourceHelmRepositoryOutput struct{ *pulumi.OutputState }

func (HelmSourceHelmRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmSourceHelmRepository)(nil)).Elem()
}

func (o HelmSourceHelmRepositoryOutput) ToHelmSourceHelmRepositoryOutput() HelmSourceHelmRepositoryOutput {
	return o
}

func (o HelmSourceHelmRepositoryOutput) ToHelmSourceHelmRepositoryOutputWithContext(ctx context.Context) HelmSourceHelmRepositoryOutput {
	return o
}

func (o HelmSourceHelmRepositoryOutput) ToHelmSourceHelmRepositoryPtrOutput() HelmSourceHelmRepositoryPtrOutput {
	return o.ToHelmSourceHelmRepositoryPtrOutputWithContext(context.Background())
}

func (o HelmSourceHelmRepositoryOutput) ToHelmSourceHelmRepositoryPtrOutputWithContext(ctx context.Context) HelmSourceHelmRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmSourceHelmRepository) *HelmSourceHelmRepository {
		return &v
	}).(HelmSourceHelmRepositoryPtrOutput)
}

// Chart name
func (o HelmSourceHelmRepositoryOutput) ChartName() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSourceHelmRepository) string { return v.ChartName }).(pulumi.StringOutput)
}

// Chart version
func (o HelmSourceHelmRepositoryOutput) ChartVersion() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSourceHelmRepository) string { return v.ChartVersion }).(pulumi.StringOutput)
}

// helm repository id
func (o HelmSourceHelmRepositoryOutput) HelmRepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v HelmSourceHelmRepository) string { return v.HelmRepositoryId }).(pulumi.StringOutput)
}

type HelmSourceHelmRepositoryPtrOutput struct{ *pulumi.OutputState }

func (HelmSourceHelmRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmSourceHelmRepository)(nil)).Elem()
}

func (o HelmSourceHelmRepositoryPtrOutput) ToHelmSourceHelmRepositoryPtrOutput() HelmSourceHelmRepositoryPtrOutput {
	return o
}

func (o HelmSourceHelmRepositoryPtrOutput) ToHelmSourceHelmRepositoryPtrOutputWithContext(ctx context.Context) HelmSourceHelmRepositoryPtrOutput {
	return o
}

func (o HelmSourceHelmRepositoryPtrOutput) Elem() HelmSourceHelmRepositoryOutput {
	return o.ApplyT(func(v *HelmSourceHelmRepository) HelmSourceHelmRepository {
		if v != nil {
			return *v
		}
		var ret HelmSourceHelmRepository
		return ret
	}).(HelmSourceHelmRepositoryOutput)
}

// Chart name
func (o HelmSourceHelmRepositoryPtrOutput) ChartName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmSourceHelmRepository) *string {
		if v == nil {
			return nil
		}
		return &v.ChartName
	}).(pulumi.StringPtrOutput)
}

// Chart version
func (o HelmSourceHelmRepositoryPtrOutput) ChartVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmSourceHelmRepository) *string {
		if v == nil {
			return nil
		}
		return &v.ChartVersion
	}).(pulumi.StringPtrOutput)
}

// helm repository id
func (o HelmSourceHelmRepositoryPtrOutput) HelmRepositoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmSourceHelmRepository) *string {
		if v == nil {
			return nil
		}
		return &v.HelmRepositoryId
	}).(pulumi.StringPtrOutput)
}

type HelmValuesOverride struct {
	// Define the overrides by selecting a YAML file from a git repository (preferred) or by passing raw YAML files.
	File      *HelmValuesOverrideFile `pulumi:"file"`
	Set       map[string]string       `pulumi:"set"`
	SetJson   map[string]string       `pulumi:"setJson"`
	SetString map[string]string       `pulumi:"setString"`
}

// HelmValuesOverrideInput is an input type that accepts HelmValuesOverrideArgs and HelmValuesOverrideOutput values.
// You can construct a concrete instance of `HelmValuesOverrideInput` via:
//
//	HelmValuesOverrideArgs{...}
type HelmValuesOverrideInput interface {
	pulumi.Input

	ToHelmValuesOverrideOutput() HelmValuesOverrideOutput
	ToHelmValuesOverrideOutputWithContext(context.Context) HelmValuesOverrideOutput
}

type HelmValuesOverrideArgs struct {
	// Define the overrides by selecting a YAML file from a git repository (preferred) or by passing raw YAML files.
	File      HelmValuesOverrideFilePtrInput `pulumi:"file"`
	Set       pulumi.StringMapInput          `pulumi:"set"`
	SetJson   pulumi.StringMapInput          `pulumi:"setJson"`
	SetString pulumi.StringMapInput          `pulumi:"setString"`
}

func (HelmValuesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmValuesOverride)(nil)).Elem()
}

func (i HelmValuesOverrideArgs) ToHelmValuesOverrideOutput() HelmValuesOverrideOutput {
	return i.ToHelmValuesOverrideOutputWithContext(context.Background())
}

func (i HelmValuesOverrideArgs) ToHelmValuesOverrideOutputWithContext(ctx context.Context) HelmValuesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideOutput)
}

func (i HelmValuesOverrideArgs) ToHelmValuesOverridePtrOutput() HelmValuesOverridePtrOutput {
	return i.ToHelmValuesOverridePtrOutputWithContext(context.Background())
}

func (i HelmValuesOverrideArgs) ToHelmValuesOverridePtrOutputWithContext(ctx context.Context) HelmValuesOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideOutput).ToHelmValuesOverridePtrOutputWithContext(ctx)
}

// HelmValuesOverridePtrInput is an input type that accepts HelmValuesOverrideArgs, HelmValuesOverridePtr and HelmValuesOverridePtrOutput values.
// You can construct a concrete instance of `HelmValuesOverridePtrInput` via:
//
//	        HelmValuesOverrideArgs{...}
//
//	or:
//
//	        nil
type HelmValuesOverridePtrInput interface {
	pulumi.Input

	ToHelmValuesOverridePtrOutput() HelmValuesOverridePtrOutput
	ToHelmValuesOverridePtrOutputWithContext(context.Context) HelmValuesOverridePtrOutput
}

type helmValuesOverridePtrType HelmValuesOverrideArgs

func HelmValuesOverridePtr(v *HelmValuesOverrideArgs) HelmValuesOverridePtrInput {
	return (*helmValuesOverridePtrType)(v)
}

func (*helmValuesOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmValuesOverride)(nil)).Elem()
}

func (i *helmValuesOverridePtrType) ToHelmValuesOverridePtrOutput() HelmValuesOverridePtrOutput {
	return i.ToHelmValuesOverridePtrOutputWithContext(context.Background())
}

func (i *helmValuesOverridePtrType) ToHelmValuesOverridePtrOutputWithContext(ctx context.Context) HelmValuesOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverridePtrOutput)
}

type HelmValuesOverrideOutput struct{ *pulumi.OutputState }

func (HelmValuesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmValuesOverride)(nil)).Elem()
}

func (o HelmValuesOverrideOutput) ToHelmValuesOverrideOutput() HelmValuesOverrideOutput {
	return o
}

func (o HelmValuesOverrideOutput) ToHelmValuesOverrideOutputWithContext(ctx context.Context) HelmValuesOverrideOutput {
	return o
}

func (o HelmValuesOverrideOutput) ToHelmValuesOverridePtrOutput() HelmValuesOverridePtrOutput {
	return o.ToHelmValuesOverridePtrOutputWithContext(context.Background())
}

func (o HelmValuesOverrideOutput) ToHelmValuesOverridePtrOutputWithContext(ctx context.Context) HelmValuesOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmValuesOverride) *HelmValuesOverride {
		return &v
	}).(HelmValuesOverridePtrOutput)
}

// Define the overrides by selecting a YAML file from a git repository (preferred) or by passing raw YAML files.
func (o HelmValuesOverrideOutput) File() HelmValuesOverrideFilePtrOutput {
	return o.ApplyT(func(v HelmValuesOverride) *HelmValuesOverrideFile { return v.File }).(HelmValuesOverrideFilePtrOutput)
}

func (o HelmValuesOverrideOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v HelmValuesOverride) map[string]string { return v.Set }).(pulumi.StringMapOutput)
}

func (o HelmValuesOverrideOutput) SetJson() pulumi.StringMapOutput {
	return o.ApplyT(func(v HelmValuesOverride) map[string]string { return v.SetJson }).(pulumi.StringMapOutput)
}

func (o HelmValuesOverrideOutput) SetString() pulumi.StringMapOutput {
	return o.ApplyT(func(v HelmValuesOverride) map[string]string { return v.SetString }).(pulumi.StringMapOutput)
}

type HelmValuesOverridePtrOutput struct{ *pulumi.OutputState }

func (HelmValuesOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmValuesOverride)(nil)).Elem()
}

func (o HelmValuesOverridePtrOutput) ToHelmValuesOverridePtrOutput() HelmValuesOverridePtrOutput {
	return o
}

func (o HelmValuesOverridePtrOutput) ToHelmValuesOverridePtrOutputWithContext(ctx context.Context) HelmValuesOverridePtrOutput {
	return o
}

func (o HelmValuesOverridePtrOutput) Elem() HelmValuesOverrideOutput {
	return o.ApplyT(func(v *HelmValuesOverride) HelmValuesOverride {
		if v != nil {
			return *v
		}
		var ret HelmValuesOverride
		return ret
	}).(HelmValuesOverrideOutput)
}

// Define the overrides by selecting a YAML file from a git repository (preferred) or by passing raw YAML files.
func (o HelmValuesOverridePtrOutput) File() HelmValuesOverrideFilePtrOutput {
	return o.ApplyT(func(v *HelmValuesOverride) *HelmValuesOverrideFile {
		if v == nil {
			return nil
		}
		return v.File
	}).(HelmValuesOverrideFilePtrOutput)
}

func (o HelmValuesOverridePtrOutput) Set() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HelmValuesOverride) map[string]string {
		if v == nil {
			return nil
		}
		return v.Set
	}).(pulumi.StringMapOutput)
}

func (o HelmValuesOverridePtrOutput) SetJson() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HelmValuesOverride) map[string]string {
		if v == nil {
			return nil
		}
		return v.SetJson
	}).(pulumi.StringMapOutput)
}

func (o HelmValuesOverridePtrOutput) SetString() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HelmValuesOverride) map[string]string {
		if v == nil {
			return nil
		}
		return v.SetString
	}).(pulumi.StringMapOutput)
}

type HelmValuesOverrideFile struct {
	// YAML file from a git repository
	GitRepository *HelmValuesOverrideFileGitRepository `pulumi:"gitRepository"`
	// Raw YAML files
	Raw map[string]HelmValuesOverrideFileRaw `pulumi:"raw"`
}

// HelmValuesOverrideFileInput is an input type that accepts HelmValuesOverrideFileArgs and HelmValuesOverrideFileOutput values.
// You can construct a concrete instance of `HelmValuesOverrideFileInput` via:
//
//	HelmValuesOverrideFileArgs{...}
type HelmValuesOverrideFileInput interface {
	pulumi.Input

	ToHelmValuesOverrideFileOutput() HelmValuesOverrideFileOutput
	ToHelmValuesOverrideFileOutputWithContext(context.Context) HelmValuesOverrideFileOutput
}

type HelmValuesOverrideFileArgs struct {
	// YAML file from a git repository
	GitRepository HelmValuesOverrideFileGitRepositoryPtrInput `pulumi:"gitRepository"`
	// Raw YAML files
	Raw HelmValuesOverrideFileRawMapInput `pulumi:"raw"`
}

func (HelmValuesOverrideFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmValuesOverrideFile)(nil)).Elem()
}

func (i HelmValuesOverrideFileArgs) ToHelmValuesOverrideFileOutput() HelmValuesOverrideFileOutput {
	return i.ToHelmValuesOverrideFileOutputWithContext(context.Background())
}

func (i HelmValuesOverrideFileArgs) ToHelmValuesOverrideFileOutputWithContext(ctx context.Context) HelmValuesOverrideFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideFileOutput)
}

func (i HelmValuesOverrideFileArgs) ToHelmValuesOverrideFilePtrOutput() HelmValuesOverrideFilePtrOutput {
	return i.ToHelmValuesOverrideFilePtrOutputWithContext(context.Background())
}

func (i HelmValuesOverrideFileArgs) ToHelmValuesOverrideFilePtrOutputWithContext(ctx context.Context) HelmValuesOverrideFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideFileOutput).ToHelmValuesOverrideFilePtrOutputWithContext(ctx)
}

// HelmValuesOverrideFilePtrInput is an input type that accepts HelmValuesOverrideFileArgs, HelmValuesOverrideFilePtr and HelmValuesOverrideFilePtrOutput values.
// You can construct a concrete instance of `HelmValuesOverrideFilePtrInput` via:
//
//	        HelmValuesOverrideFileArgs{...}
//
//	or:
//
//	        nil
type HelmValuesOverrideFilePtrInput interface {
	pulumi.Input

	ToHelmValuesOverrideFilePtrOutput() HelmValuesOverrideFilePtrOutput
	ToHelmValuesOverrideFilePtrOutputWithContext(context.Context) HelmValuesOverrideFilePtrOutput
}

type helmValuesOverrideFilePtrType HelmValuesOverrideFileArgs

func HelmValuesOverrideFilePtr(v *HelmValuesOverrideFileArgs) HelmValuesOverrideFilePtrInput {
	return (*helmValuesOverrideFilePtrType)(v)
}

func (*helmValuesOverrideFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmValuesOverrideFile)(nil)).Elem()
}

func (i *helmValuesOverrideFilePtrType) ToHelmValuesOverrideFilePtrOutput() HelmValuesOverrideFilePtrOutput {
	return i.ToHelmValuesOverrideFilePtrOutputWithContext(context.Background())
}

func (i *helmValuesOverrideFilePtrType) ToHelmValuesOverrideFilePtrOutputWithContext(ctx context.Context) HelmValuesOverrideFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideFilePtrOutput)
}

type HelmValuesOverrideFileOutput struct{ *pulumi.OutputState }

func (HelmValuesOverrideFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmValuesOverrideFile)(nil)).Elem()
}

func (o HelmValuesOverrideFileOutput) ToHelmValuesOverrideFileOutput() HelmValuesOverrideFileOutput {
	return o
}

func (o HelmValuesOverrideFileOutput) ToHelmValuesOverrideFileOutputWithContext(ctx context.Context) HelmValuesOverrideFileOutput {
	return o
}

func (o HelmValuesOverrideFileOutput) ToHelmValuesOverrideFilePtrOutput() HelmValuesOverrideFilePtrOutput {
	return o.ToHelmValuesOverrideFilePtrOutputWithContext(context.Background())
}

func (o HelmValuesOverrideFileOutput) ToHelmValuesOverrideFilePtrOutputWithContext(ctx context.Context) HelmValuesOverrideFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmValuesOverrideFile) *HelmValuesOverrideFile {
		return &v
	}).(HelmValuesOverrideFilePtrOutput)
}

// YAML file from a git repository
func (o HelmValuesOverrideFileOutput) GitRepository() HelmValuesOverrideFileGitRepositoryPtrOutput {
	return o.ApplyT(func(v HelmValuesOverrideFile) *HelmValuesOverrideFileGitRepository { return v.GitRepository }).(HelmValuesOverrideFileGitRepositoryPtrOutput)
}

// Raw YAML files
func (o HelmValuesOverrideFileOutput) Raw() HelmValuesOverrideFileRawMapOutput {
	return o.ApplyT(func(v HelmValuesOverrideFile) map[string]HelmValuesOverrideFileRaw { return v.Raw }).(HelmValuesOverrideFileRawMapOutput)
}

type HelmValuesOverrideFilePtrOutput struct{ *pulumi.OutputState }

func (HelmValuesOverrideFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmValuesOverrideFile)(nil)).Elem()
}

func (o HelmValuesOverrideFilePtrOutput) ToHelmValuesOverrideFilePtrOutput() HelmValuesOverrideFilePtrOutput {
	return o
}

func (o HelmValuesOverrideFilePtrOutput) ToHelmValuesOverrideFilePtrOutputWithContext(ctx context.Context) HelmValuesOverrideFilePtrOutput {
	return o
}

func (o HelmValuesOverrideFilePtrOutput) Elem() HelmValuesOverrideFileOutput {
	return o.ApplyT(func(v *HelmValuesOverrideFile) HelmValuesOverrideFile {
		if v != nil {
			return *v
		}
		var ret HelmValuesOverrideFile
		return ret
	}).(HelmValuesOverrideFileOutput)
}

// YAML file from a git repository
func (o HelmValuesOverrideFilePtrOutput) GitRepository() HelmValuesOverrideFileGitRepositoryPtrOutput {
	return o.ApplyT(func(v *HelmValuesOverrideFile) *HelmValuesOverrideFileGitRepository {
		if v == nil {
			return nil
		}
		return v.GitRepository
	}).(HelmValuesOverrideFileGitRepositoryPtrOutput)
}

// Raw YAML files
func (o HelmValuesOverrideFilePtrOutput) Raw() HelmValuesOverrideFileRawMapOutput {
	return o.ApplyT(func(v *HelmValuesOverrideFile) map[string]HelmValuesOverrideFileRaw {
		if v == nil {
			return nil
		}
		return v.Raw
	}).(HelmValuesOverrideFileRawMapOutput)
}

type HelmValuesOverrideFileGitRepository struct {
	// YAML file git repository branch
	Branch string `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId *string `pulumi:"gitTokenId"`
	// YAML files git repository paths
	Paths []string `pulumi:"paths"`
	// YAML file git repository URL
	Url string `pulumi:"url"`
}

// HelmValuesOverrideFileGitRepositoryInput is an input type that accepts HelmValuesOverrideFileGitRepositoryArgs and HelmValuesOverrideFileGitRepositoryOutput values.
// You can construct a concrete instance of `HelmValuesOverrideFileGitRepositoryInput` via:
//
//	HelmValuesOverrideFileGitRepositoryArgs{...}
type HelmValuesOverrideFileGitRepositoryInput interface {
	pulumi.Input

	ToHelmValuesOverrideFileGitRepositoryOutput() HelmValuesOverrideFileGitRepositoryOutput
	ToHelmValuesOverrideFileGitRepositoryOutputWithContext(context.Context) HelmValuesOverrideFileGitRepositoryOutput
}

type HelmValuesOverrideFileGitRepositoryArgs struct {
	// YAML file git repository branch
	Branch pulumi.StringInput `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId pulumi.StringPtrInput `pulumi:"gitTokenId"`
	// YAML files git repository paths
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// YAML file git repository URL
	Url pulumi.StringInput `pulumi:"url"`
}

func (HelmValuesOverrideFileGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmValuesOverrideFileGitRepository)(nil)).Elem()
}

func (i HelmValuesOverrideFileGitRepositoryArgs) ToHelmValuesOverrideFileGitRepositoryOutput() HelmValuesOverrideFileGitRepositoryOutput {
	return i.ToHelmValuesOverrideFileGitRepositoryOutputWithContext(context.Background())
}

func (i HelmValuesOverrideFileGitRepositoryArgs) ToHelmValuesOverrideFileGitRepositoryOutputWithContext(ctx context.Context) HelmValuesOverrideFileGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideFileGitRepositoryOutput)
}

func (i HelmValuesOverrideFileGitRepositoryArgs) ToHelmValuesOverrideFileGitRepositoryPtrOutput() HelmValuesOverrideFileGitRepositoryPtrOutput {
	return i.ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(context.Background())
}

func (i HelmValuesOverrideFileGitRepositoryArgs) ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(ctx context.Context) HelmValuesOverrideFileGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideFileGitRepositoryOutput).ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(ctx)
}

// HelmValuesOverrideFileGitRepositoryPtrInput is an input type that accepts HelmValuesOverrideFileGitRepositoryArgs, HelmValuesOverrideFileGitRepositoryPtr and HelmValuesOverrideFileGitRepositoryPtrOutput values.
// You can construct a concrete instance of `HelmValuesOverrideFileGitRepositoryPtrInput` via:
//
//	        HelmValuesOverrideFileGitRepositoryArgs{...}
//
//	or:
//
//	        nil
type HelmValuesOverrideFileGitRepositoryPtrInput interface {
	pulumi.Input

	ToHelmValuesOverrideFileGitRepositoryPtrOutput() HelmValuesOverrideFileGitRepositoryPtrOutput
	ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(context.Context) HelmValuesOverrideFileGitRepositoryPtrOutput
}

type helmValuesOverrideFileGitRepositoryPtrType HelmValuesOverrideFileGitRepositoryArgs

func HelmValuesOverrideFileGitRepositoryPtr(v *HelmValuesOverrideFileGitRepositoryArgs) HelmValuesOverrideFileGitRepositoryPtrInput {
	return (*helmValuesOverrideFileGitRepositoryPtrType)(v)
}

func (*helmValuesOverrideFileGitRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmValuesOverrideFileGitRepository)(nil)).Elem()
}

func (i *helmValuesOverrideFileGitRepositoryPtrType) ToHelmValuesOverrideFileGitRepositoryPtrOutput() HelmValuesOverrideFileGitRepositoryPtrOutput {
	return i.ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(context.Background())
}

func (i *helmValuesOverrideFileGitRepositoryPtrType) ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(ctx context.Context) HelmValuesOverrideFileGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideFileGitRepositoryPtrOutput)
}

type HelmValuesOverrideFileGitRepositoryOutput struct{ *pulumi.OutputState }

func (HelmValuesOverrideFileGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmValuesOverrideFileGitRepository)(nil)).Elem()
}

func (o HelmValuesOverrideFileGitRepositoryOutput) ToHelmValuesOverrideFileGitRepositoryOutput() HelmValuesOverrideFileGitRepositoryOutput {
	return o
}

func (o HelmValuesOverrideFileGitRepositoryOutput) ToHelmValuesOverrideFileGitRepositoryOutputWithContext(ctx context.Context) HelmValuesOverrideFileGitRepositoryOutput {
	return o
}

func (o HelmValuesOverrideFileGitRepositoryOutput) ToHelmValuesOverrideFileGitRepositoryPtrOutput() HelmValuesOverrideFileGitRepositoryPtrOutput {
	return o.ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(context.Background())
}

func (o HelmValuesOverrideFileGitRepositoryOutput) ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(ctx context.Context) HelmValuesOverrideFileGitRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmValuesOverrideFileGitRepository) *HelmValuesOverrideFileGitRepository {
		return &v
	}).(HelmValuesOverrideFileGitRepositoryPtrOutput)
}

// YAML file git repository branch
func (o HelmValuesOverrideFileGitRepositoryOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v HelmValuesOverrideFileGitRepository) string { return v.Branch }).(pulumi.StringOutput)
}

// The git token ID to be used
func (o HelmValuesOverrideFileGitRepositoryOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmValuesOverrideFileGitRepository) *string { return v.GitTokenId }).(pulumi.StringPtrOutput)
}

// YAML files git repository paths
func (o HelmValuesOverrideFileGitRepositoryOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HelmValuesOverrideFileGitRepository) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// YAML file git repository URL
func (o HelmValuesOverrideFileGitRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v HelmValuesOverrideFileGitRepository) string { return v.Url }).(pulumi.StringOutput)
}

type HelmValuesOverrideFileGitRepositoryPtrOutput struct{ *pulumi.OutputState }

func (HelmValuesOverrideFileGitRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmValuesOverrideFileGitRepository)(nil)).Elem()
}

func (o HelmValuesOverrideFileGitRepositoryPtrOutput) ToHelmValuesOverrideFileGitRepositoryPtrOutput() HelmValuesOverrideFileGitRepositoryPtrOutput {
	return o
}

func (o HelmValuesOverrideFileGitRepositoryPtrOutput) ToHelmValuesOverrideFileGitRepositoryPtrOutputWithContext(ctx context.Context) HelmValuesOverrideFileGitRepositoryPtrOutput {
	return o
}

func (o HelmValuesOverrideFileGitRepositoryPtrOutput) Elem() HelmValuesOverrideFileGitRepositoryOutput {
	return o.ApplyT(func(v *HelmValuesOverrideFileGitRepository) HelmValuesOverrideFileGitRepository {
		if v != nil {
			return *v
		}
		var ret HelmValuesOverrideFileGitRepository
		return ret
	}).(HelmValuesOverrideFileGitRepositoryOutput)
}

// YAML file git repository branch
func (o HelmValuesOverrideFileGitRepositoryPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmValuesOverrideFileGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// The git token ID to be used
func (o HelmValuesOverrideFileGitRepositoryPtrOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmValuesOverrideFileGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.GitTokenId
	}).(pulumi.StringPtrOutput)
}

// YAML files git repository paths
func (o HelmValuesOverrideFileGitRepositoryPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HelmValuesOverrideFileGitRepository) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// YAML file git repository URL
func (o HelmValuesOverrideFileGitRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmValuesOverrideFileGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type HelmValuesOverrideFileRaw struct {
	// content of the file
	Content string `pulumi:"content"`
}

// HelmValuesOverrideFileRawInput is an input type that accepts HelmValuesOverrideFileRawArgs and HelmValuesOverrideFileRawOutput values.
// You can construct a concrete instance of `HelmValuesOverrideFileRawInput` via:
//
//	HelmValuesOverrideFileRawArgs{...}
type HelmValuesOverrideFileRawInput interface {
	pulumi.Input

	ToHelmValuesOverrideFileRawOutput() HelmValuesOverrideFileRawOutput
	ToHelmValuesOverrideFileRawOutputWithContext(context.Context) HelmValuesOverrideFileRawOutput
}

type HelmValuesOverrideFileRawArgs struct {
	// content of the file
	Content pulumi.StringInput `pulumi:"content"`
}

func (HelmValuesOverrideFileRawArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmValuesOverrideFileRaw)(nil)).Elem()
}

func (i HelmValuesOverrideFileRawArgs) ToHelmValuesOverrideFileRawOutput() HelmValuesOverrideFileRawOutput {
	return i.ToHelmValuesOverrideFileRawOutputWithContext(context.Background())
}

func (i HelmValuesOverrideFileRawArgs) ToHelmValuesOverrideFileRawOutputWithContext(ctx context.Context) HelmValuesOverrideFileRawOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideFileRawOutput)
}

// HelmValuesOverrideFileRawMapInput is an input type that accepts HelmValuesOverrideFileRawMap and HelmValuesOverrideFileRawMapOutput values.
// You can construct a concrete instance of `HelmValuesOverrideFileRawMapInput` via:
//
//	HelmValuesOverrideFileRawMap{ "key": HelmValuesOverrideFileRawArgs{...} }
type HelmValuesOverrideFileRawMapInput interface {
	pulumi.Input

	ToHelmValuesOverrideFileRawMapOutput() HelmValuesOverrideFileRawMapOutput
	ToHelmValuesOverrideFileRawMapOutputWithContext(context.Context) HelmValuesOverrideFileRawMapOutput
}

type HelmValuesOverrideFileRawMap map[string]HelmValuesOverrideFileRawInput

func (HelmValuesOverrideFileRawMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]HelmValuesOverrideFileRaw)(nil)).Elem()
}

func (i HelmValuesOverrideFileRawMap) ToHelmValuesOverrideFileRawMapOutput() HelmValuesOverrideFileRawMapOutput {
	return i.ToHelmValuesOverrideFileRawMapOutputWithContext(context.Background())
}

func (i HelmValuesOverrideFileRawMap) ToHelmValuesOverrideFileRawMapOutputWithContext(ctx context.Context) HelmValuesOverrideFileRawMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmValuesOverrideFileRawMapOutput)
}

type HelmValuesOverrideFileRawOutput struct{ *pulumi.OutputState }

func (HelmValuesOverrideFileRawOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmValuesOverrideFileRaw)(nil)).Elem()
}

func (o HelmValuesOverrideFileRawOutput) ToHelmValuesOverrideFileRawOutput() HelmValuesOverrideFileRawOutput {
	return o
}

func (o HelmValuesOverrideFileRawOutput) ToHelmValuesOverrideFileRawOutputWithContext(ctx context.Context) HelmValuesOverrideFileRawOutput {
	return o
}

// content of the file
func (o HelmValuesOverrideFileRawOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v HelmValuesOverrideFileRaw) string { return v.Content }).(pulumi.StringOutput)
}

type HelmValuesOverrideFileRawMapOutput struct{ *pulumi.OutputState }

func (HelmValuesOverrideFileRawMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]HelmValuesOverrideFileRaw)(nil)).Elem()
}

func (o HelmValuesOverrideFileRawMapOutput) ToHelmValuesOverrideFileRawMapOutput() HelmValuesOverrideFileRawMapOutput {
	return o
}

func (o HelmValuesOverrideFileRawMapOutput) ToHelmValuesOverrideFileRawMapOutputWithContext(ctx context.Context) HelmValuesOverrideFileRawMapOutput {
	return o
}

func (o HelmValuesOverrideFileRawMapOutput) MapIndex(k pulumi.StringInput) HelmValuesOverrideFileRawOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) HelmValuesOverrideFileRaw {
		return vs[0].(map[string]HelmValuesOverrideFileRaw)[vs[1].(string)]
	}).(HelmValuesOverrideFileRawOutput)
}

type JobBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key *string `pulumi:"key"`
	// Value of the environment variable.
	Value *string `pulumi:"value"`
}

// JobBuiltInEnvironmentVariableInput is an input type that accepts JobBuiltInEnvironmentVariableArgs and JobBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `JobBuiltInEnvironmentVariableInput` via:
//
//	JobBuiltInEnvironmentVariableArgs{...}
type JobBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToJobBuiltInEnvironmentVariableOutput() JobBuiltInEnvironmentVariableOutput
	ToJobBuiltInEnvironmentVariableOutputWithContext(context.Context) JobBuiltInEnvironmentVariableOutput
}

type JobBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (JobBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i JobBuiltInEnvironmentVariableArgs) ToJobBuiltInEnvironmentVariableOutput() JobBuiltInEnvironmentVariableOutput {
	return i.ToJobBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i JobBuiltInEnvironmentVariableArgs) ToJobBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) JobBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobBuiltInEnvironmentVariableOutput)
}

// JobBuiltInEnvironmentVariableArrayInput is an input type that accepts JobBuiltInEnvironmentVariableArray and JobBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `JobBuiltInEnvironmentVariableArrayInput` via:
//
//	JobBuiltInEnvironmentVariableArray{ JobBuiltInEnvironmentVariableArgs{...} }
type JobBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToJobBuiltInEnvironmentVariableArrayOutput() JobBuiltInEnvironmentVariableArrayOutput
	ToJobBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) JobBuiltInEnvironmentVariableArrayOutput
}

type JobBuiltInEnvironmentVariableArray []JobBuiltInEnvironmentVariableInput

func (JobBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i JobBuiltInEnvironmentVariableArray) ToJobBuiltInEnvironmentVariableArrayOutput() JobBuiltInEnvironmentVariableArrayOutput {
	return i.ToJobBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i JobBuiltInEnvironmentVariableArray) ToJobBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) JobBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobBuiltInEnvironmentVariableArrayOutput)
}

type JobBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (JobBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o JobBuiltInEnvironmentVariableOutput) ToJobBuiltInEnvironmentVariableOutput() JobBuiltInEnvironmentVariableOutput {
	return o
}

func (o JobBuiltInEnvironmentVariableOutput) ToJobBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) JobBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o JobBuiltInEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobBuiltInEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o JobBuiltInEnvironmentVariableOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobBuiltInEnvironmentVariable) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value of the environment variable.
func (o JobBuiltInEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobBuiltInEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type JobBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (JobBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o JobBuiltInEnvironmentVariableArrayOutput) ToJobBuiltInEnvironmentVariableArrayOutput() JobBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o JobBuiltInEnvironmentVariableArrayOutput) ToJobBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) JobBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o JobBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) JobBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobBuiltInEnvironmentVariable {
		return vs[0].([]JobBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(JobBuiltInEnvironmentVariableOutput)
}

type JobDeploymentRestriction struct {
	// Id of the deployment restriction
	Id *string `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode string `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type string `pulumi:"type"`
	// Value of the deployment restriction
	Value string `pulumi:"value"`
}

// JobDeploymentRestrictionInput is an input type that accepts JobDeploymentRestrictionArgs and JobDeploymentRestrictionOutput values.
// You can construct a concrete instance of `JobDeploymentRestrictionInput` via:
//
//	JobDeploymentRestrictionArgs{...}
type JobDeploymentRestrictionInput interface {
	pulumi.Input

	ToJobDeploymentRestrictionOutput() JobDeploymentRestrictionOutput
	ToJobDeploymentRestrictionOutputWithContext(context.Context) JobDeploymentRestrictionOutput
}

type JobDeploymentRestrictionArgs struct {
	// Id of the deployment restriction
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode pulumi.StringInput `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the deployment restriction
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobDeploymentRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeploymentRestriction)(nil)).Elem()
}

func (i JobDeploymentRestrictionArgs) ToJobDeploymentRestrictionOutput() JobDeploymentRestrictionOutput {
	return i.ToJobDeploymentRestrictionOutputWithContext(context.Background())
}

func (i JobDeploymentRestrictionArgs) ToJobDeploymentRestrictionOutputWithContext(ctx context.Context) JobDeploymentRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeploymentRestrictionOutput)
}

// JobDeploymentRestrictionArrayInput is an input type that accepts JobDeploymentRestrictionArray and JobDeploymentRestrictionArrayOutput values.
// You can construct a concrete instance of `JobDeploymentRestrictionArrayInput` via:
//
//	JobDeploymentRestrictionArray{ JobDeploymentRestrictionArgs{...} }
type JobDeploymentRestrictionArrayInput interface {
	pulumi.Input

	ToJobDeploymentRestrictionArrayOutput() JobDeploymentRestrictionArrayOutput
	ToJobDeploymentRestrictionArrayOutputWithContext(context.Context) JobDeploymentRestrictionArrayOutput
}

type JobDeploymentRestrictionArray []JobDeploymentRestrictionInput

func (JobDeploymentRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDeploymentRestriction)(nil)).Elem()
}

func (i JobDeploymentRestrictionArray) ToJobDeploymentRestrictionArrayOutput() JobDeploymentRestrictionArrayOutput {
	return i.ToJobDeploymentRestrictionArrayOutputWithContext(context.Background())
}

func (i JobDeploymentRestrictionArray) ToJobDeploymentRestrictionArrayOutputWithContext(ctx context.Context) JobDeploymentRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDeploymentRestrictionArrayOutput)
}

type JobDeploymentRestrictionOutput struct{ *pulumi.OutputState }

func (JobDeploymentRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDeploymentRestriction)(nil)).Elem()
}

func (o JobDeploymentRestrictionOutput) ToJobDeploymentRestrictionOutput() JobDeploymentRestrictionOutput {
	return o
}

func (o JobDeploymentRestrictionOutput) ToJobDeploymentRestrictionOutputWithContext(ctx context.Context) JobDeploymentRestrictionOutput {
	return o
}

// Id of the deployment restriction
func (o JobDeploymentRestrictionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDeploymentRestriction) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Can be EXCLUDE or MATCH
func (o JobDeploymentRestrictionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v JobDeploymentRestriction) string { return v.Mode }).(pulumi.StringOutput)
}

// Currently, only PATH is accepted
func (o JobDeploymentRestrictionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JobDeploymentRestriction) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the deployment restriction
func (o JobDeploymentRestrictionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobDeploymentRestriction) string { return v.Value }).(pulumi.StringOutput)
}

type JobDeploymentRestrictionArrayOutput struct{ *pulumi.OutputState }

func (JobDeploymentRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDeploymentRestriction)(nil)).Elem()
}

func (o JobDeploymentRestrictionArrayOutput) ToJobDeploymentRestrictionArrayOutput() JobDeploymentRestrictionArrayOutput {
	return o
}

func (o JobDeploymentRestrictionArrayOutput) ToJobDeploymentRestrictionArrayOutputWithContext(ctx context.Context) JobDeploymentRestrictionArrayOutput {
	return o
}

func (o JobDeploymentRestrictionArrayOutput) Index(i pulumi.IntInput) JobDeploymentRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobDeploymentRestriction {
		return vs[0].([]JobDeploymentRestriction)[vs[1].(int)]
	}).(JobDeploymentRestrictionOutput)
}

type JobEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// JobEnvironmentVariableInput is an input type that accepts JobEnvironmentVariableArgs and JobEnvironmentVariableOutput values.
// You can construct a concrete instance of `JobEnvironmentVariableInput` via:
//
//	JobEnvironmentVariableArgs{...}
type JobEnvironmentVariableInput interface {
	pulumi.Input

	ToJobEnvironmentVariableOutput() JobEnvironmentVariableOutput
	ToJobEnvironmentVariableOutputWithContext(context.Context) JobEnvironmentVariableOutput
}

type JobEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEnvironmentVariable)(nil)).Elem()
}

func (i JobEnvironmentVariableArgs) ToJobEnvironmentVariableOutput() JobEnvironmentVariableOutput {
	return i.ToJobEnvironmentVariableOutputWithContext(context.Background())
}

func (i JobEnvironmentVariableArgs) ToJobEnvironmentVariableOutputWithContext(ctx context.Context) JobEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobEnvironmentVariableOutput)
}

// JobEnvironmentVariableArrayInput is an input type that accepts JobEnvironmentVariableArray and JobEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `JobEnvironmentVariableArrayInput` via:
//
//	JobEnvironmentVariableArray{ JobEnvironmentVariableArgs{...} }
type JobEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToJobEnvironmentVariableArrayOutput() JobEnvironmentVariableArrayOutput
	ToJobEnvironmentVariableArrayOutputWithContext(context.Context) JobEnvironmentVariableArrayOutput
}

type JobEnvironmentVariableArray []JobEnvironmentVariableInput

func (JobEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobEnvironmentVariable)(nil)).Elem()
}

func (i JobEnvironmentVariableArray) ToJobEnvironmentVariableArrayOutput() JobEnvironmentVariableArrayOutput {
	return i.ToJobEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i JobEnvironmentVariableArray) ToJobEnvironmentVariableArrayOutputWithContext(ctx context.Context) JobEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobEnvironmentVariableArrayOutput)
}

type JobEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (JobEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEnvironmentVariable)(nil)).Elem()
}

func (o JobEnvironmentVariableOutput) ToJobEnvironmentVariableOutput() JobEnvironmentVariableOutput {
	return o
}

func (o JobEnvironmentVariableOutput) ToJobEnvironmentVariableOutputWithContext(ctx context.Context) JobEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o JobEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o JobEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v JobEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o JobEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type JobEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (JobEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobEnvironmentVariable)(nil)).Elem()
}

func (o JobEnvironmentVariableArrayOutput) ToJobEnvironmentVariableArrayOutput() JobEnvironmentVariableArrayOutput {
	return o
}

func (o JobEnvironmentVariableArrayOutput) ToJobEnvironmentVariableArrayOutputWithContext(ctx context.Context) JobEnvironmentVariableArrayOutput {
	return o
}

func (o JobEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) JobEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobEnvironmentVariable {
		return vs[0].([]JobEnvironmentVariable)[vs[1].(int)]
	}).(JobEnvironmentVariableOutput)
}

type JobEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id *string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// JobEnvironmentVariableAliasInput is an input type that accepts JobEnvironmentVariableAliasArgs and JobEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `JobEnvironmentVariableAliasInput` via:
//
//	JobEnvironmentVariableAliasArgs{...}
type JobEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToJobEnvironmentVariableAliasOutput() JobEnvironmentVariableAliasOutput
	ToJobEnvironmentVariableAliasOutputWithContext(context.Context) JobEnvironmentVariableAliasOutput
}

type JobEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEnvironmentVariableAlias)(nil)).Elem()
}

func (i JobEnvironmentVariableAliasArgs) ToJobEnvironmentVariableAliasOutput() JobEnvironmentVariableAliasOutput {
	return i.ToJobEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i JobEnvironmentVariableAliasArgs) ToJobEnvironmentVariableAliasOutputWithContext(ctx context.Context) JobEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobEnvironmentVariableAliasOutput)
}

// JobEnvironmentVariableAliasArrayInput is an input type that accepts JobEnvironmentVariableAliasArray and JobEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `JobEnvironmentVariableAliasArrayInput` via:
//
//	JobEnvironmentVariableAliasArray{ JobEnvironmentVariableAliasArgs{...} }
type JobEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToJobEnvironmentVariableAliasArrayOutput() JobEnvironmentVariableAliasArrayOutput
	ToJobEnvironmentVariableAliasArrayOutputWithContext(context.Context) JobEnvironmentVariableAliasArrayOutput
}

type JobEnvironmentVariableAliasArray []JobEnvironmentVariableAliasInput

func (JobEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobEnvironmentVariableAlias)(nil)).Elem()
}

func (i JobEnvironmentVariableAliasArray) ToJobEnvironmentVariableAliasArrayOutput() JobEnvironmentVariableAliasArrayOutput {
	return i.ToJobEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i JobEnvironmentVariableAliasArray) ToJobEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) JobEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobEnvironmentVariableAliasArrayOutput)
}

type JobEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (JobEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEnvironmentVariableAlias)(nil)).Elem()
}

func (o JobEnvironmentVariableAliasOutput) ToJobEnvironmentVariableAliasOutput() JobEnvironmentVariableAliasOutput {
	return o
}

func (o JobEnvironmentVariableAliasOutput) ToJobEnvironmentVariableAliasOutputWithContext(ctx context.Context) JobEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o JobEnvironmentVariableAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobEnvironmentVariableAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable alias.
func (o JobEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v JobEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o JobEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type JobEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (JobEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobEnvironmentVariableAlias)(nil)).Elem()
}

func (o JobEnvironmentVariableAliasArrayOutput) ToJobEnvironmentVariableAliasArrayOutput() JobEnvironmentVariableAliasArrayOutput {
	return o
}

func (o JobEnvironmentVariableAliasArrayOutput) ToJobEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) JobEnvironmentVariableAliasArrayOutput {
	return o
}

func (o JobEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) JobEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobEnvironmentVariableAlias {
		return vs[0].([]JobEnvironmentVariableAlias)[vs[1].(int)]
	}).(JobEnvironmentVariableAliasOutput)
}

type JobEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id *string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// JobEnvironmentVariableOverrideInput is an input type that accepts JobEnvironmentVariableOverrideArgs and JobEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `JobEnvironmentVariableOverrideInput` via:
//
//	JobEnvironmentVariableOverrideArgs{...}
type JobEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToJobEnvironmentVariableOverrideOutput() JobEnvironmentVariableOverrideOutput
	ToJobEnvironmentVariableOverrideOutputWithContext(context.Context) JobEnvironmentVariableOverrideOutput
}

type JobEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEnvironmentVariableOverride)(nil)).Elem()
}

func (i JobEnvironmentVariableOverrideArgs) ToJobEnvironmentVariableOverrideOutput() JobEnvironmentVariableOverrideOutput {
	return i.ToJobEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i JobEnvironmentVariableOverrideArgs) ToJobEnvironmentVariableOverrideOutputWithContext(ctx context.Context) JobEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobEnvironmentVariableOverrideOutput)
}

// JobEnvironmentVariableOverrideArrayInput is an input type that accepts JobEnvironmentVariableOverrideArray and JobEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `JobEnvironmentVariableOverrideArrayInput` via:
//
//	JobEnvironmentVariableOverrideArray{ JobEnvironmentVariableOverrideArgs{...} }
type JobEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToJobEnvironmentVariableOverrideArrayOutput() JobEnvironmentVariableOverrideArrayOutput
	ToJobEnvironmentVariableOverrideArrayOutputWithContext(context.Context) JobEnvironmentVariableOverrideArrayOutput
}

type JobEnvironmentVariableOverrideArray []JobEnvironmentVariableOverrideInput

func (JobEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobEnvironmentVariableOverride)(nil)).Elem()
}

func (i JobEnvironmentVariableOverrideArray) ToJobEnvironmentVariableOverrideArrayOutput() JobEnvironmentVariableOverrideArrayOutput {
	return i.ToJobEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i JobEnvironmentVariableOverrideArray) ToJobEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) JobEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobEnvironmentVariableOverrideArrayOutput)
}

type JobEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (JobEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEnvironmentVariableOverride)(nil)).Elem()
}

func (o JobEnvironmentVariableOverrideOutput) ToJobEnvironmentVariableOverrideOutput() JobEnvironmentVariableOverrideOutput {
	return o
}

func (o JobEnvironmentVariableOverrideOutput) ToJobEnvironmentVariableOverrideOutputWithContext(ctx context.Context) JobEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o JobEnvironmentVariableOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobEnvironmentVariableOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable override.
func (o JobEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v JobEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o JobEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type JobEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (JobEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobEnvironmentVariableOverride)(nil)).Elem()
}

func (o JobEnvironmentVariableOverrideArrayOutput) ToJobEnvironmentVariableOverrideArrayOutput() JobEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o JobEnvironmentVariableOverrideArrayOutput) ToJobEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) JobEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o JobEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) JobEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobEnvironmentVariableOverride {
		return vs[0].([]JobEnvironmentVariableOverride)[vs[1].(int)]
	}).(JobEnvironmentVariableOverrideOutput)
}

type JobHealthchecks struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe *JobHealthchecksLivenessProbe `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe *JobHealthchecksReadinessProbe `pulumi:"readinessProbe"`
}

// JobHealthchecksInput is an input type that accepts JobHealthchecksArgs and JobHealthchecksOutput values.
// You can construct a concrete instance of `JobHealthchecksInput` via:
//
//	JobHealthchecksArgs{...}
type JobHealthchecksInput interface {
	pulumi.Input

	ToJobHealthchecksOutput() JobHealthchecksOutput
	ToJobHealthchecksOutputWithContext(context.Context) JobHealthchecksOutput
}

type JobHealthchecksArgs struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe JobHealthchecksLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe JobHealthchecksReadinessProbePtrInput `pulumi:"readinessProbe"`
}

func (JobHealthchecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecks)(nil)).Elem()
}

func (i JobHealthchecksArgs) ToJobHealthchecksOutput() JobHealthchecksOutput {
	return i.ToJobHealthchecksOutputWithContext(context.Background())
}

func (i JobHealthchecksArgs) ToJobHealthchecksOutputWithContext(ctx context.Context) JobHealthchecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksOutput)
}

func (i JobHealthchecksArgs) ToJobHealthchecksPtrOutput() JobHealthchecksPtrOutput {
	return i.ToJobHealthchecksPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksArgs) ToJobHealthchecksPtrOutputWithContext(ctx context.Context) JobHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksOutput).ToJobHealthchecksPtrOutputWithContext(ctx)
}

// JobHealthchecksPtrInput is an input type that accepts JobHealthchecksArgs, JobHealthchecksPtr and JobHealthchecksPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksPtrInput` via:
//
//	        JobHealthchecksArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksPtrInput interface {
	pulumi.Input

	ToJobHealthchecksPtrOutput() JobHealthchecksPtrOutput
	ToJobHealthchecksPtrOutputWithContext(context.Context) JobHealthchecksPtrOutput
}

type jobHealthchecksPtrType JobHealthchecksArgs

func JobHealthchecksPtr(v *JobHealthchecksArgs) JobHealthchecksPtrInput {
	return (*jobHealthchecksPtrType)(v)
}

func (*jobHealthchecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecks)(nil)).Elem()
}

func (i *jobHealthchecksPtrType) ToJobHealthchecksPtrOutput() JobHealthchecksPtrOutput {
	return i.ToJobHealthchecksPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksPtrType) ToJobHealthchecksPtrOutputWithContext(ctx context.Context) JobHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksPtrOutput)
}

type JobHealthchecksOutput struct{ *pulumi.OutputState }

func (JobHealthchecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecks)(nil)).Elem()
}

func (o JobHealthchecksOutput) ToJobHealthchecksOutput() JobHealthchecksOutput {
	return o
}

func (o JobHealthchecksOutput) ToJobHealthchecksOutputWithContext(ctx context.Context) JobHealthchecksOutput {
	return o
}

func (o JobHealthchecksOutput) ToJobHealthchecksPtrOutput() JobHealthchecksPtrOutput {
	return o.ToJobHealthchecksPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksOutput) ToJobHealthchecksPtrOutputWithContext(ctx context.Context) JobHealthchecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecks) *JobHealthchecks {
		return &v
	}).(JobHealthchecksPtrOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o JobHealthchecksOutput) LivenessProbe() JobHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v JobHealthchecks) *JobHealthchecksLivenessProbe { return v.LivenessProbe }).(JobHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o JobHealthchecksOutput) ReadinessProbe() JobHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v JobHealthchecks) *JobHealthchecksReadinessProbe { return v.ReadinessProbe }).(JobHealthchecksReadinessProbePtrOutput)
}

type JobHealthchecksPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecks)(nil)).Elem()
}

func (o JobHealthchecksPtrOutput) ToJobHealthchecksPtrOutput() JobHealthchecksPtrOutput {
	return o
}

func (o JobHealthchecksPtrOutput) ToJobHealthchecksPtrOutputWithContext(ctx context.Context) JobHealthchecksPtrOutput {
	return o
}

func (o JobHealthchecksPtrOutput) Elem() JobHealthchecksOutput {
	return o.ApplyT(func(v *JobHealthchecks) JobHealthchecks {
		if v != nil {
			return *v
		}
		var ret JobHealthchecks
		return ret
	}).(JobHealthchecksOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o JobHealthchecksPtrOutput) LivenessProbe() JobHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v *JobHealthchecks) *JobHealthchecksLivenessProbe {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(JobHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o JobHealthchecksPtrOutput) ReadinessProbe() JobHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v *JobHealthchecks) *JobHealthchecksReadinessProbe {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(JobHealthchecksReadinessProbePtrOutput)
}

type JobHealthchecksLivenessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type JobHealthchecksLivenessProbeType `pulumi:"type"`
}

// JobHealthchecksLivenessProbeInput is an input type that accepts JobHealthchecksLivenessProbeArgs and JobHealthchecksLivenessProbeOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeInput` via:
//
//	JobHealthchecksLivenessProbeArgs{...}
type JobHealthchecksLivenessProbeInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeOutput() JobHealthchecksLivenessProbeOutput
	ToJobHealthchecksLivenessProbeOutputWithContext(context.Context) JobHealthchecksLivenessProbeOutput
}

type JobHealthchecksLivenessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type JobHealthchecksLivenessProbeTypeInput `pulumi:"type"`
}

func (JobHealthchecksLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbe)(nil)).Elem()
}

func (i JobHealthchecksLivenessProbeArgs) ToJobHealthchecksLivenessProbeOutput() JobHealthchecksLivenessProbeOutput {
	return i.ToJobHealthchecksLivenessProbeOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeArgs) ToJobHealthchecksLivenessProbeOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeOutput)
}

func (i JobHealthchecksLivenessProbeArgs) ToJobHealthchecksLivenessProbePtrOutput() JobHealthchecksLivenessProbePtrOutput {
	return i.ToJobHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeArgs) ToJobHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeOutput).ToJobHealthchecksLivenessProbePtrOutputWithContext(ctx)
}

// JobHealthchecksLivenessProbePtrInput is an input type that accepts JobHealthchecksLivenessProbeArgs, JobHealthchecksLivenessProbePtr and JobHealthchecksLivenessProbePtrOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbePtrInput` via:
//
//	        JobHealthchecksLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksLivenessProbePtrInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbePtrOutput() JobHealthchecksLivenessProbePtrOutput
	ToJobHealthchecksLivenessProbePtrOutputWithContext(context.Context) JobHealthchecksLivenessProbePtrOutput
}

type jobHealthchecksLivenessProbePtrType JobHealthchecksLivenessProbeArgs

func JobHealthchecksLivenessProbePtr(v *JobHealthchecksLivenessProbeArgs) JobHealthchecksLivenessProbePtrInput {
	return (*jobHealthchecksLivenessProbePtrType)(v)
}

func (*jobHealthchecksLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbe)(nil)).Elem()
}

func (i *jobHealthchecksLivenessProbePtrType) ToJobHealthchecksLivenessProbePtrOutput() JobHealthchecksLivenessProbePtrOutput {
	return i.ToJobHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksLivenessProbePtrType) ToJobHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbePtrOutput)
}

type JobHealthchecksLivenessProbeOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbe)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeOutput) ToJobHealthchecksLivenessProbeOutput() JobHealthchecksLivenessProbeOutput {
	return o
}

func (o JobHealthchecksLivenessProbeOutput) ToJobHealthchecksLivenessProbeOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeOutput {
	return o
}

func (o JobHealthchecksLivenessProbeOutput) ToJobHealthchecksLivenessProbePtrOutput() JobHealthchecksLivenessProbePtrOutput {
	return o.ToJobHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (o JobHealthchecksLivenessProbeOutput) ToJobHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksLivenessProbe) *JobHealthchecksLivenessProbe {
		return &v
	}).(JobHealthchecksLivenessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o JobHealthchecksLivenessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o JobHealthchecksLivenessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o JobHealthchecksLivenessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o JobHealthchecksLivenessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o JobHealthchecksLivenessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o JobHealthchecksLivenessProbeOutput) Type() JobHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbe) JobHealthchecksLivenessProbeType { return v.Type }).(JobHealthchecksLivenessProbeTypeOutput)
}

type JobHealthchecksLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbe)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbePtrOutput) ToJobHealthchecksLivenessProbePtrOutput() JobHealthchecksLivenessProbePtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbePtrOutput) ToJobHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbePtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbePtrOutput) Elem() JobHealthchecksLivenessProbeOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbe) JobHealthchecksLivenessProbe {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksLivenessProbe
		return ret
	}).(JobHealthchecksLivenessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o JobHealthchecksLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o JobHealthchecksLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o JobHealthchecksLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o JobHealthchecksLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o JobHealthchecksLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o JobHealthchecksLivenessProbePtrOutput) Type() JobHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbe) *JobHealthchecksLivenessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(JobHealthchecksLivenessProbeTypePtrOutput)
}

type JobHealthchecksLivenessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *JobHealthchecksLivenessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *JobHealthchecksLivenessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *JobHealthchecksLivenessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *JobHealthchecksLivenessProbeTypeTcp `pulumi:"tcp"`
}

// JobHealthchecksLivenessProbeTypeInput is an input type that accepts JobHealthchecksLivenessProbeTypeArgs and JobHealthchecksLivenessProbeTypeOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeInput` via:
//
//	JobHealthchecksLivenessProbeTypeArgs{...}
type JobHealthchecksLivenessProbeTypeInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeOutput() JobHealthchecksLivenessProbeTypeOutput
	ToJobHealthchecksLivenessProbeTypeOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeOutput
}

type JobHealthchecksLivenessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec JobHealthchecksLivenessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc JobHealthchecksLivenessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http JobHealthchecksLivenessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp JobHealthchecksLivenessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (JobHealthchecksLivenessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i JobHealthchecksLivenessProbeTypeArgs) ToJobHealthchecksLivenessProbeTypeOutput() JobHealthchecksLivenessProbeTypeOutput {
	return i.ToJobHealthchecksLivenessProbeTypeOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeArgs) ToJobHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeOutput)
}

func (i JobHealthchecksLivenessProbeTypeArgs) ToJobHealthchecksLivenessProbeTypePtrOutput() JobHealthchecksLivenessProbeTypePtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeArgs) ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeOutput).ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx)
}

// JobHealthchecksLivenessProbeTypePtrInput is an input type that accepts JobHealthchecksLivenessProbeTypeArgs, JobHealthchecksLivenessProbeTypePtr and JobHealthchecksLivenessProbeTypePtrOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypePtrInput` via:
//
//	        JobHealthchecksLivenessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksLivenessProbeTypePtrInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypePtrOutput() JobHealthchecksLivenessProbeTypePtrOutput
	ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypePtrOutput
}

type jobHealthchecksLivenessProbeTypePtrType JobHealthchecksLivenessProbeTypeArgs

func JobHealthchecksLivenessProbeTypePtr(v *JobHealthchecksLivenessProbeTypeArgs) JobHealthchecksLivenessProbeTypePtrInput {
	return (*jobHealthchecksLivenessProbeTypePtrType)(v)
}

func (*jobHealthchecksLivenessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i *jobHealthchecksLivenessProbeTypePtrType) ToJobHealthchecksLivenessProbeTypePtrOutput() JobHealthchecksLivenessProbeTypePtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksLivenessProbeTypePtrType) ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypePtrOutput)
}

type JobHealthchecksLivenessProbeTypeOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeOutput) ToJobHealthchecksLivenessProbeTypeOutput() JobHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeOutput) ToJobHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeOutput) ToJobHealthchecksLivenessProbeTypePtrOutput() JobHealthchecksLivenessProbeTypePtrOutput {
	return o.ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (o JobHealthchecksLivenessProbeTypeOutput) ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeType {
		return &v
	}).(JobHealthchecksLivenessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o JobHealthchecksLivenessProbeTypeOutput) Exec() JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeTypeExec { return v.Exec }).(JobHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o JobHealthchecksLivenessProbeTypeOutput) Grpc() JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeTypeGrpc { return v.Grpc }).(JobHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o JobHealthchecksLivenessProbeTypeOutput) Http() JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeTypeHttp { return v.Http }).(JobHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o JobHealthchecksLivenessProbeTypeOutput) Tcp() JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeTypeTcp { return v.Tcp }).(JobHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type JobHealthchecksLivenessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypePtrOutput) ToJobHealthchecksLivenessProbeTypePtrOutput() JobHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypePtrOutput) ToJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypePtrOutput) Elem() JobHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeType) JobHealthchecksLivenessProbeType {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksLivenessProbeType
		return ret
	}).(JobHealthchecksLivenessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o JobHealthchecksLivenessProbeTypePtrOutput) Exec() JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(JobHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o JobHealthchecksLivenessProbeTypePtrOutput) Grpc() JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(JobHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o JobHealthchecksLivenessProbeTypePtrOutput) Http() JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(JobHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o JobHealthchecksLivenessProbeTypePtrOutput) Tcp() JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeType) *JobHealthchecksLivenessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(JobHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type JobHealthchecksLivenessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// JobHealthchecksLivenessProbeTypeExecInput is an input type that accepts JobHealthchecksLivenessProbeTypeExecArgs and JobHealthchecksLivenessProbeTypeExecOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeExecInput` via:
//
//	JobHealthchecksLivenessProbeTypeExecArgs{...}
type JobHealthchecksLivenessProbeTypeExecInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeExecOutput() JobHealthchecksLivenessProbeTypeExecOutput
	ToJobHealthchecksLivenessProbeTypeExecOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeExecOutput
}

type JobHealthchecksLivenessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (JobHealthchecksLivenessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i JobHealthchecksLivenessProbeTypeExecArgs) ToJobHealthchecksLivenessProbeTypeExecOutput() JobHealthchecksLivenessProbeTypeExecOutput {
	return i.ToJobHealthchecksLivenessProbeTypeExecOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeExecArgs) ToJobHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeExecOutput)
}

func (i JobHealthchecksLivenessProbeTypeExecArgs) ToJobHealthchecksLivenessProbeTypeExecPtrOutput() JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeExecArgs) ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeExecOutput).ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx)
}

// JobHealthchecksLivenessProbeTypeExecPtrInput is an input type that accepts JobHealthchecksLivenessProbeTypeExecArgs, JobHealthchecksLivenessProbeTypeExecPtr and JobHealthchecksLivenessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeExecPtrInput` via:
//
//	        JobHealthchecksLivenessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksLivenessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeExecPtrOutput() JobHealthchecksLivenessProbeTypeExecPtrOutput
	ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeExecPtrOutput
}

type jobHealthchecksLivenessProbeTypeExecPtrType JobHealthchecksLivenessProbeTypeExecArgs

func JobHealthchecksLivenessProbeTypeExecPtr(v *JobHealthchecksLivenessProbeTypeExecArgs) JobHealthchecksLivenessProbeTypeExecPtrInput {
	return (*jobHealthchecksLivenessProbeTypeExecPtrType)(v)
}

func (*jobHealthchecksLivenessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i *jobHealthchecksLivenessProbeTypeExecPtrType) ToJobHealthchecksLivenessProbeTypeExecPtrOutput() JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksLivenessProbeTypeExecPtrType) ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeExecPtrOutput)
}

type JobHealthchecksLivenessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeExecOutput) ToJobHealthchecksLivenessProbeTypeExecOutput() JobHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeExecOutput) ToJobHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeExecOutput) ToJobHealthchecksLivenessProbeTypeExecPtrOutput() JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksLivenessProbeTypeExecOutput) ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksLivenessProbeTypeExec) *JobHealthchecksLivenessProbeTypeExec {
		return &v
	}).(JobHealthchecksLivenessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o JobHealthchecksLivenessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type JobHealthchecksLivenessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeExecPtrOutput) ToJobHealthchecksLivenessProbeTypeExecPtrOutput() JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeExecPtrOutput) ToJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeExecPtrOutput) Elem() JobHealthchecksLivenessProbeTypeExecOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeExec) JobHealthchecksLivenessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksLivenessProbeTypeExec
		return ret
	}).(JobHealthchecksLivenessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o JobHealthchecksLivenessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type JobHealthchecksLivenessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// JobHealthchecksLivenessProbeTypeGrpcInput is an input type that accepts JobHealthchecksLivenessProbeTypeGrpcArgs and JobHealthchecksLivenessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeGrpcInput` via:
//
//	JobHealthchecksLivenessProbeTypeGrpcArgs{...}
type JobHealthchecksLivenessProbeTypeGrpcInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeGrpcOutput() JobHealthchecksLivenessProbeTypeGrpcOutput
	ToJobHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeGrpcOutput
}

type JobHealthchecksLivenessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (JobHealthchecksLivenessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i JobHealthchecksLivenessProbeTypeGrpcArgs) ToJobHealthchecksLivenessProbeTypeGrpcOutput() JobHealthchecksLivenessProbeTypeGrpcOutput {
	return i.ToJobHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeGrpcArgs) ToJobHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeGrpcOutput)
}

func (i JobHealthchecksLivenessProbeTypeGrpcArgs) ToJobHealthchecksLivenessProbeTypeGrpcPtrOutput() JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeGrpcArgs) ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeGrpcOutput).ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// JobHealthchecksLivenessProbeTypeGrpcPtrInput is an input type that accepts JobHealthchecksLivenessProbeTypeGrpcArgs, JobHealthchecksLivenessProbeTypeGrpcPtr and JobHealthchecksLivenessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeGrpcPtrInput` via:
//
//	        JobHealthchecksLivenessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksLivenessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeGrpcPtrOutput() JobHealthchecksLivenessProbeTypeGrpcPtrOutput
	ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeGrpcPtrOutput
}

type jobHealthchecksLivenessProbeTypeGrpcPtrType JobHealthchecksLivenessProbeTypeGrpcArgs

func JobHealthchecksLivenessProbeTypeGrpcPtr(v *JobHealthchecksLivenessProbeTypeGrpcArgs) JobHealthchecksLivenessProbeTypeGrpcPtrInput {
	return (*jobHealthchecksLivenessProbeTypeGrpcPtrType)(v)
}

func (*jobHealthchecksLivenessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i *jobHealthchecksLivenessProbeTypeGrpcPtrType) ToJobHealthchecksLivenessProbeTypeGrpcPtrOutput() JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksLivenessProbeTypeGrpcPtrType) ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

type JobHealthchecksLivenessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeGrpcOutput) ToJobHealthchecksLivenessProbeTypeGrpcOutput() JobHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeGrpcOutput) ToJobHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeGrpcOutput) ToJobHealthchecksLivenessProbeTypeGrpcPtrOutput() JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksLivenessProbeTypeGrpcOutput) ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksLivenessProbeTypeGrpc) *JobHealthchecksLivenessProbeTypeGrpc {
		return &v
	}).(JobHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksLivenessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o JobHealthchecksLivenessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type JobHealthchecksLivenessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeGrpcPtrOutput) ToJobHealthchecksLivenessProbeTypeGrpcPtrOutput() JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeGrpcPtrOutput) ToJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeGrpcPtrOutput) Elem() JobHealthchecksLivenessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeGrpc) JobHealthchecksLivenessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksLivenessProbeTypeGrpc
		return ret
	}).(JobHealthchecksLivenessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o JobHealthchecksLivenessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o JobHealthchecksLivenessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type JobHealthchecksLivenessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// JobHealthchecksLivenessProbeTypeHttpInput is an input type that accepts JobHealthchecksLivenessProbeTypeHttpArgs and JobHealthchecksLivenessProbeTypeHttpOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeHttpInput` via:
//
//	JobHealthchecksLivenessProbeTypeHttpArgs{...}
type JobHealthchecksLivenessProbeTypeHttpInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeHttpOutput() JobHealthchecksLivenessProbeTypeHttpOutput
	ToJobHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeHttpOutput
}

type JobHealthchecksLivenessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (JobHealthchecksLivenessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i JobHealthchecksLivenessProbeTypeHttpArgs) ToJobHealthchecksLivenessProbeTypeHttpOutput() JobHealthchecksLivenessProbeTypeHttpOutput {
	return i.ToJobHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeHttpArgs) ToJobHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeHttpOutput)
}

func (i JobHealthchecksLivenessProbeTypeHttpArgs) ToJobHealthchecksLivenessProbeTypeHttpPtrOutput() JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeHttpArgs) ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeHttpOutput).ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx)
}

// JobHealthchecksLivenessProbeTypeHttpPtrInput is an input type that accepts JobHealthchecksLivenessProbeTypeHttpArgs, JobHealthchecksLivenessProbeTypeHttpPtr and JobHealthchecksLivenessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeHttpPtrInput` via:
//
//	        JobHealthchecksLivenessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksLivenessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeHttpPtrOutput() JobHealthchecksLivenessProbeTypeHttpPtrOutput
	ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeHttpPtrOutput
}

type jobHealthchecksLivenessProbeTypeHttpPtrType JobHealthchecksLivenessProbeTypeHttpArgs

func JobHealthchecksLivenessProbeTypeHttpPtr(v *JobHealthchecksLivenessProbeTypeHttpArgs) JobHealthchecksLivenessProbeTypeHttpPtrInput {
	return (*jobHealthchecksLivenessProbeTypeHttpPtrType)(v)
}

func (*jobHealthchecksLivenessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i *jobHealthchecksLivenessProbeTypeHttpPtrType) ToJobHealthchecksLivenessProbeTypeHttpPtrOutput() JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksLivenessProbeTypeHttpPtrType) ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeHttpPtrOutput)
}

type JobHealthchecksLivenessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeHttpOutput) ToJobHealthchecksLivenessProbeTypeHttpOutput() JobHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeHttpOutput) ToJobHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeHttpOutput) ToJobHealthchecksLivenessProbeTypeHttpPtrOutput() JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksLivenessProbeTypeHttpOutput) ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksLivenessProbeTypeHttp) *JobHealthchecksLivenessProbeTypeHttp {
		return &v
	}).(JobHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o JobHealthchecksLivenessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksLivenessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o JobHealthchecksLivenessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type JobHealthchecksLivenessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeHttpPtrOutput) ToJobHealthchecksLivenessProbeTypeHttpPtrOutput() JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeHttpPtrOutput) ToJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeHttpPtrOutput) Elem() JobHealthchecksLivenessProbeTypeHttpOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeHttp) JobHealthchecksLivenessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksLivenessProbeTypeHttp
		return ret
	}).(JobHealthchecksLivenessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o JobHealthchecksLivenessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksLivenessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o JobHealthchecksLivenessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type JobHealthchecksLivenessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// JobHealthchecksLivenessProbeTypeTcpInput is an input type that accepts JobHealthchecksLivenessProbeTypeTcpArgs and JobHealthchecksLivenessProbeTypeTcpOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeTcpInput` via:
//
//	JobHealthchecksLivenessProbeTypeTcpArgs{...}
type JobHealthchecksLivenessProbeTypeTcpInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeTcpOutput() JobHealthchecksLivenessProbeTypeTcpOutput
	ToJobHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeTcpOutput
}

type JobHealthchecksLivenessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (JobHealthchecksLivenessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i JobHealthchecksLivenessProbeTypeTcpArgs) ToJobHealthchecksLivenessProbeTypeTcpOutput() JobHealthchecksLivenessProbeTypeTcpOutput {
	return i.ToJobHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeTcpArgs) ToJobHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeTcpOutput)
}

func (i JobHealthchecksLivenessProbeTypeTcpArgs) ToJobHealthchecksLivenessProbeTypeTcpPtrOutput() JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksLivenessProbeTypeTcpArgs) ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeTcpOutput).ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx)
}

// JobHealthchecksLivenessProbeTypeTcpPtrInput is an input type that accepts JobHealthchecksLivenessProbeTypeTcpArgs, JobHealthchecksLivenessProbeTypeTcpPtr and JobHealthchecksLivenessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksLivenessProbeTypeTcpPtrInput` via:
//
//	        JobHealthchecksLivenessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksLivenessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToJobHealthchecksLivenessProbeTypeTcpPtrOutput() JobHealthchecksLivenessProbeTypeTcpPtrOutput
	ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Context) JobHealthchecksLivenessProbeTypeTcpPtrOutput
}

type jobHealthchecksLivenessProbeTypeTcpPtrType JobHealthchecksLivenessProbeTypeTcpArgs

func JobHealthchecksLivenessProbeTypeTcpPtr(v *JobHealthchecksLivenessProbeTypeTcpArgs) JobHealthchecksLivenessProbeTypeTcpPtrInput {
	return (*jobHealthchecksLivenessProbeTypeTcpPtrType)(v)
}

func (*jobHealthchecksLivenessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i *jobHealthchecksLivenessProbeTypeTcpPtrType) ToJobHealthchecksLivenessProbeTypeTcpPtrOutput() JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksLivenessProbeTypeTcpPtrType) ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type JobHealthchecksLivenessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeTcpOutput) ToJobHealthchecksLivenessProbeTypeTcpOutput() JobHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeTcpOutput) ToJobHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeTcpOutput) ToJobHealthchecksLivenessProbeTypeTcpPtrOutput() JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksLivenessProbeTypeTcpOutput) ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksLivenessProbeTypeTcp) *JobHealthchecksLivenessProbeTypeTcp {
		return &v
	}).(JobHealthchecksLivenessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o JobHealthchecksLivenessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksLivenessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksLivenessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type JobHealthchecksLivenessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksLivenessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o JobHealthchecksLivenessProbeTypeTcpPtrOutput) ToJobHealthchecksLivenessProbeTypeTcpPtrOutput() JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeTcpPtrOutput) ToJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) JobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o JobHealthchecksLivenessProbeTypeTcpPtrOutput) Elem() JobHealthchecksLivenessProbeTypeTcpOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeTcp) JobHealthchecksLivenessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksLivenessProbeTypeTcp
		return ret
	}).(JobHealthchecksLivenessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o JobHealthchecksLivenessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksLivenessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksLivenessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type JobHealthchecksReadinessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type JobHealthchecksReadinessProbeType `pulumi:"type"`
}

// JobHealthchecksReadinessProbeInput is an input type that accepts JobHealthchecksReadinessProbeArgs and JobHealthchecksReadinessProbeOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeInput` via:
//
//	JobHealthchecksReadinessProbeArgs{...}
type JobHealthchecksReadinessProbeInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeOutput() JobHealthchecksReadinessProbeOutput
	ToJobHealthchecksReadinessProbeOutputWithContext(context.Context) JobHealthchecksReadinessProbeOutput
}

type JobHealthchecksReadinessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type JobHealthchecksReadinessProbeTypeInput `pulumi:"type"`
}

func (JobHealthchecksReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbe)(nil)).Elem()
}

func (i JobHealthchecksReadinessProbeArgs) ToJobHealthchecksReadinessProbeOutput() JobHealthchecksReadinessProbeOutput {
	return i.ToJobHealthchecksReadinessProbeOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeArgs) ToJobHealthchecksReadinessProbeOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeOutput)
}

func (i JobHealthchecksReadinessProbeArgs) ToJobHealthchecksReadinessProbePtrOutput() JobHealthchecksReadinessProbePtrOutput {
	return i.ToJobHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeArgs) ToJobHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeOutput).ToJobHealthchecksReadinessProbePtrOutputWithContext(ctx)
}

// JobHealthchecksReadinessProbePtrInput is an input type that accepts JobHealthchecksReadinessProbeArgs, JobHealthchecksReadinessProbePtr and JobHealthchecksReadinessProbePtrOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbePtrInput` via:
//
//	        JobHealthchecksReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksReadinessProbePtrInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbePtrOutput() JobHealthchecksReadinessProbePtrOutput
	ToJobHealthchecksReadinessProbePtrOutputWithContext(context.Context) JobHealthchecksReadinessProbePtrOutput
}

type jobHealthchecksReadinessProbePtrType JobHealthchecksReadinessProbeArgs

func JobHealthchecksReadinessProbePtr(v *JobHealthchecksReadinessProbeArgs) JobHealthchecksReadinessProbePtrInput {
	return (*jobHealthchecksReadinessProbePtrType)(v)
}

func (*jobHealthchecksReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbe)(nil)).Elem()
}

func (i *jobHealthchecksReadinessProbePtrType) ToJobHealthchecksReadinessProbePtrOutput() JobHealthchecksReadinessProbePtrOutput {
	return i.ToJobHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksReadinessProbePtrType) ToJobHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbePtrOutput)
}

type JobHealthchecksReadinessProbeOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbe)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeOutput) ToJobHealthchecksReadinessProbeOutput() JobHealthchecksReadinessProbeOutput {
	return o
}

func (o JobHealthchecksReadinessProbeOutput) ToJobHealthchecksReadinessProbeOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeOutput {
	return o
}

func (o JobHealthchecksReadinessProbeOutput) ToJobHealthchecksReadinessProbePtrOutput() JobHealthchecksReadinessProbePtrOutput {
	return o.ToJobHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (o JobHealthchecksReadinessProbeOutput) ToJobHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksReadinessProbe) *JobHealthchecksReadinessProbe {
		return &v
	}).(JobHealthchecksReadinessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o JobHealthchecksReadinessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o JobHealthchecksReadinessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o JobHealthchecksReadinessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o JobHealthchecksReadinessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o JobHealthchecksReadinessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o JobHealthchecksReadinessProbeOutput) Type() JobHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbe) JobHealthchecksReadinessProbeType { return v.Type }).(JobHealthchecksReadinessProbeTypeOutput)
}

type JobHealthchecksReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbe)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbePtrOutput) ToJobHealthchecksReadinessProbePtrOutput() JobHealthchecksReadinessProbePtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbePtrOutput) ToJobHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbePtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbePtrOutput) Elem() JobHealthchecksReadinessProbeOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbe) JobHealthchecksReadinessProbe {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksReadinessProbe
		return ret
	}).(JobHealthchecksReadinessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o JobHealthchecksReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o JobHealthchecksReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o JobHealthchecksReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o JobHealthchecksReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o JobHealthchecksReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o JobHealthchecksReadinessProbePtrOutput) Type() JobHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbe) *JobHealthchecksReadinessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(JobHealthchecksReadinessProbeTypePtrOutput)
}

type JobHealthchecksReadinessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *JobHealthchecksReadinessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *JobHealthchecksReadinessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *JobHealthchecksReadinessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *JobHealthchecksReadinessProbeTypeTcp `pulumi:"tcp"`
}

// JobHealthchecksReadinessProbeTypeInput is an input type that accepts JobHealthchecksReadinessProbeTypeArgs and JobHealthchecksReadinessProbeTypeOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeInput` via:
//
//	JobHealthchecksReadinessProbeTypeArgs{...}
type JobHealthchecksReadinessProbeTypeInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeOutput() JobHealthchecksReadinessProbeTypeOutput
	ToJobHealthchecksReadinessProbeTypeOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeOutput
}

type JobHealthchecksReadinessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec JobHealthchecksReadinessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc JobHealthchecksReadinessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http JobHealthchecksReadinessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp JobHealthchecksReadinessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (JobHealthchecksReadinessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i JobHealthchecksReadinessProbeTypeArgs) ToJobHealthchecksReadinessProbeTypeOutput() JobHealthchecksReadinessProbeTypeOutput {
	return i.ToJobHealthchecksReadinessProbeTypeOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeArgs) ToJobHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeOutput)
}

func (i JobHealthchecksReadinessProbeTypeArgs) ToJobHealthchecksReadinessProbeTypePtrOutput() JobHealthchecksReadinessProbeTypePtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeArgs) ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeOutput).ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx)
}

// JobHealthchecksReadinessProbeTypePtrInput is an input type that accepts JobHealthchecksReadinessProbeTypeArgs, JobHealthchecksReadinessProbeTypePtr and JobHealthchecksReadinessProbeTypePtrOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypePtrInput` via:
//
//	        JobHealthchecksReadinessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksReadinessProbeTypePtrInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypePtrOutput() JobHealthchecksReadinessProbeTypePtrOutput
	ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypePtrOutput
}

type jobHealthchecksReadinessProbeTypePtrType JobHealthchecksReadinessProbeTypeArgs

func JobHealthchecksReadinessProbeTypePtr(v *JobHealthchecksReadinessProbeTypeArgs) JobHealthchecksReadinessProbeTypePtrInput {
	return (*jobHealthchecksReadinessProbeTypePtrType)(v)
}

func (*jobHealthchecksReadinessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i *jobHealthchecksReadinessProbeTypePtrType) ToJobHealthchecksReadinessProbeTypePtrOutput() JobHealthchecksReadinessProbeTypePtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksReadinessProbeTypePtrType) ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypePtrOutput)
}

type JobHealthchecksReadinessProbeTypeOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeOutput) ToJobHealthchecksReadinessProbeTypeOutput() JobHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeOutput) ToJobHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeOutput) ToJobHealthchecksReadinessProbeTypePtrOutput() JobHealthchecksReadinessProbeTypePtrOutput {
	return o.ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (o JobHealthchecksReadinessProbeTypeOutput) ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeType {
		return &v
	}).(JobHealthchecksReadinessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o JobHealthchecksReadinessProbeTypeOutput) Exec() JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeTypeExec { return v.Exec }).(JobHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o JobHealthchecksReadinessProbeTypeOutput) Grpc() JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeTypeGrpc { return v.Grpc }).(JobHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o JobHealthchecksReadinessProbeTypeOutput) Http() JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeTypeHttp { return v.Http }).(JobHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o JobHealthchecksReadinessProbeTypeOutput) Tcp() JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeTypeTcp { return v.Tcp }).(JobHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type JobHealthchecksReadinessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypePtrOutput) ToJobHealthchecksReadinessProbeTypePtrOutput() JobHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypePtrOutput) ToJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypePtrOutput) Elem() JobHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeType) JobHealthchecksReadinessProbeType {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksReadinessProbeType
		return ret
	}).(JobHealthchecksReadinessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o JobHealthchecksReadinessProbeTypePtrOutput) Exec() JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(JobHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o JobHealthchecksReadinessProbeTypePtrOutput) Grpc() JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(JobHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o JobHealthchecksReadinessProbeTypePtrOutput) Http() JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(JobHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o JobHealthchecksReadinessProbeTypePtrOutput) Tcp() JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeType) *JobHealthchecksReadinessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(JobHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type JobHealthchecksReadinessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// JobHealthchecksReadinessProbeTypeExecInput is an input type that accepts JobHealthchecksReadinessProbeTypeExecArgs and JobHealthchecksReadinessProbeTypeExecOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeExecInput` via:
//
//	JobHealthchecksReadinessProbeTypeExecArgs{...}
type JobHealthchecksReadinessProbeTypeExecInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeExecOutput() JobHealthchecksReadinessProbeTypeExecOutput
	ToJobHealthchecksReadinessProbeTypeExecOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeExecOutput
}

type JobHealthchecksReadinessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (JobHealthchecksReadinessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i JobHealthchecksReadinessProbeTypeExecArgs) ToJobHealthchecksReadinessProbeTypeExecOutput() JobHealthchecksReadinessProbeTypeExecOutput {
	return i.ToJobHealthchecksReadinessProbeTypeExecOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeExecArgs) ToJobHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeExecOutput)
}

func (i JobHealthchecksReadinessProbeTypeExecArgs) ToJobHealthchecksReadinessProbeTypeExecPtrOutput() JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeExecArgs) ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeExecOutput).ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx)
}

// JobHealthchecksReadinessProbeTypeExecPtrInput is an input type that accepts JobHealthchecksReadinessProbeTypeExecArgs, JobHealthchecksReadinessProbeTypeExecPtr and JobHealthchecksReadinessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeExecPtrInput` via:
//
//	        JobHealthchecksReadinessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksReadinessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeExecPtrOutput() JobHealthchecksReadinessProbeTypeExecPtrOutput
	ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeExecPtrOutput
}

type jobHealthchecksReadinessProbeTypeExecPtrType JobHealthchecksReadinessProbeTypeExecArgs

func JobHealthchecksReadinessProbeTypeExecPtr(v *JobHealthchecksReadinessProbeTypeExecArgs) JobHealthchecksReadinessProbeTypeExecPtrInput {
	return (*jobHealthchecksReadinessProbeTypeExecPtrType)(v)
}

func (*jobHealthchecksReadinessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i *jobHealthchecksReadinessProbeTypeExecPtrType) ToJobHealthchecksReadinessProbeTypeExecPtrOutput() JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksReadinessProbeTypeExecPtrType) ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeExecPtrOutput)
}

type JobHealthchecksReadinessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeExecOutput) ToJobHealthchecksReadinessProbeTypeExecOutput() JobHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeExecOutput) ToJobHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeExecOutput) ToJobHealthchecksReadinessProbeTypeExecPtrOutput() JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksReadinessProbeTypeExecOutput) ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksReadinessProbeTypeExec) *JobHealthchecksReadinessProbeTypeExec {
		return &v
	}).(JobHealthchecksReadinessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o JobHealthchecksReadinessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type JobHealthchecksReadinessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeExecPtrOutput) ToJobHealthchecksReadinessProbeTypeExecPtrOutput() JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeExecPtrOutput) ToJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeExecPtrOutput) Elem() JobHealthchecksReadinessProbeTypeExecOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeExec) JobHealthchecksReadinessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksReadinessProbeTypeExec
		return ret
	}).(JobHealthchecksReadinessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o JobHealthchecksReadinessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type JobHealthchecksReadinessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// JobHealthchecksReadinessProbeTypeGrpcInput is an input type that accepts JobHealthchecksReadinessProbeTypeGrpcArgs and JobHealthchecksReadinessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeGrpcInput` via:
//
//	JobHealthchecksReadinessProbeTypeGrpcArgs{...}
type JobHealthchecksReadinessProbeTypeGrpcInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeGrpcOutput() JobHealthchecksReadinessProbeTypeGrpcOutput
	ToJobHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeGrpcOutput
}

type JobHealthchecksReadinessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (JobHealthchecksReadinessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i JobHealthchecksReadinessProbeTypeGrpcArgs) ToJobHealthchecksReadinessProbeTypeGrpcOutput() JobHealthchecksReadinessProbeTypeGrpcOutput {
	return i.ToJobHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeGrpcArgs) ToJobHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeGrpcOutput)
}

func (i JobHealthchecksReadinessProbeTypeGrpcArgs) ToJobHealthchecksReadinessProbeTypeGrpcPtrOutput() JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeGrpcArgs) ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeGrpcOutput).ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// JobHealthchecksReadinessProbeTypeGrpcPtrInput is an input type that accepts JobHealthchecksReadinessProbeTypeGrpcArgs, JobHealthchecksReadinessProbeTypeGrpcPtr and JobHealthchecksReadinessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeGrpcPtrInput` via:
//
//	        JobHealthchecksReadinessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksReadinessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeGrpcPtrOutput() JobHealthchecksReadinessProbeTypeGrpcPtrOutput
	ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeGrpcPtrOutput
}

type jobHealthchecksReadinessProbeTypeGrpcPtrType JobHealthchecksReadinessProbeTypeGrpcArgs

func JobHealthchecksReadinessProbeTypeGrpcPtr(v *JobHealthchecksReadinessProbeTypeGrpcArgs) JobHealthchecksReadinessProbeTypeGrpcPtrInput {
	return (*jobHealthchecksReadinessProbeTypeGrpcPtrType)(v)
}

func (*jobHealthchecksReadinessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i *jobHealthchecksReadinessProbeTypeGrpcPtrType) ToJobHealthchecksReadinessProbeTypeGrpcPtrOutput() JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksReadinessProbeTypeGrpcPtrType) ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

type JobHealthchecksReadinessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeGrpcOutput) ToJobHealthchecksReadinessProbeTypeGrpcOutput() JobHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeGrpcOutput) ToJobHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeGrpcOutput) ToJobHealthchecksReadinessProbeTypeGrpcPtrOutput() JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksReadinessProbeTypeGrpcOutput) ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksReadinessProbeTypeGrpc) *JobHealthchecksReadinessProbeTypeGrpc {
		return &v
	}).(JobHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksReadinessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o JobHealthchecksReadinessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type JobHealthchecksReadinessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeGrpcPtrOutput) ToJobHealthchecksReadinessProbeTypeGrpcPtrOutput() JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeGrpcPtrOutput) ToJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeGrpcPtrOutput) Elem() JobHealthchecksReadinessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeGrpc) JobHealthchecksReadinessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksReadinessProbeTypeGrpc
		return ret
	}).(JobHealthchecksReadinessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o JobHealthchecksReadinessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o JobHealthchecksReadinessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type JobHealthchecksReadinessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// JobHealthchecksReadinessProbeTypeHttpInput is an input type that accepts JobHealthchecksReadinessProbeTypeHttpArgs and JobHealthchecksReadinessProbeTypeHttpOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeHttpInput` via:
//
//	JobHealthchecksReadinessProbeTypeHttpArgs{...}
type JobHealthchecksReadinessProbeTypeHttpInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeHttpOutput() JobHealthchecksReadinessProbeTypeHttpOutput
	ToJobHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeHttpOutput
}

type JobHealthchecksReadinessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (JobHealthchecksReadinessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i JobHealthchecksReadinessProbeTypeHttpArgs) ToJobHealthchecksReadinessProbeTypeHttpOutput() JobHealthchecksReadinessProbeTypeHttpOutput {
	return i.ToJobHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeHttpArgs) ToJobHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeHttpOutput)
}

func (i JobHealthchecksReadinessProbeTypeHttpArgs) ToJobHealthchecksReadinessProbeTypeHttpPtrOutput() JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeHttpArgs) ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeHttpOutput).ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx)
}

// JobHealthchecksReadinessProbeTypeHttpPtrInput is an input type that accepts JobHealthchecksReadinessProbeTypeHttpArgs, JobHealthchecksReadinessProbeTypeHttpPtr and JobHealthchecksReadinessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeHttpPtrInput` via:
//
//	        JobHealthchecksReadinessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksReadinessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeHttpPtrOutput() JobHealthchecksReadinessProbeTypeHttpPtrOutput
	ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeHttpPtrOutput
}

type jobHealthchecksReadinessProbeTypeHttpPtrType JobHealthchecksReadinessProbeTypeHttpArgs

func JobHealthchecksReadinessProbeTypeHttpPtr(v *JobHealthchecksReadinessProbeTypeHttpArgs) JobHealthchecksReadinessProbeTypeHttpPtrInput {
	return (*jobHealthchecksReadinessProbeTypeHttpPtrType)(v)
}

func (*jobHealthchecksReadinessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i *jobHealthchecksReadinessProbeTypeHttpPtrType) ToJobHealthchecksReadinessProbeTypeHttpPtrOutput() JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksReadinessProbeTypeHttpPtrType) ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeHttpPtrOutput)
}

type JobHealthchecksReadinessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeHttpOutput) ToJobHealthchecksReadinessProbeTypeHttpOutput() JobHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeHttpOutput) ToJobHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeHttpOutput) ToJobHealthchecksReadinessProbeTypeHttpPtrOutput() JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksReadinessProbeTypeHttpOutput) ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksReadinessProbeTypeHttp) *JobHealthchecksReadinessProbeTypeHttp {
		return &v
	}).(JobHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o JobHealthchecksReadinessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksReadinessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o JobHealthchecksReadinessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type JobHealthchecksReadinessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeHttpPtrOutput) ToJobHealthchecksReadinessProbeTypeHttpPtrOutput() JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeHttpPtrOutput) ToJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeHttpPtrOutput) Elem() JobHealthchecksReadinessProbeTypeHttpOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeHttp) JobHealthchecksReadinessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksReadinessProbeTypeHttp
		return ret
	}).(JobHealthchecksReadinessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o JobHealthchecksReadinessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksReadinessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o JobHealthchecksReadinessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type JobHealthchecksReadinessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// JobHealthchecksReadinessProbeTypeTcpInput is an input type that accepts JobHealthchecksReadinessProbeTypeTcpArgs and JobHealthchecksReadinessProbeTypeTcpOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeTcpInput` via:
//
//	JobHealthchecksReadinessProbeTypeTcpArgs{...}
type JobHealthchecksReadinessProbeTypeTcpInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeTcpOutput() JobHealthchecksReadinessProbeTypeTcpOutput
	ToJobHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeTcpOutput
}

type JobHealthchecksReadinessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (JobHealthchecksReadinessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i JobHealthchecksReadinessProbeTypeTcpArgs) ToJobHealthchecksReadinessProbeTypeTcpOutput() JobHealthchecksReadinessProbeTypeTcpOutput {
	return i.ToJobHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeTcpArgs) ToJobHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeTcpOutput)
}

func (i JobHealthchecksReadinessProbeTypeTcpArgs) ToJobHealthchecksReadinessProbeTypeTcpPtrOutput() JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i JobHealthchecksReadinessProbeTypeTcpArgs) ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeTcpOutput).ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx)
}

// JobHealthchecksReadinessProbeTypeTcpPtrInput is an input type that accepts JobHealthchecksReadinessProbeTypeTcpArgs, JobHealthchecksReadinessProbeTypeTcpPtr and JobHealthchecksReadinessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `JobHealthchecksReadinessProbeTypeTcpPtrInput` via:
//
//	        JobHealthchecksReadinessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type JobHealthchecksReadinessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToJobHealthchecksReadinessProbeTypeTcpPtrOutput() JobHealthchecksReadinessProbeTypeTcpPtrOutput
	ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Context) JobHealthchecksReadinessProbeTypeTcpPtrOutput
}

type jobHealthchecksReadinessProbeTypeTcpPtrType JobHealthchecksReadinessProbeTypeTcpArgs

func JobHealthchecksReadinessProbeTypeTcpPtr(v *JobHealthchecksReadinessProbeTypeTcpArgs) JobHealthchecksReadinessProbeTypeTcpPtrInput {
	return (*jobHealthchecksReadinessProbeTypeTcpPtrType)(v)
}

func (*jobHealthchecksReadinessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i *jobHealthchecksReadinessProbeTypeTcpPtrType) ToJobHealthchecksReadinessProbeTypeTcpPtrOutput() JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *jobHealthchecksReadinessProbeTypeTcpPtrType) ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type JobHealthchecksReadinessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeTcpOutput) ToJobHealthchecksReadinessProbeTypeTcpOutput() JobHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeTcpOutput) ToJobHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeTcpOutput) ToJobHealthchecksReadinessProbeTypeTcpPtrOutput() JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o JobHealthchecksReadinessProbeTypeTcpOutput) ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobHealthchecksReadinessProbeTypeTcp) *JobHealthchecksReadinessProbeTypeTcp {
		return &v
	}).(JobHealthchecksReadinessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o JobHealthchecksReadinessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksReadinessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v JobHealthchecksReadinessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type JobHealthchecksReadinessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (JobHealthchecksReadinessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o JobHealthchecksReadinessProbeTypeTcpPtrOutput) ToJobHealthchecksReadinessProbeTypeTcpPtrOutput() JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeTcpPtrOutput) ToJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) JobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o JobHealthchecksReadinessProbeTypeTcpPtrOutput) Elem() JobHealthchecksReadinessProbeTypeTcpOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeTcp) JobHealthchecksReadinessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret JobHealthchecksReadinessProbeTypeTcp
		return ret
	}).(JobHealthchecksReadinessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o JobHealthchecksReadinessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o JobHealthchecksReadinessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobHealthchecksReadinessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type JobSchedule struct {
	// Job's cron.
	Cronjob *JobScheduleCronjob `pulumi:"cronjob"`
	// Job's schedule on delete.
	OnDelete *JobScheduleOnDelete `pulumi:"onDelete"`
	// Job's schedule on start.
	OnStart *JobScheduleOnStart `pulumi:"onStart"`
	// Job's schedule on stop.
	OnStop *JobScheduleOnStop `pulumi:"onStop"`
}

// JobScheduleInput is an input type that accepts JobScheduleArgs and JobScheduleOutput values.
// You can construct a concrete instance of `JobScheduleInput` via:
//
//	JobScheduleArgs{...}
type JobScheduleInput interface {
	pulumi.Input

	ToJobScheduleOutput() JobScheduleOutput
	ToJobScheduleOutputWithContext(context.Context) JobScheduleOutput
}

type JobScheduleArgs struct {
	// Job's cron.
	Cronjob JobScheduleCronjobPtrInput `pulumi:"cronjob"`
	// Job's schedule on delete.
	OnDelete JobScheduleOnDeletePtrInput `pulumi:"onDelete"`
	// Job's schedule on start.
	OnStart JobScheduleOnStartPtrInput `pulumi:"onStart"`
	// Job's schedule on stop.
	OnStop JobScheduleOnStopPtrInput `pulumi:"onStop"`
}

func (JobScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedule)(nil)).Elem()
}

func (i JobScheduleArgs) ToJobScheduleOutput() JobScheduleOutput {
	return i.ToJobScheduleOutputWithContext(context.Background())
}

func (i JobScheduleArgs) ToJobScheduleOutputWithContext(ctx context.Context) JobScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOutput)
}

func (i JobScheduleArgs) ToJobSchedulePtrOutput() JobSchedulePtrOutput {
	return i.ToJobSchedulePtrOutputWithContext(context.Background())
}

func (i JobScheduleArgs) ToJobSchedulePtrOutputWithContext(ctx context.Context) JobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOutput).ToJobSchedulePtrOutputWithContext(ctx)
}

// JobSchedulePtrInput is an input type that accepts JobScheduleArgs, JobSchedulePtr and JobSchedulePtrOutput values.
// You can construct a concrete instance of `JobSchedulePtrInput` via:
//
//	        JobScheduleArgs{...}
//
//	or:
//
//	        nil
type JobSchedulePtrInput interface {
	pulumi.Input

	ToJobSchedulePtrOutput() JobSchedulePtrOutput
	ToJobSchedulePtrOutputWithContext(context.Context) JobSchedulePtrOutput
}

type jobSchedulePtrType JobScheduleArgs

func JobSchedulePtr(v *JobScheduleArgs) JobSchedulePtrInput {
	return (*jobSchedulePtrType)(v)
}

func (*jobSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedule)(nil)).Elem()
}

func (i *jobSchedulePtrType) ToJobSchedulePtrOutput() JobSchedulePtrOutput {
	return i.ToJobSchedulePtrOutputWithContext(context.Background())
}

func (i *jobSchedulePtrType) ToJobSchedulePtrOutputWithContext(ctx context.Context) JobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulePtrOutput)
}

type JobScheduleOutput struct{ *pulumi.OutputState }

func (JobScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedule)(nil)).Elem()
}

func (o JobScheduleOutput) ToJobScheduleOutput() JobScheduleOutput {
	return o
}

func (o JobScheduleOutput) ToJobScheduleOutputWithContext(ctx context.Context) JobScheduleOutput {
	return o
}

func (o JobScheduleOutput) ToJobSchedulePtrOutput() JobSchedulePtrOutput {
	return o.ToJobSchedulePtrOutputWithContext(context.Background())
}

func (o JobScheduleOutput) ToJobSchedulePtrOutputWithContext(ctx context.Context) JobSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobSchedule) *JobSchedule {
		return &v
	}).(JobSchedulePtrOutput)
}

// Job's cron.
func (o JobScheduleOutput) Cronjob() JobScheduleCronjobPtrOutput {
	return o.ApplyT(func(v JobSchedule) *JobScheduleCronjob { return v.Cronjob }).(JobScheduleCronjobPtrOutput)
}

// Job's schedule on delete.
func (o JobScheduleOutput) OnDelete() JobScheduleOnDeletePtrOutput {
	return o.ApplyT(func(v JobSchedule) *JobScheduleOnDelete { return v.OnDelete }).(JobScheduleOnDeletePtrOutput)
}

// Job's schedule on start.
func (o JobScheduleOutput) OnStart() JobScheduleOnStartPtrOutput {
	return o.ApplyT(func(v JobSchedule) *JobScheduleOnStart { return v.OnStart }).(JobScheduleOnStartPtrOutput)
}

// Job's schedule on stop.
func (o JobScheduleOutput) OnStop() JobScheduleOnStopPtrOutput {
	return o.ApplyT(func(v JobSchedule) *JobScheduleOnStop { return v.OnStop }).(JobScheduleOnStopPtrOutput)
}

type JobSchedulePtrOutput struct{ *pulumi.OutputState }

func (JobSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedule)(nil)).Elem()
}

func (o JobSchedulePtrOutput) ToJobSchedulePtrOutput() JobSchedulePtrOutput {
	return o
}

func (o JobSchedulePtrOutput) ToJobSchedulePtrOutputWithContext(ctx context.Context) JobSchedulePtrOutput {
	return o
}

func (o JobSchedulePtrOutput) Elem() JobScheduleOutput {
	return o.ApplyT(func(v *JobSchedule) JobSchedule {
		if v != nil {
			return *v
		}
		var ret JobSchedule
		return ret
	}).(JobScheduleOutput)
}

// Job's cron.
func (o JobSchedulePtrOutput) Cronjob() JobScheduleCronjobPtrOutput {
	return o.ApplyT(func(v *JobSchedule) *JobScheduleCronjob {
		if v == nil {
			return nil
		}
		return v.Cronjob
	}).(JobScheduleCronjobPtrOutput)
}

// Job's schedule on delete.
func (o JobSchedulePtrOutput) OnDelete() JobScheduleOnDeletePtrOutput {
	return o.ApplyT(func(v *JobSchedule) *JobScheduleOnDelete {
		if v == nil {
			return nil
		}
		return v.OnDelete
	}).(JobScheduleOnDeletePtrOutput)
}

// Job's schedule on start.
func (o JobSchedulePtrOutput) OnStart() JobScheduleOnStartPtrOutput {
	return o.ApplyT(func(v *JobSchedule) *JobScheduleOnStart {
		if v == nil {
			return nil
		}
		return v.OnStart
	}).(JobScheduleOnStartPtrOutput)
}

// Job's schedule on stop.
func (o JobSchedulePtrOutput) OnStop() JobScheduleOnStopPtrOutput {
	return o.ApplyT(func(v *JobSchedule) *JobScheduleOnStop {
		if v == nil {
			return nil
		}
		return v.OnStop
	}).(JobScheduleOnStopPtrOutput)
}

type JobScheduleCronjob struct {
	// Job's cron command.
	Command JobScheduleCronjobCommand `pulumi:"command"`
	// Job's cron string.
	Schedule string `pulumi:"schedule"`
}

// JobScheduleCronjobInput is an input type that accepts JobScheduleCronjobArgs and JobScheduleCronjobOutput values.
// You can construct a concrete instance of `JobScheduleCronjobInput` via:
//
//	JobScheduleCronjobArgs{...}
type JobScheduleCronjobInput interface {
	pulumi.Input

	ToJobScheduleCronjobOutput() JobScheduleCronjobOutput
	ToJobScheduleCronjobOutputWithContext(context.Context) JobScheduleCronjobOutput
}

type JobScheduleCronjobArgs struct {
	// Job's cron command.
	Command JobScheduleCronjobCommandInput `pulumi:"command"`
	// Job's cron string.
	Schedule pulumi.StringInput `pulumi:"schedule"`
}

func (JobScheduleCronjobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleCronjob)(nil)).Elem()
}

func (i JobScheduleCronjobArgs) ToJobScheduleCronjobOutput() JobScheduleCronjobOutput {
	return i.ToJobScheduleCronjobOutputWithContext(context.Background())
}

func (i JobScheduleCronjobArgs) ToJobScheduleCronjobOutputWithContext(ctx context.Context) JobScheduleCronjobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleCronjobOutput)
}

func (i JobScheduleCronjobArgs) ToJobScheduleCronjobPtrOutput() JobScheduleCronjobPtrOutput {
	return i.ToJobScheduleCronjobPtrOutputWithContext(context.Background())
}

func (i JobScheduleCronjobArgs) ToJobScheduleCronjobPtrOutputWithContext(ctx context.Context) JobScheduleCronjobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleCronjobOutput).ToJobScheduleCronjobPtrOutputWithContext(ctx)
}

// JobScheduleCronjobPtrInput is an input type that accepts JobScheduleCronjobArgs, JobScheduleCronjobPtr and JobScheduleCronjobPtrOutput values.
// You can construct a concrete instance of `JobScheduleCronjobPtrInput` via:
//
//	        JobScheduleCronjobArgs{...}
//
//	or:
//
//	        nil
type JobScheduleCronjobPtrInput interface {
	pulumi.Input

	ToJobScheduleCronjobPtrOutput() JobScheduleCronjobPtrOutput
	ToJobScheduleCronjobPtrOutputWithContext(context.Context) JobScheduleCronjobPtrOutput
}

type jobScheduleCronjobPtrType JobScheduleCronjobArgs

func JobScheduleCronjobPtr(v *JobScheduleCronjobArgs) JobScheduleCronjobPtrInput {
	return (*jobScheduleCronjobPtrType)(v)
}

func (*jobScheduleCronjobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleCronjob)(nil)).Elem()
}

func (i *jobScheduleCronjobPtrType) ToJobScheduleCronjobPtrOutput() JobScheduleCronjobPtrOutput {
	return i.ToJobScheduleCronjobPtrOutputWithContext(context.Background())
}

func (i *jobScheduleCronjobPtrType) ToJobScheduleCronjobPtrOutputWithContext(ctx context.Context) JobScheduleCronjobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleCronjobPtrOutput)
}

type JobScheduleCronjobOutput struct{ *pulumi.OutputState }

func (JobScheduleCronjobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleCronjob)(nil)).Elem()
}

func (o JobScheduleCronjobOutput) ToJobScheduleCronjobOutput() JobScheduleCronjobOutput {
	return o
}

func (o JobScheduleCronjobOutput) ToJobScheduleCronjobOutputWithContext(ctx context.Context) JobScheduleCronjobOutput {
	return o
}

func (o JobScheduleCronjobOutput) ToJobScheduleCronjobPtrOutput() JobScheduleCronjobPtrOutput {
	return o.ToJobScheduleCronjobPtrOutputWithContext(context.Background())
}

func (o JobScheduleCronjobOutput) ToJobScheduleCronjobPtrOutputWithContext(ctx context.Context) JobScheduleCronjobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobScheduleCronjob) *JobScheduleCronjob {
		return &v
	}).(JobScheduleCronjobPtrOutput)
}

// Job's cron command.
func (o JobScheduleCronjobOutput) Command() JobScheduleCronjobCommandOutput {
	return o.ApplyT(func(v JobScheduleCronjob) JobScheduleCronjobCommand { return v.Command }).(JobScheduleCronjobCommandOutput)
}

// Job's cron string.
func (o JobScheduleCronjobOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v JobScheduleCronjob) string { return v.Schedule }).(pulumi.StringOutput)
}

type JobScheduleCronjobPtrOutput struct{ *pulumi.OutputState }

func (JobScheduleCronjobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleCronjob)(nil)).Elem()
}

func (o JobScheduleCronjobPtrOutput) ToJobScheduleCronjobPtrOutput() JobScheduleCronjobPtrOutput {
	return o
}

func (o JobScheduleCronjobPtrOutput) ToJobScheduleCronjobPtrOutputWithContext(ctx context.Context) JobScheduleCronjobPtrOutput {
	return o
}

func (o JobScheduleCronjobPtrOutput) Elem() JobScheduleCronjobOutput {
	return o.ApplyT(func(v *JobScheduleCronjob) JobScheduleCronjob {
		if v != nil {
			return *v
		}
		var ret JobScheduleCronjob
		return ret
	}).(JobScheduleCronjobOutput)
}

// Job's cron command.
func (o JobScheduleCronjobPtrOutput) Command() JobScheduleCronjobCommandPtrOutput {
	return o.ApplyT(func(v *JobScheduleCronjob) *JobScheduleCronjobCommand {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(JobScheduleCronjobCommandPtrOutput)
}

// Job's cron string.
func (o JobScheduleCronjobPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleCronjob) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

type JobScheduleCronjobCommand struct {
	// List of arguments of this job.
	Arguments []string `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint *string `pulumi:"entrypoint"`
}

// JobScheduleCronjobCommandInput is an input type that accepts JobScheduleCronjobCommandArgs and JobScheduleCronjobCommandOutput values.
// You can construct a concrete instance of `JobScheduleCronjobCommandInput` via:
//
//	JobScheduleCronjobCommandArgs{...}
type JobScheduleCronjobCommandInput interface {
	pulumi.Input

	ToJobScheduleCronjobCommandOutput() JobScheduleCronjobCommandOutput
	ToJobScheduleCronjobCommandOutputWithContext(context.Context) JobScheduleCronjobCommandOutput
}

type JobScheduleCronjobCommandArgs struct {
	// List of arguments of this job.
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint pulumi.StringPtrInput `pulumi:"entrypoint"`
}

func (JobScheduleCronjobCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleCronjobCommand)(nil)).Elem()
}

func (i JobScheduleCronjobCommandArgs) ToJobScheduleCronjobCommandOutput() JobScheduleCronjobCommandOutput {
	return i.ToJobScheduleCronjobCommandOutputWithContext(context.Background())
}

func (i JobScheduleCronjobCommandArgs) ToJobScheduleCronjobCommandOutputWithContext(ctx context.Context) JobScheduleCronjobCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleCronjobCommandOutput)
}

func (i JobScheduleCronjobCommandArgs) ToJobScheduleCronjobCommandPtrOutput() JobScheduleCronjobCommandPtrOutput {
	return i.ToJobScheduleCronjobCommandPtrOutputWithContext(context.Background())
}

func (i JobScheduleCronjobCommandArgs) ToJobScheduleCronjobCommandPtrOutputWithContext(ctx context.Context) JobScheduleCronjobCommandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleCronjobCommandOutput).ToJobScheduleCronjobCommandPtrOutputWithContext(ctx)
}

// JobScheduleCronjobCommandPtrInput is an input type that accepts JobScheduleCronjobCommandArgs, JobScheduleCronjobCommandPtr and JobScheduleCronjobCommandPtrOutput values.
// You can construct a concrete instance of `JobScheduleCronjobCommandPtrInput` via:
//
//	        JobScheduleCronjobCommandArgs{...}
//
//	or:
//
//	        nil
type JobScheduleCronjobCommandPtrInput interface {
	pulumi.Input

	ToJobScheduleCronjobCommandPtrOutput() JobScheduleCronjobCommandPtrOutput
	ToJobScheduleCronjobCommandPtrOutputWithContext(context.Context) JobScheduleCronjobCommandPtrOutput
}

type jobScheduleCronjobCommandPtrType JobScheduleCronjobCommandArgs

func JobScheduleCronjobCommandPtr(v *JobScheduleCronjobCommandArgs) JobScheduleCronjobCommandPtrInput {
	return (*jobScheduleCronjobCommandPtrType)(v)
}

func (*jobScheduleCronjobCommandPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleCronjobCommand)(nil)).Elem()
}

func (i *jobScheduleCronjobCommandPtrType) ToJobScheduleCronjobCommandPtrOutput() JobScheduleCronjobCommandPtrOutput {
	return i.ToJobScheduleCronjobCommandPtrOutputWithContext(context.Background())
}

func (i *jobScheduleCronjobCommandPtrType) ToJobScheduleCronjobCommandPtrOutputWithContext(ctx context.Context) JobScheduleCronjobCommandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleCronjobCommandPtrOutput)
}

type JobScheduleCronjobCommandOutput struct{ *pulumi.OutputState }

func (JobScheduleCronjobCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleCronjobCommand)(nil)).Elem()
}

func (o JobScheduleCronjobCommandOutput) ToJobScheduleCronjobCommandOutput() JobScheduleCronjobCommandOutput {
	return o
}

func (o JobScheduleCronjobCommandOutput) ToJobScheduleCronjobCommandOutputWithContext(ctx context.Context) JobScheduleCronjobCommandOutput {
	return o
}

func (o JobScheduleCronjobCommandOutput) ToJobScheduleCronjobCommandPtrOutput() JobScheduleCronjobCommandPtrOutput {
	return o.ToJobScheduleCronjobCommandPtrOutputWithContext(context.Background())
}

func (o JobScheduleCronjobCommandOutput) ToJobScheduleCronjobCommandPtrOutputWithContext(ctx context.Context) JobScheduleCronjobCommandPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobScheduleCronjobCommand) *JobScheduleCronjobCommand {
		return &v
	}).(JobScheduleCronjobCommandPtrOutput)
}

// List of arguments of this job.
func (o JobScheduleCronjobCommandOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobScheduleCronjobCommand) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o JobScheduleCronjobCommandOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobScheduleCronjobCommand) *string { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

type JobScheduleCronjobCommandPtrOutput struct{ *pulumi.OutputState }

func (JobScheduleCronjobCommandPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleCronjobCommand)(nil)).Elem()
}

func (o JobScheduleCronjobCommandPtrOutput) ToJobScheduleCronjobCommandPtrOutput() JobScheduleCronjobCommandPtrOutput {
	return o
}

func (o JobScheduleCronjobCommandPtrOutput) ToJobScheduleCronjobCommandPtrOutputWithContext(ctx context.Context) JobScheduleCronjobCommandPtrOutput {
	return o
}

func (o JobScheduleCronjobCommandPtrOutput) Elem() JobScheduleCronjobCommandOutput {
	return o.ApplyT(func(v *JobScheduleCronjobCommand) JobScheduleCronjobCommand {
		if v != nil {
			return *v
		}
		var ret JobScheduleCronjobCommand
		return ret
	}).(JobScheduleCronjobCommandOutput)
}

// List of arguments of this job.
func (o JobScheduleCronjobCommandPtrOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobScheduleCronjobCommand) []string {
		if v == nil {
			return nil
		}
		return v.Arguments
	}).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o JobScheduleCronjobCommandPtrOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleCronjobCommand) *string {
		if v == nil {
			return nil
		}
		return v.Entrypoint
	}).(pulumi.StringPtrOutput)
}

type JobScheduleOnDelete struct {
	// List of arguments of this job.
	Arguments []string `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint *string `pulumi:"entrypoint"`
}

// JobScheduleOnDeleteInput is an input type that accepts JobScheduleOnDeleteArgs and JobScheduleOnDeleteOutput values.
// You can construct a concrete instance of `JobScheduleOnDeleteInput` via:
//
//	JobScheduleOnDeleteArgs{...}
type JobScheduleOnDeleteInput interface {
	pulumi.Input

	ToJobScheduleOnDeleteOutput() JobScheduleOnDeleteOutput
	ToJobScheduleOnDeleteOutputWithContext(context.Context) JobScheduleOnDeleteOutput
}

type JobScheduleOnDeleteArgs struct {
	// List of arguments of this job.
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint pulumi.StringPtrInput `pulumi:"entrypoint"`
}

func (JobScheduleOnDeleteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleOnDelete)(nil)).Elem()
}

func (i JobScheduleOnDeleteArgs) ToJobScheduleOnDeleteOutput() JobScheduleOnDeleteOutput {
	return i.ToJobScheduleOnDeleteOutputWithContext(context.Background())
}

func (i JobScheduleOnDeleteArgs) ToJobScheduleOnDeleteOutputWithContext(ctx context.Context) JobScheduleOnDeleteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnDeleteOutput)
}

func (i JobScheduleOnDeleteArgs) ToJobScheduleOnDeletePtrOutput() JobScheduleOnDeletePtrOutput {
	return i.ToJobScheduleOnDeletePtrOutputWithContext(context.Background())
}

func (i JobScheduleOnDeleteArgs) ToJobScheduleOnDeletePtrOutputWithContext(ctx context.Context) JobScheduleOnDeletePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnDeleteOutput).ToJobScheduleOnDeletePtrOutputWithContext(ctx)
}

// JobScheduleOnDeletePtrInput is an input type that accepts JobScheduleOnDeleteArgs, JobScheduleOnDeletePtr and JobScheduleOnDeletePtrOutput values.
// You can construct a concrete instance of `JobScheduleOnDeletePtrInput` via:
//
//	        JobScheduleOnDeleteArgs{...}
//
//	or:
//
//	        nil
type JobScheduleOnDeletePtrInput interface {
	pulumi.Input

	ToJobScheduleOnDeletePtrOutput() JobScheduleOnDeletePtrOutput
	ToJobScheduleOnDeletePtrOutputWithContext(context.Context) JobScheduleOnDeletePtrOutput
}

type jobScheduleOnDeletePtrType JobScheduleOnDeleteArgs

func JobScheduleOnDeletePtr(v *JobScheduleOnDeleteArgs) JobScheduleOnDeletePtrInput {
	return (*jobScheduleOnDeletePtrType)(v)
}

func (*jobScheduleOnDeletePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleOnDelete)(nil)).Elem()
}

func (i *jobScheduleOnDeletePtrType) ToJobScheduleOnDeletePtrOutput() JobScheduleOnDeletePtrOutput {
	return i.ToJobScheduleOnDeletePtrOutputWithContext(context.Background())
}

func (i *jobScheduleOnDeletePtrType) ToJobScheduleOnDeletePtrOutputWithContext(ctx context.Context) JobScheduleOnDeletePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnDeletePtrOutput)
}

type JobScheduleOnDeleteOutput struct{ *pulumi.OutputState }

func (JobScheduleOnDeleteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleOnDelete)(nil)).Elem()
}

func (o JobScheduleOnDeleteOutput) ToJobScheduleOnDeleteOutput() JobScheduleOnDeleteOutput {
	return o
}

func (o JobScheduleOnDeleteOutput) ToJobScheduleOnDeleteOutputWithContext(ctx context.Context) JobScheduleOnDeleteOutput {
	return o
}

func (o JobScheduleOnDeleteOutput) ToJobScheduleOnDeletePtrOutput() JobScheduleOnDeletePtrOutput {
	return o.ToJobScheduleOnDeletePtrOutputWithContext(context.Background())
}

func (o JobScheduleOnDeleteOutput) ToJobScheduleOnDeletePtrOutputWithContext(ctx context.Context) JobScheduleOnDeletePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobScheduleOnDelete) *JobScheduleOnDelete {
		return &v
	}).(JobScheduleOnDeletePtrOutput)
}

// List of arguments of this job.
func (o JobScheduleOnDeleteOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobScheduleOnDelete) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o JobScheduleOnDeleteOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobScheduleOnDelete) *string { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

type JobScheduleOnDeletePtrOutput struct{ *pulumi.OutputState }

func (JobScheduleOnDeletePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleOnDelete)(nil)).Elem()
}

func (o JobScheduleOnDeletePtrOutput) ToJobScheduleOnDeletePtrOutput() JobScheduleOnDeletePtrOutput {
	return o
}

func (o JobScheduleOnDeletePtrOutput) ToJobScheduleOnDeletePtrOutputWithContext(ctx context.Context) JobScheduleOnDeletePtrOutput {
	return o
}

func (o JobScheduleOnDeletePtrOutput) Elem() JobScheduleOnDeleteOutput {
	return o.ApplyT(func(v *JobScheduleOnDelete) JobScheduleOnDelete {
		if v != nil {
			return *v
		}
		var ret JobScheduleOnDelete
		return ret
	}).(JobScheduleOnDeleteOutput)
}

// List of arguments of this job.
func (o JobScheduleOnDeletePtrOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobScheduleOnDelete) []string {
		if v == nil {
			return nil
		}
		return v.Arguments
	}).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o JobScheduleOnDeletePtrOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleOnDelete) *string {
		if v == nil {
			return nil
		}
		return v.Entrypoint
	}).(pulumi.StringPtrOutput)
}

type JobScheduleOnStart struct {
	// List of arguments of this job.
	Arguments []string `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint *string `pulumi:"entrypoint"`
}

// JobScheduleOnStartInput is an input type that accepts JobScheduleOnStartArgs and JobScheduleOnStartOutput values.
// You can construct a concrete instance of `JobScheduleOnStartInput` via:
//
//	JobScheduleOnStartArgs{...}
type JobScheduleOnStartInput interface {
	pulumi.Input

	ToJobScheduleOnStartOutput() JobScheduleOnStartOutput
	ToJobScheduleOnStartOutputWithContext(context.Context) JobScheduleOnStartOutput
}

type JobScheduleOnStartArgs struct {
	// List of arguments of this job.
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint pulumi.StringPtrInput `pulumi:"entrypoint"`
}

func (JobScheduleOnStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleOnStart)(nil)).Elem()
}

func (i JobScheduleOnStartArgs) ToJobScheduleOnStartOutput() JobScheduleOnStartOutput {
	return i.ToJobScheduleOnStartOutputWithContext(context.Background())
}

func (i JobScheduleOnStartArgs) ToJobScheduleOnStartOutputWithContext(ctx context.Context) JobScheduleOnStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnStartOutput)
}

func (i JobScheduleOnStartArgs) ToJobScheduleOnStartPtrOutput() JobScheduleOnStartPtrOutput {
	return i.ToJobScheduleOnStartPtrOutputWithContext(context.Background())
}

func (i JobScheduleOnStartArgs) ToJobScheduleOnStartPtrOutputWithContext(ctx context.Context) JobScheduleOnStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnStartOutput).ToJobScheduleOnStartPtrOutputWithContext(ctx)
}

// JobScheduleOnStartPtrInput is an input type that accepts JobScheduleOnStartArgs, JobScheduleOnStartPtr and JobScheduleOnStartPtrOutput values.
// You can construct a concrete instance of `JobScheduleOnStartPtrInput` via:
//
//	        JobScheduleOnStartArgs{...}
//
//	or:
//
//	        nil
type JobScheduleOnStartPtrInput interface {
	pulumi.Input

	ToJobScheduleOnStartPtrOutput() JobScheduleOnStartPtrOutput
	ToJobScheduleOnStartPtrOutputWithContext(context.Context) JobScheduleOnStartPtrOutput
}

type jobScheduleOnStartPtrType JobScheduleOnStartArgs

func JobScheduleOnStartPtr(v *JobScheduleOnStartArgs) JobScheduleOnStartPtrInput {
	return (*jobScheduleOnStartPtrType)(v)
}

func (*jobScheduleOnStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleOnStart)(nil)).Elem()
}

func (i *jobScheduleOnStartPtrType) ToJobScheduleOnStartPtrOutput() JobScheduleOnStartPtrOutput {
	return i.ToJobScheduleOnStartPtrOutputWithContext(context.Background())
}

func (i *jobScheduleOnStartPtrType) ToJobScheduleOnStartPtrOutputWithContext(ctx context.Context) JobScheduleOnStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnStartPtrOutput)
}

type JobScheduleOnStartOutput struct{ *pulumi.OutputState }

func (JobScheduleOnStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleOnStart)(nil)).Elem()
}

func (o JobScheduleOnStartOutput) ToJobScheduleOnStartOutput() JobScheduleOnStartOutput {
	return o
}

func (o JobScheduleOnStartOutput) ToJobScheduleOnStartOutputWithContext(ctx context.Context) JobScheduleOnStartOutput {
	return o
}

func (o JobScheduleOnStartOutput) ToJobScheduleOnStartPtrOutput() JobScheduleOnStartPtrOutput {
	return o.ToJobScheduleOnStartPtrOutputWithContext(context.Background())
}

func (o JobScheduleOnStartOutput) ToJobScheduleOnStartPtrOutputWithContext(ctx context.Context) JobScheduleOnStartPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobScheduleOnStart) *JobScheduleOnStart {
		return &v
	}).(JobScheduleOnStartPtrOutput)
}

// List of arguments of this job.
func (o JobScheduleOnStartOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobScheduleOnStart) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o JobScheduleOnStartOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobScheduleOnStart) *string { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

type JobScheduleOnStartPtrOutput struct{ *pulumi.OutputState }

func (JobScheduleOnStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleOnStart)(nil)).Elem()
}

func (o JobScheduleOnStartPtrOutput) ToJobScheduleOnStartPtrOutput() JobScheduleOnStartPtrOutput {
	return o
}

func (o JobScheduleOnStartPtrOutput) ToJobScheduleOnStartPtrOutputWithContext(ctx context.Context) JobScheduleOnStartPtrOutput {
	return o
}

func (o JobScheduleOnStartPtrOutput) Elem() JobScheduleOnStartOutput {
	return o.ApplyT(func(v *JobScheduleOnStart) JobScheduleOnStart {
		if v != nil {
			return *v
		}
		var ret JobScheduleOnStart
		return ret
	}).(JobScheduleOnStartOutput)
}

// List of arguments of this job.
func (o JobScheduleOnStartPtrOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobScheduleOnStart) []string {
		if v == nil {
			return nil
		}
		return v.Arguments
	}).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o JobScheduleOnStartPtrOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleOnStart) *string {
		if v == nil {
			return nil
		}
		return v.Entrypoint
	}).(pulumi.StringPtrOutput)
}

type JobScheduleOnStop struct {
	// List of arguments of this job.
	Arguments []string `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint *string `pulumi:"entrypoint"`
}

// JobScheduleOnStopInput is an input type that accepts JobScheduleOnStopArgs and JobScheduleOnStopOutput values.
// You can construct a concrete instance of `JobScheduleOnStopInput` via:
//
//	JobScheduleOnStopArgs{...}
type JobScheduleOnStopInput interface {
	pulumi.Input

	ToJobScheduleOnStopOutput() JobScheduleOnStopOutput
	ToJobScheduleOnStopOutputWithContext(context.Context) JobScheduleOnStopOutput
}

type JobScheduleOnStopArgs struct {
	// List of arguments of this job.
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint pulumi.StringPtrInput `pulumi:"entrypoint"`
}

func (JobScheduleOnStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleOnStop)(nil)).Elem()
}

func (i JobScheduleOnStopArgs) ToJobScheduleOnStopOutput() JobScheduleOnStopOutput {
	return i.ToJobScheduleOnStopOutputWithContext(context.Background())
}

func (i JobScheduleOnStopArgs) ToJobScheduleOnStopOutputWithContext(ctx context.Context) JobScheduleOnStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnStopOutput)
}

func (i JobScheduleOnStopArgs) ToJobScheduleOnStopPtrOutput() JobScheduleOnStopPtrOutput {
	return i.ToJobScheduleOnStopPtrOutputWithContext(context.Background())
}

func (i JobScheduleOnStopArgs) ToJobScheduleOnStopPtrOutputWithContext(ctx context.Context) JobScheduleOnStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnStopOutput).ToJobScheduleOnStopPtrOutputWithContext(ctx)
}

// JobScheduleOnStopPtrInput is an input type that accepts JobScheduleOnStopArgs, JobScheduleOnStopPtr and JobScheduleOnStopPtrOutput values.
// You can construct a concrete instance of `JobScheduleOnStopPtrInput` via:
//
//	        JobScheduleOnStopArgs{...}
//
//	or:
//
//	        nil
type JobScheduleOnStopPtrInput interface {
	pulumi.Input

	ToJobScheduleOnStopPtrOutput() JobScheduleOnStopPtrOutput
	ToJobScheduleOnStopPtrOutputWithContext(context.Context) JobScheduleOnStopPtrOutput
}

type jobScheduleOnStopPtrType JobScheduleOnStopArgs

func JobScheduleOnStopPtr(v *JobScheduleOnStopArgs) JobScheduleOnStopPtrInput {
	return (*jobScheduleOnStopPtrType)(v)
}

func (*jobScheduleOnStopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleOnStop)(nil)).Elem()
}

func (i *jobScheduleOnStopPtrType) ToJobScheduleOnStopPtrOutput() JobScheduleOnStopPtrOutput {
	return i.ToJobScheduleOnStopPtrOutputWithContext(context.Background())
}

func (i *jobScheduleOnStopPtrType) ToJobScheduleOnStopPtrOutputWithContext(ctx context.Context) JobScheduleOnStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOnStopPtrOutput)
}

type JobScheduleOnStopOutput struct{ *pulumi.OutputState }

func (JobScheduleOnStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduleOnStop)(nil)).Elem()
}

func (o JobScheduleOnStopOutput) ToJobScheduleOnStopOutput() JobScheduleOnStopOutput {
	return o
}

func (o JobScheduleOnStopOutput) ToJobScheduleOnStopOutputWithContext(ctx context.Context) JobScheduleOnStopOutput {
	return o
}

func (o JobScheduleOnStopOutput) ToJobScheduleOnStopPtrOutput() JobScheduleOnStopPtrOutput {
	return o.ToJobScheduleOnStopPtrOutputWithContext(context.Background())
}

func (o JobScheduleOnStopOutput) ToJobScheduleOnStopPtrOutputWithContext(ctx context.Context) JobScheduleOnStopPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobScheduleOnStop) *JobScheduleOnStop {
		return &v
	}).(JobScheduleOnStopPtrOutput)
}

// List of arguments of this job.
func (o JobScheduleOnStopOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobScheduleOnStop) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o JobScheduleOnStopOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobScheduleOnStop) *string { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

type JobScheduleOnStopPtrOutput struct{ *pulumi.OutputState }

func (JobScheduleOnStopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduleOnStop)(nil)).Elem()
}

func (o JobScheduleOnStopPtrOutput) ToJobScheduleOnStopPtrOutput() JobScheduleOnStopPtrOutput {
	return o
}

func (o JobScheduleOnStopPtrOutput) ToJobScheduleOnStopPtrOutputWithContext(ctx context.Context) JobScheduleOnStopPtrOutput {
	return o
}

func (o JobScheduleOnStopPtrOutput) Elem() JobScheduleOnStopOutput {
	return o.ApplyT(func(v *JobScheduleOnStop) JobScheduleOnStop {
		if v != nil {
			return *v
		}
		var ret JobScheduleOnStop
		return ret
	}).(JobScheduleOnStopOutput)
}

// List of arguments of this job.
func (o JobScheduleOnStopPtrOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobScheduleOnStop) []string {
		if v == nil {
			return nil
		}
		return v.Arguments
	}).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o JobScheduleOnStopPtrOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobScheduleOnStop) *string {
		if v == nil {
			return nil
		}
		return v.Entrypoint
	}).(pulumi.StringPtrOutput)
}

type JobSecret struct {
	// Id of the secret.
	Id *string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// JobSecretInput is an input type that accepts JobSecretArgs and JobSecretOutput values.
// You can construct a concrete instance of `JobSecretInput` via:
//
//	JobSecretArgs{...}
type JobSecretInput interface {
	pulumi.Input

	ToJobSecretOutput() JobSecretOutput
	ToJobSecretOutputWithContext(context.Context) JobSecretOutput
}

type JobSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSecret)(nil)).Elem()
}

func (i JobSecretArgs) ToJobSecretOutput() JobSecretOutput {
	return i.ToJobSecretOutputWithContext(context.Background())
}

func (i JobSecretArgs) ToJobSecretOutputWithContext(ctx context.Context) JobSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSecretOutput)
}

// JobSecretArrayInput is an input type that accepts JobSecretArray and JobSecretArrayOutput values.
// You can construct a concrete instance of `JobSecretArrayInput` via:
//
//	JobSecretArray{ JobSecretArgs{...} }
type JobSecretArrayInput interface {
	pulumi.Input

	ToJobSecretArrayOutput() JobSecretArrayOutput
	ToJobSecretArrayOutputWithContext(context.Context) JobSecretArrayOutput
}

type JobSecretArray []JobSecretInput

func (JobSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobSecret)(nil)).Elem()
}

func (i JobSecretArray) ToJobSecretArrayOutput() JobSecretArrayOutput {
	return i.ToJobSecretArrayOutputWithContext(context.Background())
}

func (i JobSecretArray) ToJobSecretArrayOutputWithContext(ctx context.Context) JobSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSecretArrayOutput)
}

type JobSecretOutput struct{ *pulumi.OutputState }

func (JobSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSecret)(nil)).Elem()
}

func (o JobSecretOutput) ToJobSecretOutput() JobSecretOutput {
	return o
}

func (o JobSecretOutput) ToJobSecretOutputWithContext(ctx context.Context) JobSecretOutput {
	return o
}

// Id of the secret.
func (o JobSecretOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSecret) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the secret.
func (o JobSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v JobSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o JobSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobSecret) string { return v.Value }).(pulumi.StringOutput)
}

type JobSecretArrayOutput struct{ *pulumi.OutputState }

func (JobSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobSecret)(nil)).Elem()
}

func (o JobSecretArrayOutput) ToJobSecretArrayOutput() JobSecretArrayOutput {
	return o
}

func (o JobSecretArrayOutput) ToJobSecretArrayOutputWithContext(ctx context.Context) JobSecretArrayOutput {
	return o
}

func (o JobSecretArrayOutput) Index(i pulumi.IntInput) JobSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobSecret {
		return vs[0].([]JobSecret)[vs[1].(int)]
	}).(JobSecretOutput)
}

type JobSecretAlias struct {
	// Id of the secret alias.
	Id *string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// JobSecretAliasInput is an input type that accepts JobSecretAliasArgs and JobSecretAliasOutput values.
// You can construct a concrete instance of `JobSecretAliasInput` via:
//
//	JobSecretAliasArgs{...}
type JobSecretAliasInput interface {
	pulumi.Input

	ToJobSecretAliasOutput() JobSecretAliasOutput
	ToJobSecretAliasOutputWithContext(context.Context) JobSecretAliasOutput
}

type JobSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSecretAlias)(nil)).Elem()
}

func (i JobSecretAliasArgs) ToJobSecretAliasOutput() JobSecretAliasOutput {
	return i.ToJobSecretAliasOutputWithContext(context.Background())
}

func (i JobSecretAliasArgs) ToJobSecretAliasOutputWithContext(ctx context.Context) JobSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSecretAliasOutput)
}

// JobSecretAliasArrayInput is an input type that accepts JobSecretAliasArray and JobSecretAliasArrayOutput values.
// You can construct a concrete instance of `JobSecretAliasArrayInput` via:
//
//	JobSecretAliasArray{ JobSecretAliasArgs{...} }
type JobSecretAliasArrayInput interface {
	pulumi.Input

	ToJobSecretAliasArrayOutput() JobSecretAliasArrayOutput
	ToJobSecretAliasArrayOutputWithContext(context.Context) JobSecretAliasArrayOutput
}

type JobSecretAliasArray []JobSecretAliasInput

func (JobSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobSecretAlias)(nil)).Elem()
}

func (i JobSecretAliasArray) ToJobSecretAliasArrayOutput() JobSecretAliasArrayOutput {
	return i.ToJobSecretAliasArrayOutputWithContext(context.Background())
}

func (i JobSecretAliasArray) ToJobSecretAliasArrayOutputWithContext(ctx context.Context) JobSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSecretAliasArrayOutput)
}

type JobSecretAliasOutput struct{ *pulumi.OutputState }

func (JobSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSecretAlias)(nil)).Elem()
}

func (o JobSecretAliasOutput) ToJobSecretAliasOutput() JobSecretAliasOutput {
	return o
}

func (o JobSecretAliasOutput) ToJobSecretAliasOutputWithContext(ctx context.Context) JobSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o JobSecretAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSecretAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret alias.
func (o JobSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v JobSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o JobSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type JobSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (JobSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobSecretAlias)(nil)).Elem()
}

func (o JobSecretAliasArrayOutput) ToJobSecretAliasArrayOutput() JobSecretAliasArrayOutput {
	return o
}

func (o JobSecretAliasArrayOutput) ToJobSecretAliasArrayOutputWithContext(ctx context.Context) JobSecretAliasArrayOutput {
	return o
}

func (o JobSecretAliasArrayOutput) Index(i pulumi.IntInput) JobSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobSecretAlias {
		return vs[0].([]JobSecretAlias)[vs[1].(int)]
	}).(JobSecretAliasOutput)
}

type JobSecretOverride struct {
	// Id of the secret override.
	Id *string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// JobSecretOverrideInput is an input type that accepts JobSecretOverrideArgs and JobSecretOverrideOutput values.
// You can construct a concrete instance of `JobSecretOverrideInput` via:
//
//	JobSecretOverrideArgs{...}
type JobSecretOverrideInput interface {
	pulumi.Input

	ToJobSecretOverrideOutput() JobSecretOverrideOutput
	ToJobSecretOverrideOutputWithContext(context.Context) JobSecretOverrideOutput
}

type JobSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (JobSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSecretOverride)(nil)).Elem()
}

func (i JobSecretOverrideArgs) ToJobSecretOverrideOutput() JobSecretOverrideOutput {
	return i.ToJobSecretOverrideOutputWithContext(context.Background())
}

func (i JobSecretOverrideArgs) ToJobSecretOverrideOutputWithContext(ctx context.Context) JobSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSecretOverrideOutput)
}

// JobSecretOverrideArrayInput is an input type that accepts JobSecretOverrideArray and JobSecretOverrideArrayOutput values.
// You can construct a concrete instance of `JobSecretOverrideArrayInput` via:
//
//	JobSecretOverrideArray{ JobSecretOverrideArgs{...} }
type JobSecretOverrideArrayInput interface {
	pulumi.Input

	ToJobSecretOverrideArrayOutput() JobSecretOverrideArrayOutput
	ToJobSecretOverrideArrayOutputWithContext(context.Context) JobSecretOverrideArrayOutput
}

type JobSecretOverrideArray []JobSecretOverrideInput

func (JobSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobSecretOverride)(nil)).Elem()
}

func (i JobSecretOverrideArray) ToJobSecretOverrideArrayOutput() JobSecretOverrideArrayOutput {
	return i.ToJobSecretOverrideArrayOutputWithContext(context.Background())
}

func (i JobSecretOverrideArray) ToJobSecretOverrideArrayOutputWithContext(ctx context.Context) JobSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSecretOverrideArrayOutput)
}

type JobSecretOverrideOutput struct{ *pulumi.OutputState }

func (JobSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSecretOverride)(nil)).Elem()
}

func (o JobSecretOverrideOutput) ToJobSecretOverrideOutput() JobSecretOverrideOutput {
	return o
}

func (o JobSecretOverrideOutput) ToJobSecretOverrideOutputWithContext(ctx context.Context) JobSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o JobSecretOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSecretOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret override.
func (o JobSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v JobSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o JobSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v JobSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type JobSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (JobSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobSecretOverride)(nil)).Elem()
}

func (o JobSecretOverrideArrayOutput) ToJobSecretOverrideArrayOutput() JobSecretOverrideArrayOutput {
	return o
}

func (o JobSecretOverrideArrayOutput) ToJobSecretOverrideArrayOutputWithContext(ctx context.Context) JobSecretOverrideArrayOutput {
	return o
}

func (o JobSecretOverrideArrayOutput) Index(i pulumi.IntInput) JobSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobSecretOverride {
		return vs[0].([]JobSecretOverride)[vs[1].(int)]
	}).(JobSecretOverrideOutput)
}

type JobSource struct {
	// Job's docker source.
	Docker *JobSourceDocker `pulumi:"docker"`
	// Job's image source.
	Image *JobSourceImage `pulumi:"image"`
}

// JobSourceInput is an input type that accepts JobSourceArgs and JobSourceOutput values.
// You can construct a concrete instance of `JobSourceInput` via:
//
//	JobSourceArgs{...}
type JobSourceInput interface {
	pulumi.Input

	ToJobSourceOutput() JobSourceOutput
	ToJobSourceOutputWithContext(context.Context) JobSourceOutput
}

type JobSourceArgs struct {
	// Job's docker source.
	Docker JobSourceDockerPtrInput `pulumi:"docker"`
	// Job's image source.
	Image JobSourceImagePtrInput `pulumi:"image"`
}

func (JobSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSource)(nil)).Elem()
}

func (i JobSourceArgs) ToJobSourceOutput() JobSourceOutput {
	return i.ToJobSourceOutputWithContext(context.Background())
}

func (i JobSourceArgs) ToJobSourceOutputWithContext(ctx context.Context) JobSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceOutput)
}

func (i JobSourceArgs) ToJobSourcePtrOutput() JobSourcePtrOutput {
	return i.ToJobSourcePtrOutputWithContext(context.Background())
}

func (i JobSourceArgs) ToJobSourcePtrOutputWithContext(ctx context.Context) JobSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceOutput).ToJobSourcePtrOutputWithContext(ctx)
}

// JobSourcePtrInput is an input type that accepts JobSourceArgs, JobSourcePtr and JobSourcePtrOutput values.
// You can construct a concrete instance of `JobSourcePtrInput` via:
//
//	        JobSourceArgs{...}
//
//	or:
//
//	        nil
type JobSourcePtrInput interface {
	pulumi.Input

	ToJobSourcePtrOutput() JobSourcePtrOutput
	ToJobSourcePtrOutputWithContext(context.Context) JobSourcePtrOutput
}

type jobSourcePtrType JobSourceArgs

func JobSourcePtr(v *JobSourceArgs) JobSourcePtrInput {
	return (*jobSourcePtrType)(v)
}

func (*jobSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSource)(nil)).Elem()
}

func (i *jobSourcePtrType) ToJobSourcePtrOutput() JobSourcePtrOutput {
	return i.ToJobSourcePtrOutputWithContext(context.Background())
}

func (i *jobSourcePtrType) ToJobSourcePtrOutputWithContext(ctx context.Context) JobSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourcePtrOutput)
}

type JobSourceOutput struct{ *pulumi.OutputState }

func (JobSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSource)(nil)).Elem()
}

func (o JobSourceOutput) ToJobSourceOutput() JobSourceOutput {
	return o
}

func (o JobSourceOutput) ToJobSourceOutputWithContext(ctx context.Context) JobSourceOutput {
	return o
}

func (o JobSourceOutput) ToJobSourcePtrOutput() JobSourcePtrOutput {
	return o.ToJobSourcePtrOutputWithContext(context.Background())
}

func (o JobSourceOutput) ToJobSourcePtrOutputWithContext(ctx context.Context) JobSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobSource) *JobSource {
		return &v
	}).(JobSourcePtrOutput)
}

// Job's docker source.
func (o JobSourceOutput) Docker() JobSourceDockerPtrOutput {
	return o.ApplyT(func(v JobSource) *JobSourceDocker { return v.Docker }).(JobSourceDockerPtrOutput)
}

// Job's image source.
func (o JobSourceOutput) Image() JobSourceImagePtrOutput {
	return o.ApplyT(func(v JobSource) *JobSourceImage { return v.Image }).(JobSourceImagePtrOutput)
}

type JobSourcePtrOutput struct{ *pulumi.OutputState }

func (JobSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSource)(nil)).Elem()
}

func (o JobSourcePtrOutput) ToJobSourcePtrOutput() JobSourcePtrOutput {
	return o
}

func (o JobSourcePtrOutput) ToJobSourcePtrOutputWithContext(ctx context.Context) JobSourcePtrOutput {
	return o
}

func (o JobSourcePtrOutput) Elem() JobSourceOutput {
	return o.ApplyT(func(v *JobSource) JobSource {
		if v != nil {
			return *v
		}
		var ret JobSource
		return ret
	}).(JobSourceOutput)
}

// Job's docker source.
func (o JobSourcePtrOutput) Docker() JobSourceDockerPtrOutput {
	return o.ApplyT(func(v *JobSource) *JobSourceDocker {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(JobSourceDockerPtrOutput)
}

// Job's image source.
func (o JobSourcePtrOutput) Image() JobSourceImagePtrOutput {
	return o.ApplyT(func(v *JobSource) *JobSourceImage {
		if v == nil {
			return nil
		}
		return v.Image
	}).(JobSourceImagePtrOutput)
}

type JobSourceDocker struct {
	// Job's docker source dockerfile path.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// Job's docker source git repository.
	GitRepository JobSourceDockerGitRepository `pulumi:"gitRepository"`
}

// JobSourceDockerInput is an input type that accepts JobSourceDockerArgs and JobSourceDockerOutput values.
// You can construct a concrete instance of `JobSourceDockerInput` via:
//
//	JobSourceDockerArgs{...}
type JobSourceDockerInput interface {
	pulumi.Input

	ToJobSourceDockerOutput() JobSourceDockerOutput
	ToJobSourceDockerOutputWithContext(context.Context) JobSourceDockerOutput
}

type JobSourceDockerArgs struct {
	// Job's docker source dockerfile path.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// Job's docker source git repository.
	GitRepository JobSourceDockerGitRepositoryInput `pulumi:"gitRepository"`
}

func (JobSourceDockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSourceDocker)(nil)).Elem()
}

func (i JobSourceDockerArgs) ToJobSourceDockerOutput() JobSourceDockerOutput {
	return i.ToJobSourceDockerOutputWithContext(context.Background())
}

func (i JobSourceDockerArgs) ToJobSourceDockerOutputWithContext(ctx context.Context) JobSourceDockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDockerOutput)
}

func (i JobSourceDockerArgs) ToJobSourceDockerPtrOutput() JobSourceDockerPtrOutput {
	return i.ToJobSourceDockerPtrOutputWithContext(context.Background())
}

func (i JobSourceDockerArgs) ToJobSourceDockerPtrOutputWithContext(ctx context.Context) JobSourceDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDockerOutput).ToJobSourceDockerPtrOutputWithContext(ctx)
}

// JobSourceDockerPtrInput is an input type that accepts JobSourceDockerArgs, JobSourceDockerPtr and JobSourceDockerPtrOutput values.
// You can construct a concrete instance of `JobSourceDockerPtrInput` via:
//
//	        JobSourceDockerArgs{...}
//
//	or:
//
//	        nil
type JobSourceDockerPtrInput interface {
	pulumi.Input

	ToJobSourceDockerPtrOutput() JobSourceDockerPtrOutput
	ToJobSourceDockerPtrOutputWithContext(context.Context) JobSourceDockerPtrOutput
}

type jobSourceDockerPtrType JobSourceDockerArgs

func JobSourceDockerPtr(v *JobSourceDockerArgs) JobSourceDockerPtrInput {
	return (*jobSourceDockerPtrType)(v)
}

func (*jobSourceDockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSourceDocker)(nil)).Elem()
}

func (i *jobSourceDockerPtrType) ToJobSourceDockerPtrOutput() JobSourceDockerPtrOutput {
	return i.ToJobSourceDockerPtrOutputWithContext(context.Background())
}

func (i *jobSourceDockerPtrType) ToJobSourceDockerPtrOutputWithContext(ctx context.Context) JobSourceDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDockerPtrOutput)
}

type JobSourceDockerOutput struct{ *pulumi.OutputState }

func (JobSourceDockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSourceDocker)(nil)).Elem()
}

func (o JobSourceDockerOutput) ToJobSourceDockerOutput() JobSourceDockerOutput {
	return o
}

func (o JobSourceDockerOutput) ToJobSourceDockerOutputWithContext(ctx context.Context) JobSourceDockerOutput {
	return o
}

func (o JobSourceDockerOutput) ToJobSourceDockerPtrOutput() JobSourceDockerPtrOutput {
	return o.ToJobSourceDockerPtrOutputWithContext(context.Background())
}

func (o JobSourceDockerOutput) ToJobSourceDockerPtrOutputWithContext(ctx context.Context) JobSourceDockerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobSourceDocker) *JobSourceDocker {
		return &v
	}).(JobSourceDockerPtrOutput)
}

// Job's docker source dockerfile path.
func (o JobSourceDockerOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDocker) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// Job's docker source git repository.
func (o JobSourceDockerOutput) GitRepository() JobSourceDockerGitRepositoryOutput {
	return o.ApplyT(func(v JobSourceDocker) JobSourceDockerGitRepository { return v.GitRepository }).(JobSourceDockerGitRepositoryOutput)
}

type JobSourceDockerPtrOutput struct{ *pulumi.OutputState }

func (JobSourceDockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSourceDocker)(nil)).Elem()
}

func (o JobSourceDockerPtrOutput) ToJobSourceDockerPtrOutput() JobSourceDockerPtrOutput {
	return o
}

func (o JobSourceDockerPtrOutput) ToJobSourceDockerPtrOutputWithContext(ctx context.Context) JobSourceDockerPtrOutput {
	return o
}

func (o JobSourceDockerPtrOutput) Elem() JobSourceDockerOutput {
	return o.ApplyT(func(v *JobSourceDocker) JobSourceDocker {
		if v != nil {
			return *v
		}
		var ret JobSourceDocker
		return ret
	}).(JobSourceDockerOutput)
}

// Job's docker source dockerfile path.
func (o JobSourceDockerPtrOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDocker) *string {
		if v == nil {
			return nil
		}
		return v.DockerfilePath
	}).(pulumi.StringPtrOutput)
}

// Job's docker source git repository.
func (o JobSourceDockerPtrOutput) GitRepository() JobSourceDockerGitRepositoryPtrOutput {
	return o.ApplyT(func(v *JobSourceDocker) *JobSourceDockerGitRepository {
		if v == nil {
			return nil
		}
		return &v.GitRepository
	}).(JobSourceDockerGitRepositoryPtrOutput)
}

type JobSourceDockerGitRepository struct {
	// Job's docker source git repository branch.
	Branch string `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId *string `pulumi:"gitTokenId"`
	// Job's docker source git repository root path.
	RootPath *string `pulumi:"rootPath"`
	// Job's docker source git repository URL.
	Url string `pulumi:"url"`
}

// JobSourceDockerGitRepositoryInput is an input type that accepts JobSourceDockerGitRepositoryArgs and JobSourceDockerGitRepositoryOutput values.
// You can construct a concrete instance of `JobSourceDockerGitRepositoryInput` via:
//
//	JobSourceDockerGitRepositoryArgs{...}
type JobSourceDockerGitRepositoryInput interface {
	pulumi.Input

	ToJobSourceDockerGitRepositoryOutput() JobSourceDockerGitRepositoryOutput
	ToJobSourceDockerGitRepositoryOutputWithContext(context.Context) JobSourceDockerGitRepositoryOutput
}

type JobSourceDockerGitRepositoryArgs struct {
	// Job's docker source git repository branch.
	Branch pulumi.StringInput `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId pulumi.StringPtrInput `pulumi:"gitTokenId"`
	// Job's docker source git repository root path.
	RootPath pulumi.StringPtrInput `pulumi:"rootPath"`
	// Job's docker source git repository URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (JobSourceDockerGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSourceDockerGitRepository)(nil)).Elem()
}

func (i JobSourceDockerGitRepositoryArgs) ToJobSourceDockerGitRepositoryOutput() JobSourceDockerGitRepositoryOutput {
	return i.ToJobSourceDockerGitRepositoryOutputWithContext(context.Background())
}

func (i JobSourceDockerGitRepositoryArgs) ToJobSourceDockerGitRepositoryOutputWithContext(ctx context.Context) JobSourceDockerGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDockerGitRepositoryOutput)
}

func (i JobSourceDockerGitRepositoryArgs) ToJobSourceDockerGitRepositoryPtrOutput() JobSourceDockerGitRepositoryPtrOutput {
	return i.ToJobSourceDockerGitRepositoryPtrOutputWithContext(context.Background())
}

func (i JobSourceDockerGitRepositoryArgs) ToJobSourceDockerGitRepositoryPtrOutputWithContext(ctx context.Context) JobSourceDockerGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDockerGitRepositoryOutput).ToJobSourceDockerGitRepositoryPtrOutputWithContext(ctx)
}

// JobSourceDockerGitRepositoryPtrInput is an input type that accepts JobSourceDockerGitRepositoryArgs, JobSourceDockerGitRepositoryPtr and JobSourceDockerGitRepositoryPtrOutput values.
// You can construct a concrete instance of `JobSourceDockerGitRepositoryPtrInput` via:
//
//	        JobSourceDockerGitRepositoryArgs{...}
//
//	or:
//
//	        nil
type JobSourceDockerGitRepositoryPtrInput interface {
	pulumi.Input

	ToJobSourceDockerGitRepositoryPtrOutput() JobSourceDockerGitRepositoryPtrOutput
	ToJobSourceDockerGitRepositoryPtrOutputWithContext(context.Context) JobSourceDockerGitRepositoryPtrOutput
}

type jobSourceDockerGitRepositoryPtrType JobSourceDockerGitRepositoryArgs

func JobSourceDockerGitRepositoryPtr(v *JobSourceDockerGitRepositoryArgs) JobSourceDockerGitRepositoryPtrInput {
	return (*jobSourceDockerGitRepositoryPtrType)(v)
}

func (*jobSourceDockerGitRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSourceDockerGitRepository)(nil)).Elem()
}

func (i *jobSourceDockerGitRepositoryPtrType) ToJobSourceDockerGitRepositoryPtrOutput() JobSourceDockerGitRepositoryPtrOutput {
	return i.ToJobSourceDockerGitRepositoryPtrOutputWithContext(context.Background())
}

func (i *jobSourceDockerGitRepositoryPtrType) ToJobSourceDockerGitRepositoryPtrOutputWithContext(ctx context.Context) JobSourceDockerGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDockerGitRepositoryPtrOutput)
}

type JobSourceDockerGitRepositoryOutput struct{ *pulumi.OutputState }

func (JobSourceDockerGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSourceDockerGitRepository)(nil)).Elem()
}

func (o JobSourceDockerGitRepositoryOutput) ToJobSourceDockerGitRepositoryOutput() JobSourceDockerGitRepositoryOutput {
	return o
}

func (o JobSourceDockerGitRepositoryOutput) ToJobSourceDockerGitRepositoryOutputWithContext(ctx context.Context) JobSourceDockerGitRepositoryOutput {
	return o
}

func (o JobSourceDockerGitRepositoryOutput) ToJobSourceDockerGitRepositoryPtrOutput() JobSourceDockerGitRepositoryPtrOutput {
	return o.ToJobSourceDockerGitRepositoryPtrOutputWithContext(context.Background())
}

func (o JobSourceDockerGitRepositoryOutput) ToJobSourceDockerGitRepositoryPtrOutputWithContext(ctx context.Context) JobSourceDockerGitRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobSourceDockerGitRepository) *JobSourceDockerGitRepository {
		return &v
	}).(JobSourceDockerGitRepositoryPtrOutput)
}

// Job's docker source git repository branch.
func (o JobSourceDockerGitRepositoryOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceDockerGitRepository) string { return v.Branch }).(pulumi.StringOutput)
}

// The git token ID to be used
func (o JobSourceDockerGitRepositoryOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDockerGitRepository) *string { return v.GitTokenId }).(pulumi.StringPtrOutput)
}

// Job's docker source git repository root path.
func (o JobSourceDockerGitRepositoryOutput) RootPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDockerGitRepository) *string { return v.RootPath }).(pulumi.StringPtrOutput)
}

// Job's docker source git repository URL.
func (o JobSourceDockerGitRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceDockerGitRepository) string { return v.Url }).(pulumi.StringOutput)
}

type JobSourceDockerGitRepositoryPtrOutput struct{ *pulumi.OutputState }

func (JobSourceDockerGitRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSourceDockerGitRepository)(nil)).Elem()
}

func (o JobSourceDockerGitRepositoryPtrOutput) ToJobSourceDockerGitRepositoryPtrOutput() JobSourceDockerGitRepositoryPtrOutput {
	return o
}

func (o JobSourceDockerGitRepositoryPtrOutput) ToJobSourceDockerGitRepositoryPtrOutputWithContext(ctx context.Context) JobSourceDockerGitRepositoryPtrOutput {
	return o
}

func (o JobSourceDockerGitRepositoryPtrOutput) Elem() JobSourceDockerGitRepositoryOutput {
	return o.ApplyT(func(v *JobSourceDockerGitRepository) JobSourceDockerGitRepository {
		if v != nil {
			return *v
		}
		var ret JobSourceDockerGitRepository
		return ret
	}).(JobSourceDockerGitRepositoryOutput)
}

// Job's docker source git repository branch.
func (o JobSourceDockerGitRepositoryPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDockerGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// The git token ID to be used
func (o JobSourceDockerGitRepositoryPtrOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDockerGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.GitTokenId
	}).(pulumi.StringPtrOutput)
}

// Job's docker source git repository root path.
func (o JobSourceDockerGitRepositoryPtrOutput) RootPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDockerGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.RootPath
	}).(pulumi.StringPtrOutput)
}

// Job's docker source git repository URL.
func (o JobSourceDockerGitRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDockerGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type JobSourceImage struct {
	// Job's image source name.
	Name string `pulumi:"name"`
	// Job's image source registry ID.
	RegistryId string `pulumi:"registryId"`
	// Job's image source tag.
	Tag string `pulumi:"tag"`
}

// JobSourceImageInput is an input type that accepts JobSourceImageArgs and JobSourceImageOutput values.
// You can construct a concrete instance of `JobSourceImageInput` via:
//
//	JobSourceImageArgs{...}
type JobSourceImageInput interface {
	pulumi.Input

	ToJobSourceImageOutput() JobSourceImageOutput
	ToJobSourceImageOutputWithContext(context.Context) JobSourceImageOutput
}

type JobSourceImageArgs struct {
	// Job's image source name.
	Name pulumi.StringInput `pulumi:"name"`
	// Job's image source registry ID.
	RegistryId pulumi.StringInput `pulumi:"registryId"`
	// Job's image source tag.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (JobSourceImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSourceImage)(nil)).Elem()
}

func (i JobSourceImageArgs) ToJobSourceImageOutput() JobSourceImageOutput {
	return i.ToJobSourceImageOutputWithContext(context.Background())
}

func (i JobSourceImageArgs) ToJobSourceImageOutputWithContext(ctx context.Context) JobSourceImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceImageOutput)
}

func (i JobSourceImageArgs) ToJobSourceImagePtrOutput() JobSourceImagePtrOutput {
	return i.ToJobSourceImagePtrOutputWithContext(context.Background())
}

func (i JobSourceImageArgs) ToJobSourceImagePtrOutputWithContext(ctx context.Context) JobSourceImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceImageOutput).ToJobSourceImagePtrOutputWithContext(ctx)
}

// JobSourceImagePtrInput is an input type that accepts JobSourceImageArgs, JobSourceImagePtr and JobSourceImagePtrOutput values.
// You can construct a concrete instance of `JobSourceImagePtrInput` via:
//
//	        JobSourceImageArgs{...}
//
//	or:
//
//	        nil
type JobSourceImagePtrInput interface {
	pulumi.Input

	ToJobSourceImagePtrOutput() JobSourceImagePtrOutput
	ToJobSourceImagePtrOutputWithContext(context.Context) JobSourceImagePtrOutput
}

type jobSourceImagePtrType JobSourceImageArgs

func JobSourceImagePtr(v *JobSourceImageArgs) JobSourceImagePtrInput {
	return (*jobSourceImagePtrType)(v)
}

func (*jobSourceImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSourceImage)(nil)).Elem()
}

func (i *jobSourceImagePtrType) ToJobSourceImagePtrOutput() JobSourceImagePtrOutput {
	return i.ToJobSourceImagePtrOutputWithContext(context.Background())
}

func (i *jobSourceImagePtrType) ToJobSourceImagePtrOutputWithContext(ctx context.Context) JobSourceImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceImagePtrOutput)
}

type JobSourceImageOutput struct{ *pulumi.OutputState }

func (JobSourceImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSourceImage)(nil)).Elem()
}

func (o JobSourceImageOutput) ToJobSourceImageOutput() JobSourceImageOutput {
	return o
}

func (o JobSourceImageOutput) ToJobSourceImageOutputWithContext(ctx context.Context) JobSourceImageOutput {
	return o
}

func (o JobSourceImageOutput) ToJobSourceImagePtrOutput() JobSourceImagePtrOutput {
	return o.ToJobSourceImagePtrOutputWithContext(context.Background())
}

func (o JobSourceImageOutput) ToJobSourceImagePtrOutputWithContext(ctx context.Context) JobSourceImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobSourceImage) *JobSourceImage {
		return &v
	}).(JobSourceImagePtrOutput)
}

// Job's image source name.
func (o JobSourceImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceImage) string { return v.Name }).(pulumi.StringOutput)
}

// Job's image source registry ID.
func (o JobSourceImageOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceImage) string { return v.RegistryId }).(pulumi.StringOutput)
}

// Job's image source tag.
func (o JobSourceImageOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceImage) string { return v.Tag }).(pulumi.StringOutput)
}

type JobSourceImagePtrOutput struct{ *pulumi.OutputState }

func (JobSourceImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSourceImage)(nil)).Elem()
}

func (o JobSourceImagePtrOutput) ToJobSourceImagePtrOutput() JobSourceImagePtrOutput {
	return o
}

func (o JobSourceImagePtrOutput) ToJobSourceImagePtrOutputWithContext(ctx context.Context) JobSourceImagePtrOutput {
	return o
}

func (o JobSourceImagePtrOutput) Elem() JobSourceImageOutput {
	return o.ApplyT(func(v *JobSourceImage) JobSourceImage {
		if v != nil {
			return *v
		}
		var ret JobSourceImage
		return ret
	}).(JobSourceImageOutput)
}

// Job's image source name.
func (o JobSourceImagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceImage) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Job's image source registry ID.
func (o JobSourceImagePtrOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceImage) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryId
	}).(pulumi.StringPtrOutput)
}

// Job's image source tag.
func (o JobSourceImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceImage) *string {
		if v == nil {
			return nil
		}
		return &v.Tag
	}).(pulumi.StringPtrOutput)
}

type ProjectBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key *string `pulumi:"key"`
	// Value of the environment variable.
	Value *string `pulumi:"value"`
}

// ProjectBuiltInEnvironmentVariableInput is an input type that accepts ProjectBuiltInEnvironmentVariableArgs and ProjectBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `ProjectBuiltInEnvironmentVariableInput` via:
//
//	ProjectBuiltInEnvironmentVariableArgs{...}
type ProjectBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToProjectBuiltInEnvironmentVariableOutput() ProjectBuiltInEnvironmentVariableOutput
	ToProjectBuiltInEnvironmentVariableOutputWithContext(context.Context) ProjectBuiltInEnvironmentVariableOutput
}

type ProjectBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ProjectBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i ProjectBuiltInEnvironmentVariableArgs) ToProjectBuiltInEnvironmentVariableOutput() ProjectBuiltInEnvironmentVariableOutput {
	return i.ToProjectBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i ProjectBuiltInEnvironmentVariableArgs) ToProjectBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) ProjectBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuiltInEnvironmentVariableOutput)
}

// ProjectBuiltInEnvironmentVariableArrayInput is an input type that accepts ProjectBuiltInEnvironmentVariableArray and ProjectBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ProjectBuiltInEnvironmentVariableArrayInput` via:
//
//	ProjectBuiltInEnvironmentVariableArray{ ProjectBuiltInEnvironmentVariableArgs{...} }
type ProjectBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToProjectBuiltInEnvironmentVariableArrayOutput() ProjectBuiltInEnvironmentVariableArrayOutput
	ToProjectBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) ProjectBuiltInEnvironmentVariableArrayOutput
}

type ProjectBuiltInEnvironmentVariableArray []ProjectBuiltInEnvironmentVariableInput

func (ProjectBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i ProjectBuiltInEnvironmentVariableArray) ToProjectBuiltInEnvironmentVariableArrayOutput() ProjectBuiltInEnvironmentVariableArrayOutput {
	return i.ToProjectBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ProjectBuiltInEnvironmentVariableArray) ToProjectBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) ProjectBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuiltInEnvironmentVariableArrayOutput)
}

type ProjectBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ProjectBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o ProjectBuiltInEnvironmentVariableOutput) ToProjectBuiltInEnvironmentVariableOutput() ProjectBuiltInEnvironmentVariableOutput {
	return o
}

func (o ProjectBuiltInEnvironmentVariableOutput) ToProjectBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) ProjectBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o ProjectBuiltInEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBuiltInEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o ProjectBuiltInEnvironmentVariableOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBuiltInEnvironmentVariable) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Value of the environment variable.
func (o ProjectBuiltInEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBuiltInEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ProjectBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ProjectBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o ProjectBuiltInEnvironmentVariableArrayOutput) ToProjectBuiltInEnvironmentVariableArrayOutput() ProjectBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o ProjectBuiltInEnvironmentVariableArrayOutput) ToProjectBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) ProjectBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o ProjectBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ProjectBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectBuiltInEnvironmentVariable {
		return vs[0].([]ProjectBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(ProjectBuiltInEnvironmentVariableOutput)
}

type ProjectEnvironmentVariable struct {
	// Id of the environment variable.
	Id *string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// ProjectEnvironmentVariableInput is an input type that accepts ProjectEnvironmentVariableArgs and ProjectEnvironmentVariableOutput values.
// You can construct a concrete instance of `ProjectEnvironmentVariableInput` via:
//
//	ProjectEnvironmentVariableArgs{...}
type ProjectEnvironmentVariableInput interface {
	pulumi.Input

	ToProjectEnvironmentVariableOutput() ProjectEnvironmentVariableOutput
	ToProjectEnvironmentVariableOutputWithContext(context.Context) ProjectEnvironmentVariableOutput
}

type ProjectEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentVariable)(nil)).Elem()
}

func (i ProjectEnvironmentVariableArgs) ToProjectEnvironmentVariableOutput() ProjectEnvironmentVariableOutput {
	return i.ToProjectEnvironmentVariableOutputWithContext(context.Background())
}

func (i ProjectEnvironmentVariableArgs) ToProjectEnvironmentVariableOutputWithContext(ctx context.Context) ProjectEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentVariableOutput)
}

// ProjectEnvironmentVariableArrayInput is an input type that accepts ProjectEnvironmentVariableArray and ProjectEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ProjectEnvironmentVariableArrayInput` via:
//
//	ProjectEnvironmentVariableArray{ ProjectEnvironmentVariableArgs{...} }
type ProjectEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToProjectEnvironmentVariableArrayOutput() ProjectEnvironmentVariableArrayOutput
	ToProjectEnvironmentVariableArrayOutputWithContext(context.Context) ProjectEnvironmentVariableArrayOutput
}

type ProjectEnvironmentVariableArray []ProjectEnvironmentVariableInput

func (ProjectEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentVariable)(nil)).Elem()
}

func (i ProjectEnvironmentVariableArray) ToProjectEnvironmentVariableArrayOutput() ProjectEnvironmentVariableArrayOutput {
	return i.ToProjectEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ProjectEnvironmentVariableArray) ToProjectEnvironmentVariableArrayOutputWithContext(ctx context.Context) ProjectEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentVariableArrayOutput)
}

type ProjectEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentVariable)(nil)).Elem()
}

func (o ProjectEnvironmentVariableOutput) ToProjectEnvironmentVariableOutput() ProjectEnvironmentVariableOutput {
	return o
}

func (o ProjectEnvironmentVariableOutput) ToProjectEnvironmentVariableOutputWithContext(ctx context.Context) ProjectEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o ProjectEnvironmentVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the environment variable.
func (o ProjectEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o ProjectEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentVariable)(nil)).Elem()
}

func (o ProjectEnvironmentVariableArrayOutput) ToProjectEnvironmentVariableArrayOutput() ProjectEnvironmentVariableArrayOutput {
	return o
}

func (o ProjectEnvironmentVariableArrayOutput) ToProjectEnvironmentVariableArrayOutputWithContext(ctx context.Context) ProjectEnvironmentVariableArrayOutput {
	return o
}

func (o ProjectEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ProjectEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectEnvironmentVariable {
		return vs[0].([]ProjectEnvironmentVariable)[vs[1].(int)]
	}).(ProjectEnvironmentVariableOutput)
}

type ProjectEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id *string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// ProjectEnvironmentVariableAliasInput is an input type that accepts ProjectEnvironmentVariableAliasArgs and ProjectEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `ProjectEnvironmentVariableAliasInput` via:
//
//	ProjectEnvironmentVariableAliasArgs{...}
type ProjectEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToProjectEnvironmentVariableAliasOutput() ProjectEnvironmentVariableAliasOutput
	ToProjectEnvironmentVariableAliasOutputWithContext(context.Context) ProjectEnvironmentVariableAliasOutput
}

type ProjectEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentVariableAlias)(nil)).Elem()
}

func (i ProjectEnvironmentVariableAliasArgs) ToProjectEnvironmentVariableAliasOutput() ProjectEnvironmentVariableAliasOutput {
	return i.ToProjectEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i ProjectEnvironmentVariableAliasArgs) ToProjectEnvironmentVariableAliasOutputWithContext(ctx context.Context) ProjectEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentVariableAliasOutput)
}

// ProjectEnvironmentVariableAliasArrayInput is an input type that accepts ProjectEnvironmentVariableAliasArray and ProjectEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `ProjectEnvironmentVariableAliasArrayInput` via:
//
//	ProjectEnvironmentVariableAliasArray{ ProjectEnvironmentVariableAliasArgs{...} }
type ProjectEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToProjectEnvironmentVariableAliasArrayOutput() ProjectEnvironmentVariableAliasArrayOutput
	ToProjectEnvironmentVariableAliasArrayOutputWithContext(context.Context) ProjectEnvironmentVariableAliasArrayOutput
}

type ProjectEnvironmentVariableAliasArray []ProjectEnvironmentVariableAliasInput

func (ProjectEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentVariableAlias)(nil)).Elem()
}

func (i ProjectEnvironmentVariableAliasArray) ToProjectEnvironmentVariableAliasArrayOutput() ProjectEnvironmentVariableAliasArrayOutput {
	return i.ToProjectEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i ProjectEnvironmentVariableAliasArray) ToProjectEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) ProjectEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentVariableAliasArrayOutput)
}

type ProjectEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentVariableAlias)(nil)).Elem()
}

func (o ProjectEnvironmentVariableAliasOutput) ToProjectEnvironmentVariableAliasOutput() ProjectEnvironmentVariableAliasOutput {
	return o
}

func (o ProjectEnvironmentVariableAliasOutput) ToProjectEnvironmentVariableAliasOutputWithContext(ctx context.Context) ProjectEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o ProjectEnvironmentVariableAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariableAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the environment variable alias.
func (o ProjectEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o ProjectEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentVariableAlias)(nil)).Elem()
}

func (o ProjectEnvironmentVariableAliasArrayOutput) ToProjectEnvironmentVariableAliasArrayOutput() ProjectEnvironmentVariableAliasArrayOutput {
	return o
}

func (o ProjectEnvironmentVariableAliasArrayOutput) ToProjectEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) ProjectEnvironmentVariableAliasArrayOutput {
	return o
}

func (o ProjectEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) ProjectEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectEnvironmentVariableAlias {
		return vs[0].([]ProjectEnvironmentVariableAlias)[vs[1].(int)]
	}).(ProjectEnvironmentVariableAliasOutput)
}

type ProjectSecret struct {
	// Id of the secret.
	Id *string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// ProjectSecretInput is an input type that accepts ProjectSecretArgs and ProjectSecretOutput values.
// You can construct a concrete instance of `ProjectSecretInput` via:
//
//	ProjectSecretArgs{...}
type ProjectSecretInput interface {
	pulumi.Input

	ToProjectSecretOutput() ProjectSecretOutput
	ToProjectSecretOutputWithContext(context.Context) ProjectSecretOutput
}

type ProjectSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecret)(nil)).Elem()
}

func (i ProjectSecretArgs) ToProjectSecretOutput() ProjectSecretOutput {
	return i.ToProjectSecretOutputWithContext(context.Background())
}

func (i ProjectSecretArgs) ToProjectSecretOutputWithContext(ctx context.Context) ProjectSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecretOutput)
}

// ProjectSecretArrayInput is an input type that accepts ProjectSecretArray and ProjectSecretArrayOutput values.
// You can construct a concrete instance of `ProjectSecretArrayInput` via:
//
//	ProjectSecretArray{ ProjectSecretArgs{...} }
type ProjectSecretArrayInput interface {
	pulumi.Input

	ToProjectSecretArrayOutput() ProjectSecretArrayOutput
	ToProjectSecretArrayOutputWithContext(context.Context) ProjectSecretArrayOutput
}

type ProjectSecretArray []ProjectSecretInput

func (ProjectSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecret)(nil)).Elem()
}

func (i ProjectSecretArray) ToProjectSecretArrayOutput() ProjectSecretArrayOutput {
	return i.ToProjectSecretArrayOutputWithContext(context.Background())
}

func (i ProjectSecretArray) ToProjectSecretArrayOutputWithContext(ctx context.Context) ProjectSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecretArrayOutput)
}

type ProjectSecretOutput struct{ *pulumi.OutputState }

func (ProjectSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecret)(nil)).Elem()
}

func (o ProjectSecretOutput) ToProjectSecretOutput() ProjectSecretOutput {
	return o
}

func (o ProjectSecretOutput) ToProjectSecretOutputWithContext(ctx context.Context) ProjectSecretOutput {
	return o
}

// Id of the secret.
func (o ProjectSecretOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecret) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Key of the secret.
func (o ProjectSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o ProjectSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecret) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectSecretArrayOutput struct{ *pulumi.OutputState }

func (ProjectSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecret)(nil)).Elem()
}

func (o ProjectSecretArrayOutput) ToProjectSecretArrayOutput() ProjectSecretArrayOutput {
	return o
}

func (o ProjectSecretArrayOutput) ToProjectSecretArrayOutputWithContext(ctx context.Context) ProjectSecretArrayOutput {
	return o
}

func (o ProjectSecretArrayOutput) Index(i pulumi.IntInput) ProjectSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSecret {
		return vs[0].([]ProjectSecret)[vs[1].(int)]
	}).(ProjectSecretOutput)
}

type ProjectSecretAlias struct {
	// Id of the secret alias.
	Id *string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// ProjectSecretAliasInput is an input type that accepts ProjectSecretAliasArgs and ProjectSecretAliasOutput values.
// You can construct a concrete instance of `ProjectSecretAliasInput` via:
//
//	ProjectSecretAliasArgs{...}
type ProjectSecretAliasInput interface {
	pulumi.Input

	ToProjectSecretAliasOutput() ProjectSecretAliasOutput
	ToProjectSecretAliasOutputWithContext(context.Context) ProjectSecretAliasOutput
}

type ProjectSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProjectSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecretAlias)(nil)).Elem()
}

func (i ProjectSecretAliasArgs) ToProjectSecretAliasOutput() ProjectSecretAliasOutput {
	return i.ToProjectSecretAliasOutputWithContext(context.Background())
}

func (i ProjectSecretAliasArgs) ToProjectSecretAliasOutputWithContext(ctx context.Context) ProjectSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecretAliasOutput)
}

// ProjectSecretAliasArrayInput is an input type that accepts ProjectSecretAliasArray and ProjectSecretAliasArrayOutput values.
// You can construct a concrete instance of `ProjectSecretAliasArrayInput` via:
//
//	ProjectSecretAliasArray{ ProjectSecretAliasArgs{...} }
type ProjectSecretAliasArrayInput interface {
	pulumi.Input

	ToProjectSecretAliasArrayOutput() ProjectSecretAliasArrayOutput
	ToProjectSecretAliasArrayOutputWithContext(context.Context) ProjectSecretAliasArrayOutput
}

type ProjectSecretAliasArray []ProjectSecretAliasInput

func (ProjectSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecretAlias)(nil)).Elem()
}

func (i ProjectSecretAliasArray) ToProjectSecretAliasArrayOutput() ProjectSecretAliasArrayOutput {
	return i.ToProjectSecretAliasArrayOutputWithContext(context.Background())
}

func (i ProjectSecretAliasArray) ToProjectSecretAliasArrayOutputWithContext(ctx context.Context) ProjectSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecretAliasArrayOutput)
}

type ProjectSecretAliasOutput struct{ *pulumi.OutputState }

func (ProjectSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecretAlias)(nil)).Elem()
}

func (o ProjectSecretAliasOutput) ToProjectSecretAliasOutput() ProjectSecretAliasOutput {
	return o
}

func (o ProjectSecretAliasOutput) ToProjectSecretAliasOutputWithContext(ctx context.Context) ProjectSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o ProjectSecretAliasOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecretAlias) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the secret alias.
func (o ProjectSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o ProjectSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (ProjectSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecretAlias)(nil)).Elem()
}

func (o ProjectSecretAliasArrayOutput) ToProjectSecretAliasArrayOutput() ProjectSecretAliasArrayOutput {
	return o
}

func (o ProjectSecretAliasArrayOutput) ToProjectSecretAliasArrayOutputWithContext(ctx context.Context) ProjectSecretAliasArrayOutput {
	return o
}

func (o ProjectSecretAliasArrayOutput) Index(i pulumi.IntInput) ProjectSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSecretAlias {
		return vs[0].([]ProjectSecretAlias)[vs[1].(int)]
	}).(ProjectSecretAliasOutput)
}

type GetApplicationBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetApplicationBuiltInEnvironmentVariableInput is an input type that accepts GetApplicationBuiltInEnvironmentVariableArgs and GetApplicationBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetApplicationBuiltInEnvironmentVariableInput` via:
//
//	GetApplicationBuiltInEnvironmentVariableArgs{...}
type GetApplicationBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToGetApplicationBuiltInEnvironmentVariableOutput() GetApplicationBuiltInEnvironmentVariableOutput
	ToGetApplicationBuiltInEnvironmentVariableOutputWithContext(context.Context) GetApplicationBuiltInEnvironmentVariableOutput
}

type GetApplicationBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetApplicationBuiltInEnvironmentVariableArgs) ToGetApplicationBuiltInEnvironmentVariableOutput() GetApplicationBuiltInEnvironmentVariableOutput {
	return i.ToGetApplicationBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetApplicationBuiltInEnvironmentVariableArgs) ToGetApplicationBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetApplicationBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationBuiltInEnvironmentVariableOutput)
}

// GetApplicationBuiltInEnvironmentVariableArrayInput is an input type that accepts GetApplicationBuiltInEnvironmentVariableArray and GetApplicationBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetApplicationBuiltInEnvironmentVariableArrayInput` via:
//
//	GetApplicationBuiltInEnvironmentVariableArray{ GetApplicationBuiltInEnvironmentVariableArgs{...} }
type GetApplicationBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetApplicationBuiltInEnvironmentVariableArrayOutput() GetApplicationBuiltInEnvironmentVariableArrayOutput
	ToGetApplicationBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) GetApplicationBuiltInEnvironmentVariableArrayOutput
}

type GetApplicationBuiltInEnvironmentVariableArray []GetApplicationBuiltInEnvironmentVariableInput

func (GetApplicationBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetApplicationBuiltInEnvironmentVariableArray) ToGetApplicationBuiltInEnvironmentVariableArrayOutput() GetApplicationBuiltInEnvironmentVariableArrayOutput {
	return i.ToGetApplicationBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetApplicationBuiltInEnvironmentVariableArray) ToGetApplicationBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetApplicationBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationBuiltInEnvironmentVariableArrayOutput)
}

type GetApplicationBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetApplicationBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetApplicationBuiltInEnvironmentVariableOutput) ToGetApplicationBuiltInEnvironmentVariableOutput() GetApplicationBuiltInEnvironmentVariableOutput {
	return o
}

func (o GetApplicationBuiltInEnvironmentVariableOutput) ToGetApplicationBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetApplicationBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetApplicationBuiltInEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationBuiltInEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetApplicationBuiltInEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationBuiltInEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetApplicationBuiltInEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationBuiltInEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetApplicationBuiltInEnvironmentVariableArrayOutput) ToGetApplicationBuiltInEnvironmentVariableArrayOutput() GetApplicationBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetApplicationBuiltInEnvironmentVariableArrayOutput) ToGetApplicationBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetApplicationBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetApplicationBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetApplicationBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationBuiltInEnvironmentVariable {
		return vs[0].([]GetApplicationBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(GetApplicationBuiltInEnvironmentVariableOutput)
}

type GetApplicationCustomDomain struct {
	// Your custom domain.
	Domain string `pulumi:"domain"`
	// Id of the custom domain.
	Id string `pulumi:"id"`
	// Status of the custom domain.
	Status string `pulumi:"status"`
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
	ValidationDomain string `pulumi:"validationDomain"`
}

// GetApplicationCustomDomainInput is an input type that accepts GetApplicationCustomDomainArgs and GetApplicationCustomDomainOutput values.
// You can construct a concrete instance of `GetApplicationCustomDomainInput` via:
//
//	GetApplicationCustomDomainArgs{...}
type GetApplicationCustomDomainInput interface {
	pulumi.Input

	ToGetApplicationCustomDomainOutput() GetApplicationCustomDomainOutput
	ToGetApplicationCustomDomainOutputWithContext(context.Context) GetApplicationCustomDomainOutput
}

type GetApplicationCustomDomainArgs struct {
	// Your custom domain.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Id of the custom domain.
	Id pulumi.StringInput `pulumi:"id"`
	// Status of the custom domain.
	Status pulumi.StringInput `pulumi:"status"`
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
	ValidationDomain pulumi.StringInput `pulumi:"validationDomain"`
}

func (GetApplicationCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationCustomDomain)(nil)).Elem()
}

func (i GetApplicationCustomDomainArgs) ToGetApplicationCustomDomainOutput() GetApplicationCustomDomainOutput {
	return i.ToGetApplicationCustomDomainOutputWithContext(context.Background())
}

func (i GetApplicationCustomDomainArgs) ToGetApplicationCustomDomainOutputWithContext(ctx context.Context) GetApplicationCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationCustomDomainOutput)
}

// GetApplicationCustomDomainArrayInput is an input type that accepts GetApplicationCustomDomainArray and GetApplicationCustomDomainArrayOutput values.
// You can construct a concrete instance of `GetApplicationCustomDomainArrayInput` via:
//
//	GetApplicationCustomDomainArray{ GetApplicationCustomDomainArgs{...} }
type GetApplicationCustomDomainArrayInput interface {
	pulumi.Input

	ToGetApplicationCustomDomainArrayOutput() GetApplicationCustomDomainArrayOutput
	ToGetApplicationCustomDomainArrayOutputWithContext(context.Context) GetApplicationCustomDomainArrayOutput
}

type GetApplicationCustomDomainArray []GetApplicationCustomDomainInput

func (GetApplicationCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationCustomDomain)(nil)).Elem()
}

func (i GetApplicationCustomDomainArray) ToGetApplicationCustomDomainArrayOutput() GetApplicationCustomDomainArrayOutput {
	return i.ToGetApplicationCustomDomainArrayOutputWithContext(context.Background())
}

func (i GetApplicationCustomDomainArray) ToGetApplicationCustomDomainArrayOutputWithContext(ctx context.Context) GetApplicationCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationCustomDomainArrayOutput)
}

type GetApplicationCustomDomainOutput struct{ *pulumi.OutputState }

func (GetApplicationCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationCustomDomain)(nil)).Elem()
}

func (o GetApplicationCustomDomainOutput) ToGetApplicationCustomDomainOutput() GetApplicationCustomDomainOutput {
	return o
}

func (o GetApplicationCustomDomainOutput) ToGetApplicationCustomDomainOutputWithContext(ctx context.Context) GetApplicationCustomDomainOutput {
	return o
}

// Your custom domain.
func (o GetApplicationCustomDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationCustomDomain) string { return v.Domain }).(pulumi.StringOutput)
}

// Id of the custom domain.
func (o GetApplicationCustomDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationCustomDomain) string { return v.Id }).(pulumi.StringOutput)
}

// Status of the custom domain.
func (o GetApplicationCustomDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationCustomDomain) string { return v.Status }).(pulumi.StringOutput)
}

// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
func (o GetApplicationCustomDomainOutput) ValidationDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationCustomDomain) string { return v.ValidationDomain }).(pulumi.StringOutput)
}

type GetApplicationCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationCustomDomain)(nil)).Elem()
}

func (o GetApplicationCustomDomainArrayOutput) ToGetApplicationCustomDomainArrayOutput() GetApplicationCustomDomainArrayOutput {
	return o
}

func (o GetApplicationCustomDomainArrayOutput) ToGetApplicationCustomDomainArrayOutputWithContext(ctx context.Context) GetApplicationCustomDomainArrayOutput {
	return o
}

func (o GetApplicationCustomDomainArrayOutput) Index(i pulumi.IntInput) GetApplicationCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationCustomDomain {
		return vs[0].([]GetApplicationCustomDomain)[vs[1].(int)]
	}).(GetApplicationCustomDomainOutput)
}

type GetApplicationDeploymentRestriction struct {
	// Id of the deployment restriction
	Id string `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode string `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type string `pulumi:"type"`
	// Value of the deployment restriction
	Value string `pulumi:"value"`
}

// GetApplicationDeploymentRestrictionInput is an input type that accepts GetApplicationDeploymentRestrictionArgs and GetApplicationDeploymentRestrictionOutput values.
// You can construct a concrete instance of `GetApplicationDeploymentRestrictionInput` via:
//
//	GetApplicationDeploymentRestrictionArgs{...}
type GetApplicationDeploymentRestrictionInput interface {
	pulumi.Input

	ToGetApplicationDeploymentRestrictionOutput() GetApplicationDeploymentRestrictionOutput
	ToGetApplicationDeploymentRestrictionOutputWithContext(context.Context) GetApplicationDeploymentRestrictionOutput
}

type GetApplicationDeploymentRestrictionArgs struct {
	// Id of the deployment restriction
	Id pulumi.StringInput `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode pulumi.StringInput `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the deployment restriction
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationDeploymentRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationDeploymentRestriction)(nil)).Elem()
}

func (i GetApplicationDeploymentRestrictionArgs) ToGetApplicationDeploymentRestrictionOutput() GetApplicationDeploymentRestrictionOutput {
	return i.ToGetApplicationDeploymentRestrictionOutputWithContext(context.Background())
}

func (i GetApplicationDeploymentRestrictionArgs) ToGetApplicationDeploymentRestrictionOutputWithContext(ctx context.Context) GetApplicationDeploymentRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationDeploymentRestrictionOutput)
}

// GetApplicationDeploymentRestrictionArrayInput is an input type that accepts GetApplicationDeploymentRestrictionArray and GetApplicationDeploymentRestrictionArrayOutput values.
// You can construct a concrete instance of `GetApplicationDeploymentRestrictionArrayInput` via:
//
//	GetApplicationDeploymentRestrictionArray{ GetApplicationDeploymentRestrictionArgs{...} }
type GetApplicationDeploymentRestrictionArrayInput interface {
	pulumi.Input

	ToGetApplicationDeploymentRestrictionArrayOutput() GetApplicationDeploymentRestrictionArrayOutput
	ToGetApplicationDeploymentRestrictionArrayOutputWithContext(context.Context) GetApplicationDeploymentRestrictionArrayOutput
}

type GetApplicationDeploymentRestrictionArray []GetApplicationDeploymentRestrictionInput

func (GetApplicationDeploymentRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationDeploymentRestriction)(nil)).Elem()
}

func (i GetApplicationDeploymentRestrictionArray) ToGetApplicationDeploymentRestrictionArrayOutput() GetApplicationDeploymentRestrictionArrayOutput {
	return i.ToGetApplicationDeploymentRestrictionArrayOutputWithContext(context.Background())
}

func (i GetApplicationDeploymentRestrictionArray) ToGetApplicationDeploymentRestrictionArrayOutputWithContext(ctx context.Context) GetApplicationDeploymentRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationDeploymentRestrictionArrayOutput)
}

type GetApplicationDeploymentRestrictionOutput struct{ *pulumi.OutputState }

func (GetApplicationDeploymentRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationDeploymentRestriction)(nil)).Elem()
}

func (o GetApplicationDeploymentRestrictionOutput) ToGetApplicationDeploymentRestrictionOutput() GetApplicationDeploymentRestrictionOutput {
	return o
}

func (o GetApplicationDeploymentRestrictionOutput) ToGetApplicationDeploymentRestrictionOutputWithContext(ctx context.Context) GetApplicationDeploymentRestrictionOutput {
	return o
}

// Id of the deployment restriction
func (o GetApplicationDeploymentRestrictionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationDeploymentRestriction) string { return v.Id }).(pulumi.StringOutput)
}

// Can be EXCLUDE or MATCH
func (o GetApplicationDeploymentRestrictionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationDeploymentRestriction) string { return v.Mode }).(pulumi.StringOutput)
}

// Currently, only PATH is accepted
func (o GetApplicationDeploymentRestrictionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationDeploymentRestriction) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the deployment restriction
func (o GetApplicationDeploymentRestrictionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationDeploymentRestriction) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationDeploymentRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationDeploymentRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationDeploymentRestriction)(nil)).Elem()
}

func (o GetApplicationDeploymentRestrictionArrayOutput) ToGetApplicationDeploymentRestrictionArrayOutput() GetApplicationDeploymentRestrictionArrayOutput {
	return o
}

func (o GetApplicationDeploymentRestrictionArrayOutput) ToGetApplicationDeploymentRestrictionArrayOutputWithContext(ctx context.Context) GetApplicationDeploymentRestrictionArrayOutput {
	return o
}

func (o GetApplicationDeploymentRestrictionArrayOutput) Index(i pulumi.IntInput) GetApplicationDeploymentRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationDeploymentRestriction {
		return vs[0].([]GetApplicationDeploymentRestriction)[vs[1].(int)]
	}).(GetApplicationDeploymentRestrictionOutput)
}

type GetApplicationEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetApplicationEnvironmentVariableInput is an input type that accepts GetApplicationEnvironmentVariableArgs and GetApplicationEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetApplicationEnvironmentVariableInput` via:
//
//	GetApplicationEnvironmentVariableArgs{...}
type GetApplicationEnvironmentVariableInput interface {
	pulumi.Input

	ToGetApplicationEnvironmentVariableOutput() GetApplicationEnvironmentVariableOutput
	ToGetApplicationEnvironmentVariableOutputWithContext(context.Context) GetApplicationEnvironmentVariableOutput
}

type GetApplicationEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationEnvironmentVariable)(nil)).Elem()
}

func (i GetApplicationEnvironmentVariableArgs) ToGetApplicationEnvironmentVariableOutput() GetApplicationEnvironmentVariableOutput {
	return i.ToGetApplicationEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetApplicationEnvironmentVariableArgs) ToGetApplicationEnvironmentVariableOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationEnvironmentVariableOutput)
}

// GetApplicationEnvironmentVariableArrayInput is an input type that accepts GetApplicationEnvironmentVariableArray and GetApplicationEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetApplicationEnvironmentVariableArrayInput` via:
//
//	GetApplicationEnvironmentVariableArray{ GetApplicationEnvironmentVariableArgs{...} }
type GetApplicationEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetApplicationEnvironmentVariableArrayOutput() GetApplicationEnvironmentVariableArrayOutput
	ToGetApplicationEnvironmentVariableArrayOutputWithContext(context.Context) GetApplicationEnvironmentVariableArrayOutput
}

type GetApplicationEnvironmentVariableArray []GetApplicationEnvironmentVariableInput

func (GetApplicationEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationEnvironmentVariable)(nil)).Elem()
}

func (i GetApplicationEnvironmentVariableArray) ToGetApplicationEnvironmentVariableArrayOutput() GetApplicationEnvironmentVariableArrayOutput {
	return i.ToGetApplicationEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetApplicationEnvironmentVariableArray) ToGetApplicationEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationEnvironmentVariableArrayOutput)
}

type GetApplicationEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetApplicationEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationEnvironmentVariable)(nil)).Elem()
}

func (o GetApplicationEnvironmentVariableOutput) ToGetApplicationEnvironmentVariableOutput() GetApplicationEnvironmentVariableOutput {
	return o
}

func (o GetApplicationEnvironmentVariableOutput) ToGetApplicationEnvironmentVariableOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetApplicationEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetApplicationEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetApplicationEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationEnvironmentVariable)(nil)).Elem()
}

func (o GetApplicationEnvironmentVariableArrayOutput) ToGetApplicationEnvironmentVariableArrayOutput() GetApplicationEnvironmentVariableArrayOutput {
	return o
}

func (o GetApplicationEnvironmentVariableArrayOutput) ToGetApplicationEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableArrayOutput {
	return o
}

func (o GetApplicationEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetApplicationEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationEnvironmentVariable {
		return vs[0].([]GetApplicationEnvironmentVariable)[vs[1].(int)]
	}).(GetApplicationEnvironmentVariableOutput)
}

type GetApplicationEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// GetApplicationEnvironmentVariableAliasInput is an input type that accepts GetApplicationEnvironmentVariableAliasArgs and GetApplicationEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `GetApplicationEnvironmentVariableAliasInput` via:
//
//	GetApplicationEnvironmentVariableAliasArgs{...}
type GetApplicationEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToGetApplicationEnvironmentVariableAliasOutput() GetApplicationEnvironmentVariableAliasOutput
	ToGetApplicationEnvironmentVariableAliasOutputWithContext(context.Context) GetApplicationEnvironmentVariableAliasOutput
}

type GetApplicationEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetApplicationEnvironmentVariableAliasArgs) ToGetApplicationEnvironmentVariableAliasOutput() GetApplicationEnvironmentVariableAliasOutput {
	return i.ToGetApplicationEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i GetApplicationEnvironmentVariableAliasArgs) ToGetApplicationEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationEnvironmentVariableAliasOutput)
}

// GetApplicationEnvironmentVariableAliasArrayInput is an input type that accepts GetApplicationEnvironmentVariableAliasArray and GetApplicationEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `GetApplicationEnvironmentVariableAliasArrayInput` via:
//
//	GetApplicationEnvironmentVariableAliasArray{ GetApplicationEnvironmentVariableAliasArgs{...} }
type GetApplicationEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToGetApplicationEnvironmentVariableAliasArrayOutput() GetApplicationEnvironmentVariableAliasArrayOutput
	ToGetApplicationEnvironmentVariableAliasArrayOutputWithContext(context.Context) GetApplicationEnvironmentVariableAliasArrayOutput
}

type GetApplicationEnvironmentVariableAliasArray []GetApplicationEnvironmentVariableAliasInput

func (GetApplicationEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetApplicationEnvironmentVariableAliasArray) ToGetApplicationEnvironmentVariableAliasArrayOutput() GetApplicationEnvironmentVariableAliasArrayOutput {
	return i.ToGetApplicationEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i GetApplicationEnvironmentVariableAliasArray) ToGetApplicationEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationEnvironmentVariableAliasArrayOutput)
}

type GetApplicationEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (GetApplicationEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetApplicationEnvironmentVariableAliasOutput) ToGetApplicationEnvironmentVariableAliasOutput() GetApplicationEnvironmentVariableAliasOutput {
	return o
}

func (o GetApplicationEnvironmentVariableAliasOutput) ToGetApplicationEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o GetApplicationEnvironmentVariableAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariableAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable alias.
func (o GetApplicationEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o GetApplicationEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetApplicationEnvironmentVariableAliasArrayOutput) ToGetApplicationEnvironmentVariableAliasArrayOutput() GetApplicationEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetApplicationEnvironmentVariableAliasArrayOutput) ToGetApplicationEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetApplicationEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) GetApplicationEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationEnvironmentVariableAlias {
		return vs[0].([]GetApplicationEnvironmentVariableAlias)[vs[1].(int)]
	}).(GetApplicationEnvironmentVariableAliasOutput)
}

type GetApplicationEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// GetApplicationEnvironmentVariableOverrideInput is an input type that accepts GetApplicationEnvironmentVariableOverrideArgs and GetApplicationEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `GetApplicationEnvironmentVariableOverrideInput` via:
//
//	GetApplicationEnvironmentVariableOverrideArgs{...}
type GetApplicationEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToGetApplicationEnvironmentVariableOverrideOutput() GetApplicationEnvironmentVariableOverrideOutput
	ToGetApplicationEnvironmentVariableOverrideOutputWithContext(context.Context) GetApplicationEnvironmentVariableOverrideOutput
}

type GetApplicationEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetApplicationEnvironmentVariableOverrideArgs) ToGetApplicationEnvironmentVariableOverrideOutput() GetApplicationEnvironmentVariableOverrideOutput {
	return i.ToGetApplicationEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i GetApplicationEnvironmentVariableOverrideArgs) ToGetApplicationEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationEnvironmentVariableOverrideOutput)
}

// GetApplicationEnvironmentVariableOverrideArrayInput is an input type that accepts GetApplicationEnvironmentVariableOverrideArray and GetApplicationEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `GetApplicationEnvironmentVariableOverrideArrayInput` via:
//
//	GetApplicationEnvironmentVariableOverrideArray{ GetApplicationEnvironmentVariableOverrideArgs{...} }
type GetApplicationEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToGetApplicationEnvironmentVariableOverrideArrayOutput() GetApplicationEnvironmentVariableOverrideArrayOutput
	ToGetApplicationEnvironmentVariableOverrideArrayOutputWithContext(context.Context) GetApplicationEnvironmentVariableOverrideArrayOutput
}

type GetApplicationEnvironmentVariableOverrideArray []GetApplicationEnvironmentVariableOverrideInput

func (GetApplicationEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetApplicationEnvironmentVariableOverrideArray) ToGetApplicationEnvironmentVariableOverrideArrayOutput() GetApplicationEnvironmentVariableOverrideArrayOutput {
	return i.ToGetApplicationEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i GetApplicationEnvironmentVariableOverrideArray) ToGetApplicationEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationEnvironmentVariableOverrideArrayOutput)
}

type GetApplicationEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (GetApplicationEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetApplicationEnvironmentVariableOverrideOutput) ToGetApplicationEnvironmentVariableOverrideOutput() GetApplicationEnvironmentVariableOverrideOutput {
	return o
}

func (o GetApplicationEnvironmentVariableOverrideOutput) ToGetApplicationEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o GetApplicationEnvironmentVariableOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariableOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable override.
func (o GetApplicationEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o GetApplicationEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetApplicationEnvironmentVariableOverrideArrayOutput) ToGetApplicationEnvironmentVariableOverrideArrayOutput() GetApplicationEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetApplicationEnvironmentVariableOverrideArrayOutput) ToGetApplicationEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetApplicationEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetApplicationEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) GetApplicationEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationEnvironmentVariableOverride {
		return vs[0].([]GetApplicationEnvironmentVariableOverride)[vs[1].(int)]
	}).(GetApplicationEnvironmentVariableOverrideOutput)
}

type GetApplicationGitRepository struct {
	// Branch of the git repository.
	// 	- Default: `main or master (depending on repository)`.
	Branch string `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId string `pulumi:"gitTokenId"`
	// Root path of the application.
	// 	- Default: `/`.
	RootPath string `pulumi:"rootPath"`
	// URL of the git repository.
	Url string `pulumi:"url"`
}

// GetApplicationGitRepositoryInput is an input type that accepts GetApplicationGitRepositoryArgs and GetApplicationGitRepositoryOutput values.
// You can construct a concrete instance of `GetApplicationGitRepositoryInput` via:
//
//	GetApplicationGitRepositoryArgs{...}
type GetApplicationGitRepositoryInput interface {
	pulumi.Input

	ToGetApplicationGitRepositoryOutput() GetApplicationGitRepositoryOutput
	ToGetApplicationGitRepositoryOutputWithContext(context.Context) GetApplicationGitRepositoryOutput
}

type GetApplicationGitRepositoryArgs struct {
	// Branch of the git repository.
	// 	- Default: `main or master (depending on repository)`.
	Branch pulumi.StringInput `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId pulumi.StringInput `pulumi:"gitTokenId"`
	// Root path of the application.
	// 	- Default: `/`.
	RootPath pulumi.StringInput `pulumi:"rootPath"`
	// URL of the git repository.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetApplicationGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGitRepository)(nil)).Elem()
}

func (i GetApplicationGitRepositoryArgs) ToGetApplicationGitRepositoryOutput() GetApplicationGitRepositoryOutput {
	return i.ToGetApplicationGitRepositoryOutputWithContext(context.Background())
}

func (i GetApplicationGitRepositoryArgs) ToGetApplicationGitRepositoryOutputWithContext(ctx context.Context) GetApplicationGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGitRepositoryOutput)
}

type GetApplicationGitRepositoryOutput struct{ *pulumi.OutputState }

func (GetApplicationGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGitRepository)(nil)).Elem()
}

func (o GetApplicationGitRepositoryOutput) ToGetApplicationGitRepositoryOutput() GetApplicationGitRepositoryOutput {
	return o
}

func (o GetApplicationGitRepositoryOutput) ToGetApplicationGitRepositoryOutputWithContext(ctx context.Context) GetApplicationGitRepositoryOutput {
	return o
}

// Branch of the git repository.
//   - Default: `main or master (depending on repository)`.
func (o GetApplicationGitRepositoryOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGitRepository) string { return v.Branch }).(pulumi.StringOutput)
}

// The git token ID to be used
func (o GetApplicationGitRepositoryOutput) GitTokenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGitRepository) string { return v.GitTokenId }).(pulumi.StringOutput)
}

// Root path of the application.
//   - Default: `/`.
func (o GetApplicationGitRepositoryOutput) RootPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGitRepository) string { return v.RootPath }).(pulumi.StringOutput)
}

// URL of the git repository.
func (o GetApplicationGitRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGitRepository) string { return v.Url }).(pulumi.StringOutput)
}

type GetApplicationHealthchecks struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe *GetApplicationHealthchecksLivenessProbe `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe *GetApplicationHealthchecksReadinessProbe `pulumi:"readinessProbe"`
}

// GetApplicationHealthchecksInput is an input type that accepts GetApplicationHealthchecksArgs and GetApplicationHealthchecksOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksInput` via:
//
//	GetApplicationHealthchecksArgs{...}
type GetApplicationHealthchecksInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksOutput() GetApplicationHealthchecksOutput
	ToGetApplicationHealthchecksOutputWithContext(context.Context) GetApplicationHealthchecksOutput
}

type GetApplicationHealthchecksArgs struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe GetApplicationHealthchecksLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe GetApplicationHealthchecksReadinessProbePtrInput `pulumi:"readinessProbe"`
}

func (GetApplicationHealthchecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecks)(nil)).Elem()
}

func (i GetApplicationHealthchecksArgs) ToGetApplicationHealthchecksOutput() GetApplicationHealthchecksOutput {
	return i.ToGetApplicationHealthchecksOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksArgs) ToGetApplicationHealthchecksOutputWithContext(ctx context.Context) GetApplicationHealthchecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksOutput)
}

func (i GetApplicationHealthchecksArgs) ToGetApplicationHealthchecksPtrOutput() GetApplicationHealthchecksPtrOutput {
	return i.ToGetApplicationHealthchecksPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksArgs) ToGetApplicationHealthchecksPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksOutput).ToGetApplicationHealthchecksPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksPtrInput is an input type that accepts GetApplicationHealthchecksArgs, GetApplicationHealthchecksPtr and GetApplicationHealthchecksPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksPtrInput` via:
//
//	        GetApplicationHealthchecksArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksPtrOutput() GetApplicationHealthchecksPtrOutput
	ToGetApplicationHealthchecksPtrOutputWithContext(context.Context) GetApplicationHealthchecksPtrOutput
}

type getApplicationHealthchecksPtrType GetApplicationHealthchecksArgs

func GetApplicationHealthchecksPtr(v *GetApplicationHealthchecksArgs) GetApplicationHealthchecksPtrInput {
	return (*getApplicationHealthchecksPtrType)(v)
}

func (*getApplicationHealthchecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecks)(nil)).Elem()
}

func (i *getApplicationHealthchecksPtrType) ToGetApplicationHealthchecksPtrOutput() GetApplicationHealthchecksPtrOutput {
	return i.ToGetApplicationHealthchecksPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksPtrType) ToGetApplicationHealthchecksPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksPtrOutput)
}

type GetApplicationHealthchecksOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecks)(nil)).Elem()
}

func (o GetApplicationHealthchecksOutput) ToGetApplicationHealthchecksOutput() GetApplicationHealthchecksOutput {
	return o
}

func (o GetApplicationHealthchecksOutput) ToGetApplicationHealthchecksOutputWithContext(ctx context.Context) GetApplicationHealthchecksOutput {
	return o
}

func (o GetApplicationHealthchecksOutput) ToGetApplicationHealthchecksPtrOutput() GetApplicationHealthchecksPtrOutput {
	return o.ToGetApplicationHealthchecksPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksOutput) ToGetApplicationHealthchecksPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecks) *GetApplicationHealthchecks {
		return &v
	}).(GetApplicationHealthchecksPtrOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o GetApplicationHealthchecksOutput) LivenessProbe() GetApplicationHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecks) *GetApplicationHealthchecksLivenessProbe { return v.LivenessProbe }).(GetApplicationHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o GetApplicationHealthchecksOutput) ReadinessProbe() GetApplicationHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecks) *GetApplicationHealthchecksReadinessProbe { return v.ReadinessProbe }).(GetApplicationHealthchecksReadinessProbePtrOutput)
}

type GetApplicationHealthchecksPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecks)(nil)).Elem()
}

func (o GetApplicationHealthchecksPtrOutput) ToGetApplicationHealthchecksPtrOutput() GetApplicationHealthchecksPtrOutput {
	return o
}

func (o GetApplicationHealthchecksPtrOutput) ToGetApplicationHealthchecksPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksPtrOutput {
	return o
}

func (o GetApplicationHealthchecksPtrOutput) Elem() GetApplicationHealthchecksOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecks) GetApplicationHealthchecks {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecks
		return ret
	}).(GetApplicationHealthchecksOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o GetApplicationHealthchecksPtrOutput) LivenessProbe() GetApplicationHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecks) *GetApplicationHealthchecksLivenessProbe {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(GetApplicationHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o GetApplicationHealthchecksPtrOutput) ReadinessProbe() GetApplicationHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecks) *GetApplicationHealthchecksReadinessProbe {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(GetApplicationHealthchecksReadinessProbePtrOutput)
}

type GetApplicationHealthchecksLivenessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetApplicationHealthchecksLivenessProbeType `pulumi:"type"`
}

// GetApplicationHealthchecksLivenessProbeInput is an input type that accepts GetApplicationHealthchecksLivenessProbeArgs and GetApplicationHealthchecksLivenessProbeOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeInput` via:
//
//	GetApplicationHealthchecksLivenessProbeArgs{...}
type GetApplicationHealthchecksLivenessProbeInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeOutput() GetApplicationHealthchecksLivenessProbeOutput
	ToGetApplicationHealthchecksLivenessProbeOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeOutput
}

type GetApplicationHealthchecksLivenessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetApplicationHealthchecksLivenessProbeTypeInput `pulumi:"type"`
}

func (GetApplicationHealthchecksLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbe)(nil)).Elem()
}

func (i GetApplicationHealthchecksLivenessProbeArgs) ToGetApplicationHealthchecksLivenessProbeOutput() GetApplicationHealthchecksLivenessProbeOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeArgs) ToGetApplicationHealthchecksLivenessProbeOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeOutput)
}

func (i GetApplicationHealthchecksLivenessProbeArgs) ToGetApplicationHealthchecksLivenessProbePtrOutput() GetApplicationHealthchecksLivenessProbePtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeArgs) ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeOutput).ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksLivenessProbePtrInput is an input type that accepts GetApplicationHealthchecksLivenessProbeArgs, GetApplicationHealthchecksLivenessProbePtr and GetApplicationHealthchecksLivenessProbePtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbePtrInput` via:
//
//	        GetApplicationHealthchecksLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksLivenessProbePtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbePtrOutput() GetApplicationHealthchecksLivenessProbePtrOutput
	ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbePtrOutput
}

type getApplicationHealthchecksLivenessProbePtrType GetApplicationHealthchecksLivenessProbeArgs

func GetApplicationHealthchecksLivenessProbePtr(v *GetApplicationHealthchecksLivenessProbeArgs) GetApplicationHealthchecksLivenessProbePtrInput {
	return (*getApplicationHealthchecksLivenessProbePtrType)(v)
}

func (*getApplicationHealthchecksLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbe)(nil)).Elem()
}

func (i *getApplicationHealthchecksLivenessProbePtrType) ToGetApplicationHealthchecksLivenessProbePtrOutput() GetApplicationHealthchecksLivenessProbePtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksLivenessProbePtrType) ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbePtrOutput)
}

type GetApplicationHealthchecksLivenessProbeOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbe)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeOutput) ToGetApplicationHealthchecksLivenessProbeOutput() GetApplicationHealthchecksLivenessProbeOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeOutput) ToGetApplicationHealthchecksLivenessProbeOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeOutput) ToGetApplicationHealthchecksLivenessProbePtrOutput() GetApplicationHealthchecksLivenessProbePtrOutput {
	return o.ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksLivenessProbeOutput) ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksLivenessProbe) *GetApplicationHealthchecksLivenessProbe {
		return &v
	}).(GetApplicationHealthchecksLivenessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetApplicationHealthchecksLivenessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetApplicationHealthchecksLivenessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o GetApplicationHealthchecksLivenessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetApplicationHealthchecksLivenessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetApplicationHealthchecksLivenessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetApplicationHealthchecksLivenessProbeOutput) Type() GetApplicationHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbe) GetApplicationHealthchecksLivenessProbeType {
		return v.Type
	}).(GetApplicationHealthchecksLivenessProbeTypeOutput)
}

type GetApplicationHealthchecksLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbe)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbePtrOutput) ToGetApplicationHealthchecksLivenessProbePtrOutput() GetApplicationHealthchecksLivenessProbePtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbePtrOutput) ToGetApplicationHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbePtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbePtrOutput) Elem() GetApplicationHealthchecksLivenessProbeOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbe) GetApplicationHealthchecksLivenessProbe {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksLivenessProbe
		return ret
	}).(GetApplicationHealthchecksLivenessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetApplicationHealthchecksLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetApplicationHealthchecksLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o GetApplicationHealthchecksLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetApplicationHealthchecksLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetApplicationHealthchecksLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetApplicationHealthchecksLivenessProbePtrOutput) Type() GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbe) *GetApplicationHealthchecksLivenessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(GetApplicationHealthchecksLivenessProbeTypePtrOutput)
}

type GetApplicationHealthchecksLivenessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *GetApplicationHealthchecksLivenessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *GetApplicationHealthchecksLivenessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *GetApplicationHealthchecksLivenessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *GetApplicationHealthchecksLivenessProbeTypeTcp `pulumi:"tcp"`
}

// GetApplicationHealthchecksLivenessProbeTypeInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeArgs and GetApplicationHealthchecksLivenessProbeTypeOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeInput` via:
//
//	GetApplicationHealthchecksLivenessProbeTypeArgs{...}
type GetApplicationHealthchecksLivenessProbeTypeInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeOutput() GetApplicationHealthchecksLivenessProbeTypeOutput
	ToGetApplicationHealthchecksLivenessProbeTypeOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeOutput
}

type GetApplicationHealthchecksLivenessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec GetApplicationHealthchecksLivenessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc GetApplicationHealthchecksLivenessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http GetApplicationHealthchecksLivenessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp GetApplicationHealthchecksLivenessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (GetApplicationHealthchecksLivenessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i GetApplicationHealthchecksLivenessProbeTypeArgs) ToGetApplicationHealthchecksLivenessProbeTypeOutput() GetApplicationHealthchecksLivenessProbeTypeOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeArgs) ToGetApplicationHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeOutput)
}

func (i GetApplicationHealthchecksLivenessProbeTypeArgs) ToGetApplicationHealthchecksLivenessProbeTypePtrOutput() GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeArgs) ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeOutput).ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksLivenessProbeTypePtrInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeArgs, GetApplicationHealthchecksLivenessProbeTypePtr and GetApplicationHealthchecksLivenessProbeTypePtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypePtrInput` via:
//
//	        GetApplicationHealthchecksLivenessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksLivenessProbeTypePtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypePtrOutput() GetApplicationHealthchecksLivenessProbeTypePtrOutput
	ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypePtrOutput
}

type getApplicationHealthchecksLivenessProbeTypePtrType GetApplicationHealthchecksLivenessProbeTypeArgs

func GetApplicationHealthchecksLivenessProbeTypePtr(v *GetApplicationHealthchecksLivenessProbeTypeArgs) GetApplicationHealthchecksLivenessProbeTypePtrInput {
	return (*getApplicationHealthchecksLivenessProbeTypePtrType)(v)
}

func (*getApplicationHealthchecksLivenessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i *getApplicationHealthchecksLivenessProbeTypePtrType) ToGetApplicationHealthchecksLivenessProbeTypePtrOutput() GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksLivenessProbeTypePtrType) ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypePtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeOutput) ToGetApplicationHealthchecksLivenessProbeTypeOutput() GetApplicationHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeOutput) ToGetApplicationHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeOutput) ToGetApplicationHealthchecksLivenessProbeTypePtrOutput() GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o.ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksLivenessProbeTypeOutput) ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeType {
		return &v
	}).(GetApplicationHealthchecksLivenessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetApplicationHealthchecksLivenessProbeTypeOutput) Exec() GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeTypeExec {
		return v.Exec
	}).(GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetApplicationHealthchecksLivenessProbeTypeOutput) Grpc() GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeTypeGrpc {
		return v.Grpc
	}).(GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetApplicationHealthchecksLivenessProbeTypeOutput) Http() GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeTypeHttp {
		return v.Http
	}).(GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetApplicationHealthchecksLivenessProbeTypeOutput) Tcp() GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeTypeTcp {
		return v.Tcp
	}).(GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypePtrOutput) ToGetApplicationHealthchecksLivenessProbeTypePtrOutput() GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypePtrOutput) ToGetApplicationHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypePtrOutput) Elem() GetApplicationHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeType) GetApplicationHealthchecksLivenessProbeType {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksLivenessProbeType
		return ret
	}).(GetApplicationHealthchecksLivenessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetApplicationHealthchecksLivenessProbeTypePtrOutput) Exec() GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetApplicationHealthchecksLivenessProbeTypePtrOutput) Grpc() GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetApplicationHealthchecksLivenessProbeTypePtrOutput) Http() GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetApplicationHealthchecksLivenessProbeTypePtrOutput) Tcp() GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeType) *GetApplicationHealthchecksLivenessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// GetApplicationHealthchecksLivenessProbeTypeExecInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeExecArgs and GetApplicationHealthchecksLivenessProbeTypeExecOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeExecInput` via:
//
//	GetApplicationHealthchecksLivenessProbeTypeExecArgs{...}
type GetApplicationHealthchecksLivenessProbeTypeExecInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeExecOutput() GetApplicationHealthchecksLivenessProbeTypeExecOutput
	ToGetApplicationHealthchecksLivenessProbeTypeExecOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeExecOutput
}

type GetApplicationHealthchecksLivenessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (GetApplicationHealthchecksLivenessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i GetApplicationHealthchecksLivenessProbeTypeExecArgs) ToGetApplicationHealthchecksLivenessProbeTypeExecOutput() GetApplicationHealthchecksLivenessProbeTypeExecOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeExecOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeExecArgs) ToGetApplicationHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeExecOutput)
}

func (i GetApplicationHealthchecksLivenessProbeTypeExecArgs) ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutput() GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeExecArgs) ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeExecOutput).ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksLivenessProbeTypeExecPtrInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeExecArgs, GetApplicationHealthchecksLivenessProbeTypeExecPtr and GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeExecPtrInput` via:
//
//	        GetApplicationHealthchecksLivenessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksLivenessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutput() GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput
	ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput
}

type getApplicationHealthchecksLivenessProbeTypeExecPtrType GetApplicationHealthchecksLivenessProbeTypeExecArgs

func GetApplicationHealthchecksLivenessProbeTypeExecPtr(v *GetApplicationHealthchecksLivenessProbeTypeExecArgs) GetApplicationHealthchecksLivenessProbeTypeExecPtrInput {
	return (*getApplicationHealthchecksLivenessProbeTypeExecPtrType)(v)
}

func (*getApplicationHealthchecksLivenessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i *getApplicationHealthchecksLivenessProbeTypeExecPtrType) ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutput() GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksLivenessProbeTypeExecPtrType) ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeExecOutput) ToGetApplicationHealthchecksLivenessProbeTypeExecOutput() GetApplicationHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeExecOutput) ToGetApplicationHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeExecOutput) ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutput() GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksLivenessProbeTypeExecOutput) ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksLivenessProbeTypeExec) *GetApplicationHealthchecksLivenessProbeTypeExec {
		return &v
	}).(GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o GetApplicationHealthchecksLivenessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput) ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutput() GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput) ToGetApplicationHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput) Elem() GetApplicationHealthchecksLivenessProbeTypeExecOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeExec) GetApplicationHealthchecksLivenessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksLivenessProbeTypeExec
		return ret
	}).(GetApplicationHealthchecksLivenessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// GetApplicationHealthchecksLivenessProbeTypeGrpcInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeGrpcArgs and GetApplicationHealthchecksLivenessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeGrpcInput` via:
//
//	GetApplicationHealthchecksLivenessProbeTypeGrpcArgs{...}
type GetApplicationHealthchecksLivenessProbeTypeGrpcInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeGrpcOutput() GetApplicationHealthchecksLivenessProbeTypeGrpcOutput
	ToGetApplicationHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeGrpcOutput
}

type GetApplicationHealthchecksLivenessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GetApplicationHealthchecksLivenessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i GetApplicationHealthchecksLivenessProbeTypeGrpcArgs) ToGetApplicationHealthchecksLivenessProbeTypeGrpcOutput() GetApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeGrpcArgs) ToGetApplicationHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeGrpcOutput)
}

func (i GetApplicationHealthchecksLivenessProbeTypeGrpcArgs) ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeGrpcArgs) ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeGrpcOutput).ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksLivenessProbeTypeGrpcPtrInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeGrpcArgs, GetApplicationHealthchecksLivenessProbeTypeGrpcPtr and GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeGrpcPtrInput` via:
//
//	        GetApplicationHealthchecksLivenessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksLivenessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput
	ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput
}

type getApplicationHealthchecksLivenessProbeTypeGrpcPtrType GetApplicationHealthchecksLivenessProbeTypeGrpcArgs

func GetApplicationHealthchecksLivenessProbeTypeGrpcPtr(v *GetApplicationHealthchecksLivenessProbeTypeGrpcArgs) GetApplicationHealthchecksLivenessProbeTypeGrpcPtrInput {
	return (*getApplicationHealthchecksLivenessProbeTypeGrpcPtrType)(v)
}

func (*getApplicationHealthchecksLivenessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i *getApplicationHealthchecksLivenessProbeTypeGrpcPtrType) ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksLivenessProbeTypeGrpcPtrType) ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeGrpcOutput) ToGetApplicationHealthchecksLivenessProbeTypeGrpcOutput() GetApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeGrpcOutput) ToGetApplicationHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeGrpcOutput) ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksLivenessProbeTypeGrpcOutput) ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksLivenessProbeTypeGrpc) *GetApplicationHealthchecksLivenessProbeTypeGrpc {
		return &v
	}).(GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksLivenessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetApplicationHealthchecksLivenessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) ToGetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) Elem() GetApplicationHealthchecksLivenessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeGrpc) GetApplicationHealthchecksLivenessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksLivenessProbeTypeGrpc
		return ret
	}).(GetApplicationHealthchecksLivenessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// GetApplicationHealthchecksLivenessProbeTypeHttpInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeHttpArgs and GetApplicationHealthchecksLivenessProbeTypeHttpOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeHttpInput` via:
//
//	GetApplicationHealthchecksLivenessProbeTypeHttpArgs{...}
type GetApplicationHealthchecksLivenessProbeTypeHttpInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeHttpOutput() GetApplicationHealthchecksLivenessProbeTypeHttpOutput
	ToGetApplicationHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeHttpOutput
}

type GetApplicationHealthchecksLivenessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (GetApplicationHealthchecksLivenessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i GetApplicationHealthchecksLivenessProbeTypeHttpArgs) ToGetApplicationHealthchecksLivenessProbeTypeHttpOutput() GetApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeHttpArgs) ToGetApplicationHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeHttpOutput)
}

func (i GetApplicationHealthchecksLivenessProbeTypeHttpArgs) ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeHttpArgs) ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeHttpOutput).ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksLivenessProbeTypeHttpPtrInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeHttpArgs, GetApplicationHealthchecksLivenessProbeTypeHttpPtr and GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeHttpPtrInput` via:
//
//	        GetApplicationHealthchecksLivenessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksLivenessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput
	ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput
}

type getApplicationHealthchecksLivenessProbeTypeHttpPtrType GetApplicationHealthchecksLivenessProbeTypeHttpArgs

func GetApplicationHealthchecksLivenessProbeTypeHttpPtr(v *GetApplicationHealthchecksLivenessProbeTypeHttpArgs) GetApplicationHealthchecksLivenessProbeTypeHttpPtrInput {
	return (*getApplicationHealthchecksLivenessProbeTypeHttpPtrType)(v)
}

func (*getApplicationHealthchecksLivenessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i *getApplicationHealthchecksLivenessProbeTypeHttpPtrType) ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksLivenessProbeTypeHttpPtrType) ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeHttpOutput) ToGetApplicationHealthchecksLivenessProbeTypeHttpOutput() GetApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeHttpOutput) ToGetApplicationHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeHttpOutput) ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksLivenessProbeTypeHttpOutput) ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksLivenessProbeTypeHttp) *GetApplicationHealthchecksLivenessProbeTypeHttp {
		return &v
	}).(GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetApplicationHealthchecksLivenessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksLivenessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetApplicationHealthchecksLivenessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) ToGetApplicationHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) Elem() GetApplicationHealthchecksLivenessProbeTypeHttpOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeHttp) GetApplicationHealthchecksLivenessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksLivenessProbeTypeHttp
		return ret
	}).(GetApplicationHealthchecksLivenessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// GetApplicationHealthchecksLivenessProbeTypeTcpInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeTcpArgs and GetApplicationHealthchecksLivenessProbeTypeTcpOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeTcpInput` via:
//
//	GetApplicationHealthchecksLivenessProbeTypeTcpArgs{...}
type GetApplicationHealthchecksLivenessProbeTypeTcpInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeTcpOutput() GetApplicationHealthchecksLivenessProbeTypeTcpOutput
	ToGetApplicationHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeTcpOutput
}

type GetApplicationHealthchecksLivenessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetApplicationHealthchecksLivenessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i GetApplicationHealthchecksLivenessProbeTypeTcpArgs) ToGetApplicationHealthchecksLivenessProbeTypeTcpOutput() GetApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeTcpArgs) ToGetApplicationHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeTcpOutput)
}

func (i GetApplicationHealthchecksLivenessProbeTypeTcpArgs) ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksLivenessProbeTypeTcpArgs) ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeTcpOutput).ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksLivenessProbeTypeTcpPtrInput is an input type that accepts GetApplicationHealthchecksLivenessProbeTypeTcpArgs, GetApplicationHealthchecksLivenessProbeTypeTcpPtr and GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksLivenessProbeTypeTcpPtrInput` via:
//
//	        GetApplicationHealthchecksLivenessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksLivenessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput
	ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Context) GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput
}

type getApplicationHealthchecksLivenessProbeTypeTcpPtrType GetApplicationHealthchecksLivenessProbeTypeTcpArgs

func GetApplicationHealthchecksLivenessProbeTypeTcpPtr(v *GetApplicationHealthchecksLivenessProbeTypeTcpArgs) GetApplicationHealthchecksLivenessProbeTypeTcpPtrInput {
	return (*getApplicationHealthchecksLivenessProbeTypeTcpPtrType)(v)
}

func (*getApplicationHealthchecksLivenessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i *getApplicationHealthchecksLivenessProbeTypeTcpPtrType) ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksLivenessProbeTypeTcpPtrType) ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeTcpOutput) ToGetApplicationHealthchecksLivenessProbeTypeTcpOutput() GetApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeTcpOutput) ToGetApplicationHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeTcpOutput) ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksLivenessProbeTypeTcpOutput) ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksLivenessProbeTypeTcp) *GetApplicationHealthchecksLivenessProbeTypeTcp {
		return &v
	}).(GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetApplicationHealthchecksLivenessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksLivenessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksLivenessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput() GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) ToGetApplicationHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) Elem() GetApplicationHealthchecksLivenessProbeTypeTcpOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeTcp) GetApplicationHealthchecksLivenessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksLivenessProbeTypeTcp
		return ret
	}).(GetApplicationHealthchecksLivenessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksLivenessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type GetApplicationHealthchecksReadinessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetApplicationHealthchecksReadinessProbeType `pulumi:"type"`
}

// GetApplicationHealthchecksReadinessProbeInput is an input type that accepts GetApplicationHealthchecksReadinessProbeArgs and GetApplicationHealthchecksReadinessProbeOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeInput` via:
//
//	GetApplicationHealthchecksReadinessProbeArgs{...}
type GetApplicationHealthchecksReadinessProbeInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeOutput() GetApplicationHealthchecksReadinessProbeOutput
	ToGetApplicationHealthchecksReadinessProbeOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeOutput
}

type GetApplicationHealthchecksReadinessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetApplicationHealthchecksReadinessProbeTypeInput `pulumi:"type"`
}

func (GetApplicationHealthchecksReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbe)(nil)).Elem()
}

func (i GetApplicationHealthchecksReadinessProbeArgs) ToGetApplicationHealthchecksReadinessProbeOutput() GetApplicationHealthchecksReadinessProbeOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeArgs) ToGetApplicationHealthchecksReadinessProbeOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeOutput)
}

func (i GetApplicationHealthchecksReadinessProbeArgs) ToGetApplicationHealthchecksReadinessProbePtrOutput() GetApplicationHealthchecksReadinessProbePtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeArgs) ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeOutput).ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksReadinessProbePtrInput is an input type that accepts GetApplicationHealthchecksReadinessProbeArgs, GetApplicationHealthchecksReadinessProbePtr and GetApplicationHealthchecksReadinessProbePtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbePtrInput` via:
//
//	        GetApplicationHealthchecksReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksReadinessProbePtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbePtrOutput() GetApplicationHealthchecksReadinessProbePtrOutput
	ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbePtrOutput
}

type getApplicationHealthchecksReadinessProbePtrType GetApplicationHealthchecksReadinessProbeArgs

func GetApplicationHealthchecksReadinessProbePtr(v *GetApplicationHealthchecksReadinessProbeArgs) GetApplicationHealthchecksReadinessProbePtrInput {
	return (*getApplicationHealthchecksReadinessProbePtrType)(v)
}

func (*getApplicationHealthchecksReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbe)(nil)).Elem()
}

func (i *getApplicationHealthchecksReadinessProbePtrType) ToGetApplicationHealthchecksReadinessProbePtrOutput() GetApplicationHealthchecksReadinessProbePtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksReadinessProbePtrType) ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbePtrOutput)
}

type GetApplicationHealthchecksReadinessProbeOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbe)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeOutput) ToGetApplicationHealthchecksReadinessProbeOutput() GetApplicationHealthchecksReadinessProbeOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeOutput) ToGetApplicationHealthchecksReadinessProbeOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeOutput) ToGetApplicationHealthchecksReadinessProbePtrOutput() GetApplicationHealthchecksReadinessProbePtrOutput {
	return o.ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksReadinessProbeOutput) ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksReadinessProbe) *GetApplicationHealthchecksReadinessProbe {
		return &v
	}).(GetApplicationHealthchecksReadinessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetApplicationHealthchecksReadinessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetApplicationHealthchecksReadinessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o GetApplicationHealthchecksReadinessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetApplicationHealthchecksReadinessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetApplicationHealthchecksReadinessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetApplicationHealthchecksReadinessProbeOutput) Type() GetApplicationHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbe) GetApplicationHealthchecksReadinessProbeType {
		return v.Type
	}).(GetApplicationHealthchecksReadinessProbeTypeOutput)
}

type GetApplicationHealthchecksReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbe)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbePtrOutput) ToGetApplicationHealthchecksReadinessProbePtrOutput() GetApplicationHealthchecksReadinessProbePtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbePtrOutput) ToGetApplicationHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbePtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbePtrOutput) Elem() GetApplicationHealthchecksReadinessProbeOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbe) GetApplicationHealthchecksReadinessProbe {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksReadinessProbe
		return ret
	}).(GetApplicationHealthchecksReadinessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetApplicationHealthchecksReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetApplicationHealthchecksReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o GetApplicationHealthchecksReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetApplicationHealthchecksReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetApplicationHealthchecksReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetApplicationHealthchecksReadinessProbePtrOutput) Type() GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbe) *GetApplicationHealthchecksReadinessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(GetApplicationHealthchecksReadinessProbeTypePtrOutput)
}

type GetApplicationHealthchecksReadinessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *GetApplicationHealthchecksReadinessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *GetApplicationHealthchecksReadinessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *GetApplicationHealthchecksReadinessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *GetApplicationHealthchecksReadinessProbeTypeTcp `pulumi:"tcp"`
}

// GetApplicationHealthchecksReadinessProbeTypeInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeArgs and GetApplicationHealthchecksReadinessProbeTypeOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeInput` via:
//
//	GetApplicationHealthchecksReadinessProbeTypeArgs{...}
type GetApplicationHealthchecksReadinessProbeTypeInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeOutput() GetApplicationHealthchecksReadinessProbeTypeOutput
	ToGetApplicationHealthchecksReadinessProbeTypeOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeOutput
}

type GetApplicationHealthchecksReadinessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec GetApplicationHealthchecksReadinessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc GetApplicationHealthchecksReadinessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http GetApplicationHealthchecksReadinessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp GetApplicationHealthchecksReadinessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (GetApplicationHealthchecksReadinessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i GetApplicationHealthchecksReadinessProbeTypeArgs) ToGetApplicationHealthchecksReadinessProbeTypeOutput() GetApplicationHealthchecksReadinessProbeTypeOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeArgs) ToGetApplicationHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeOutput)
}

func (i GetApplicationHealthchecksReadinessProbeTypeArgs) ToGetApplicationHealthchecksReadinessProbeTypePtrOutput() GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeArgs) ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeOutput).ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksReadinessProbeTypePtrInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeArgs, GetApplicationHealthchecksReadinessProbeTypePtr and GetApplicationHealthchecksReadinessProbeTypePtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypePtrInput` via:
//
//	        GetApplicationHealthchecksReadinessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksReadinessProbeTypePtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypePtrOutput() GetApplicationHealthchecksReadinessProbeTypePtrOutput
	ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypePtrOutput
}

type getApplicationHealthchecksReadinessProbeTypePtrType GetApplicationHealthchecksReadinessProbeTypeArgs

func GetApplicationHealthchecksReadinessProbeTypePtr(v *GetApplicationHealthchecksReadinessProbeTypeArgs) GetApplicationHealthchecksReadinessProbeTypePtrInput {
	return (*getApplicationHealthchecksReadinessProbeTypePtrType)(v)
}

func (*getApplicationHealthchecksReadinessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i *getApplicationHealthchecksReadinessProbeTypePtrType) ToGetApplicationHealthchecksReadinessProbeTypePtrOutput() GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksReadinessProbeTypePtrType) ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypePtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeOutput) ToGetApplicationHealthchecksReadinessProbeTypeOutput() GetApplicationHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeOutput) ToGetApplicationHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeOutput) ToGetApplicationHealthchecksReadinessProbeTypePtrOutput() GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o.ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksReadinessProbeTypeOutput) ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeType {
		return &v
	}).(GetApplicationHealthchecksReadinessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetApplicationHealthchecksReadinessProbeTypeOutput) Exec() GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeTypeExec {
		return v.Exec
	}).(GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetApplicationHealthchecksReadinessProbeTypeOutput) Grpc() GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeTypeGrpc {
		return v.Grpc
	}).(GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetApplicationHealthchecksReadinessProbeTypeOutput) Http() GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeTypeHttp {
		return v.Http
	}).(GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetApplicationHealthchecksReadinessProbeTypeOutput) Tcp() GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeTypeTcp {
		return v.Tcp
	}).(GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypePtrOutput) ToGetApplicationHealthchecksReadinessProbeTypePtrOutput() GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypePtrOutput) ToGetApplicationHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypePtrOutput) Elem() GetApplicationHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeType) GetApplicationHealthchecksReadinessProbeType {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksReadinessProbeType
		return ret
	}).(GetApplicationHealthchecksReadinessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetApplicationHealthchecksReadinessProbeTypePtrOutput) Exec() GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetApplicationHealthchecksReadinessProbeTypePtrOutput) Grpc() GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetApplicationHealthchecksReadinessProbeTypePtrOutput) Http() GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetApplicationHealthchecksReadinessProbeTypePtrOutput) Tcp() GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeType) *GetApplicationHealthchecksReadinessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// GetApplicationHealthchecksReadinessProbeTypeExecInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeExecArgs and GetApplicationHealthchecksReadinessProbeTypeExecOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeExecInput` via:
//
//	GetApplicationHealthchecksReadinessProbeTypeExecArgs{...}
type GetApplicationHealthchecksReadinessProbeTypeExecInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeExecOutput() GetApplicationHealthchecksReadinessProbeTypeExecOutput
	ToGetApplicationHealthchecksReadinessProbeTypeExecOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeExecOutput
}

type GetApplicationHealthchecksReadinessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (GetApplicationHealthchecksReadinessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i GetApplicationHealthchecksReadinessProbeTypeExecArgs) ToGetApplicationHealthchecksReadinessProbeTypeExecOutput() GetApplicationHealthchecksReadinessProbeTypeExecOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeExecOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeExecArgs) ToGetApplicationHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeExecOutput)
}

func (i GetApplicationHealthchecksReadinessProbeTypeExecArgs) ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutput() GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeExecArgs) ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeExecOutput).ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksReadinessProbeTypeExecPtrInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeExecArgs, GetApplicationHealthchecksReadinessProbeTypeExecPtr and GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeExecPtrInput` via:
//
//	        GetApplicationHealthchecksReadinessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksReadinessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutput() GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput
	ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput
}

type getApplicationHealthchecksReadinessProbeTypeExecPtrType GetApplicationHealthchecksReadinessProbeTypeExecArgs

func GetApplicationHealthchecksReadinessProbeTypeExecPtr(v *GetApplicationHealthchecksReadinessProbeTypeExecArgs) GetApplicationHealthchecksReadinessProbeTypeExecPtrInput {
	return (*getApplicationHealthchecksReadinessProbeTypeExecPtrType)(v)
}

func (*getApplicationHealthchecksReadinessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i *getApplicationHealthchecksReadinessProbeTypeExecPtrType) ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutput() GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksReadinessProbeTypeExecPtrType) ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeExecOutput) ToGetApplicationHealthchecksReadinessProbeTypeExecOutput() GetApplicationHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeExecOutput) ToGetApplicationHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeExecOutput) ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutput() GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksReadinessProbeTypeExecOutput) ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksReadinessProbeTypeExec) *GetApplicationHealthchecksReadinessProbeTypeExec {
		return &v
	}).(GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o GetApplicationHealthchecksReadinessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput) ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutput() GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput) ToGetApplicationHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput) Elem() GetApplicationHealthchecksReadinessProbeTypeExecOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeExec) GetApplicationHealthchecksReadinessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksReadinessProbeTypeExec
		return ret
	}).(GetApplicationHealthchecksReadinessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// GetApplicationHealthchecksReadinessProbeTypeGrpcInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeGrpcArgs and GetApplicationHealthchecksReadinessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeGrpcInput` via:
//
//	GetApplicationHealthchecksReadinessProbeTypeGrpcArgs{...}
type GetApplicationHealthchecksReadinessProbeTypeGrpcInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeGrpcOutput() GetApplicationHealthchecksReadinessProbeTypeGrpcOutput
	ToGetApplicationHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeGrpcOutput
}

type GetApplicationHealthchecksReadinessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GetApplicationHealthchecksReadinessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i GetApplicationHealthchecksReadinessProbeTypeGrpcArgs) ToGetApplicationHealthchecksReadinessProbeTypeGrpcOutput() GetApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeGrpcArgs) ToGetApplicationHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeGrpcOutput)
}

func (i GetApplicationHealthchecksReadinessProbeTypeGrpcArgs) ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeGrpcArgs) ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeGrpcOutput).ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksReadinessProbeTypeGrpcPtrInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeGrpcArgs, GetApplicationHealthchecksReadinessProbeTypeGrpcPtr and GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeGrpcPtrInput` via:
//
//	        GetApplicationHealthchecksReadinessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksReadinessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput
	ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput
}

type getApplicationHealthchecksReadinessProbeTypeGrpcPtrType GetApplicationHealthchecksReadinessProbeTypeGrpcArgs

func GetApplicationHealthchecksReadinessProbeTypeGrpcPtr(v *GetApplicationHealthchecksReadinessProbeTypeGrpcArgs) GetApplicationHealthchecksReadinessProbeTypeGrpcPtrInput {
	return (*getApplicationHealthchecksReadinessProbeTypeGrpcPtrType)(v)
}

func (*getApplicationHealthchecksReadinessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i *getApplicationHealthchecksReadinessProbeTypeGrpcPtrType) ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksReadinessProbeTypeGrpcPtrType) ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeGrpcOutput) ToGetApplicationHealthchecksReadinessProbeTypeGrpcOutput() GetApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeGrpcOutput) ToGetApplicationHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeGrpcOutput) ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksReadinessProbeTypeGrpcOutput) ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksReadinessProbeTypeGrpc) *GetApplicationHealthchecksReadinessProbeTypeGrpc {
		return &v
	}).(GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksReadinessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetApplicationHealthchecksReadinessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput() GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) ToGetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) Elem() GetApplicationHealthchecksReadinessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeGrpc) GetApplicationHealthchecksReadinessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksReadinessProbeTypeGrpc
		return ret
	}).(GetApplicationHealthchecksReadinessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// GetApplicationHealthchecksReadinessProbeTypeHttpInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeHttpArgs and GetApplicationHealthchecksReadinessProbeTypeHttpOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeHttpInput` via:
//
//	GetApplicationHealthchecksReadinessProbeTypeHttpArgs{...}
type GetApplicationHealthchecksReadinessProbeTypeHttpInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeHttpOutput() GetApplicationHealthchecksReadinessProbeTypeHttpOutput
	ToGetApplicationHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeHttpOutput
}

type GetApplicationHealthchecksReadinessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (GetApplicationHealthchecksReadinessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i GetApplicationHealthchecksReadinessProbeTypeHttpArgs) ToGetApplicationHealthchecksReadinessProbeTypeHttpOutput() GetApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeHttpArgs) ToGetApplicationHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeHttpOutput)
}

func (i GetApplicationHealthchecksReadinessProbeTypeHttpArgs) ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeHttpArgs) ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeHttpOutput).ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksReadinessProbeTypeHttpPtrInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeHttpArgs, GetApplicationHealthchecksReadinessProbeTypeHttpPtr and GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeHttpPtrInput` via:
//
//	        GetApplicationHealthchecksReadinessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksReadinessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput
	ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput
}

type getApplicationHealthchecksReadinessProbeTypeHttpPtrType GetApplicationHealthchecksReadinessProbeTypeHttpArgs

func GetApplicationHealthchecksReadinessProbeTypeHttpPtr(v *GetApplicationHealthchecksReadinessProbeTypeHttpArgs) GetApplicationHealthchecksReadinessProbeTypeHttpPtrInput {
	return (*getApplicationHealthchecksReadinessProbeTypeHttpPtrType)(v)
}

func (*getApplicationHealthchecksReadinessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i *getApplicationHealthchecksReadinessProbeTypeHttpPtrType) ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksReadinessProbeTypeHttpPtrType) ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeHttpOutput) ToGetApplicationHealthchecksReadinessProbeTypeHttpOutput() GetApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeHttpOutput) ToGetApplicationHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeHttpOutput) ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksReadinessProbeTypeHttpOutput) ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksReadinessProbeTypeHttp) *GetApplicationHealthchecksReadinessProbeTypeHttp {
		return &v
	}).(GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetApplicationHealthchecksReadinessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksReadinessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetApplicationHealthchecksReadinessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) ToGetApplicationHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) Elem() GetApplicationHealthchecksReadinessProbeTypeHttpOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeHttp) GetApplicationHealthchecksReadinessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksReadinessProbeTypeHttp
		return ret
	}).(GetApplicationHealthchecksReadinessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// GetApplicationHealthchecksReadinessProbeTypeTcpInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeTcpArgs and GetApplicationHealthchecksReadinessProbeTypeTcpOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeTcpInput` via:
//
//	GetApplicationHealthchecksReadinessProbeTypeTcpArgs{...}
type GetApplicationHealthchecksReadinessProbeTypeTcpInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeTcpOutput() GetApplicationHealthchecksReadinessProbeTypeTcpOutput
	ToGetApplicationHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeTcpOutput
}

type GetApplicationHealthchecksReadinessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetApplicationHealthchecksReadinessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i GetApplicationHealthchecksReadinessProbeTypeTcpArgs) ToGetApplicationHealthchecksReadinessProbeTypeTcpOutput() GetApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeTcpArgs) ToGetApplicationHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeTcpOutput)
}

func (i GetApplicationHealthchecksReadinessProbeTypeTcpArgs) ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i GetApplicationHealthchecksReadinessProbeTypeTcpArgs) ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeTcpOutput).ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx)
}

// GetApplicationHealthchecksReadinessProbeTypeTcpPtrInput is an input type that accepts GetApplicationHealthchecksReadinessProbeTypeTcpArgs, GetApplicationHealthchecksReadinessProbeTypeTcpPtr and GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `GetApplicationHealthchecksReadinessProbeTypeTcpPtrInput` via:
//
//	        GetApplicationHealthchecksReadinessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type GetApplicationHealthchecksReadinessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput
	ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Context) GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput
}

type getApplicationHealthchecksReadinessProbeTypeTcpPtrType GetApplicationHealthchecksReadinessProbeTypeTcpArgs

func GetApplicationHealthchecksReadinessProbeTypeTcpPtr(v *GetApplicationHealthchecksReadinessProbeTypeTcpArgs) GetApplicationHealthchecksReadinessProbeTypeTcpPtrInput {
	return (*getApplicationHealthchecksReadinessProbeTypeTcpPtrType)(v)
}

func (*getApplicationHealthchecksReadinessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i *getApplicationHealthchecksReadinessProbeTypeTcpPtrType) ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *getApplicationHealthchecksReadinessProbeTypeTcpPtrType) ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeTcpOutput) ToGetApplicationHealthchecksReadinessProbeTypeTcpOutput() GetApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeTcpOutput) ToGetApplicationHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeTcpOutput) ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o GetApplicationHealthchecksReadinessProbeTypeTcpOutput) ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetApplicationHealthchecksReadinessProbeTypeTcp) *GetApplicationHealthchecksReadinessProbeTypeTcp {
		return &v
	}).(GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetApplicationHealthchecksReadinessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksReadinessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationHealthchecksReadinessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetApplicationHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput() GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) ToGetApplicationHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) Elem() GetApplicationHealthchecksReadinessProbeTypeTcpOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeTcp) GetApplicationHealthchecksReadinessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret GetApplicationHealthchecksReadinessProbeTypeTcp
		return ret
	}).(GetApplicationHealthchecksReadinessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetApplicationHealthchecksReadinessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type GetApplicationPort struct {
	// External port of the application.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort int `pulumi:"externalPort"`
	// Id of the port.
	Id string `pulumi:"id"`
	// Internal port of the application.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort int `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault bool `pulumi:"isDefault"`
	// Name of the port.
	Name string `pulumi:"name"`
	// Protocol used for the port of the application.
	// 	- Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
	// 	- Default: `HTTP`.
	Protocol string `pulumi:"protocol"`
	// Specify if the port is exposed to the world or not for this application.
	PubliclyAccessible bool `pulumi:"publiclyAccessible"`
}

// GetApplicationPortInput is an input type that accepts GetApplicationPortArgs and GetApplicationPortOutput values.
// You can construct a concrete instance of `GetApplicationPortInput` via:
//
//	GetApplicationPortArgs{...}
type GetApplicationPortInput interface {
	pulumi.Input

	ToGetApplicationPortOutput() GetApplicationPortOutput
	ToGetApplicationPortOutputWithContext(context.Context) GetApplicationPortOutput
}

type GetApplicationPortArgs struct {
	// External port of the application.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort pulumi.IntInput `pulumi:"externalPort"`
	// Id of the port.
	Id pulumi.StringInput `pulumi:"id"`
	// Internal port of the application.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort pulumi.IntInput `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of the port.
	Name pulumi.StringInput `pulumi:"name"`
	// Protocol used for the port of the application.
	// 	- Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
	// 	- Default: `HTTP`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Specify if the port is exposed to the world or not for this application.
	PubliclyAccessible pulumi.BoolInput `pulumi:"publiclyAccessible"`
}

func (GetApplicationPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationPort)(nil)).Elem()
}

func (i GetApplicationPortArgs) ToGetApplicationPortOutput() GetApplicationPortOutput {
	return i.ToGetApplicationPortOutputWithContext(context.Background())
}

func (i GetApplicationPortArgs) ToGetApplicationPortOutputWithContext(ctx context.Context) GetApplicationPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationPortOutput)
}

// GetApplicationPortArrayInput is an input type that accepts GetApplicationPortArray and GetApplicationPortArrayOutput values.
// You can construct a concrete instance of `GetApplicationPortArrayInput` via:
//
//	GetApplicationPortArray{ GetApplicationPortArgs{...} }
type GetApplicationPortArrayInput interface {
	pulumi.Input

	ToGetApplicationPortArrayOutput() GetApplicationPortArrayOutput
	ToGetApplicationPortArrayOutputWithContext(context.Context) GetApplicationPortArrayOutput
}

type GetApplicationPortArray []GetApplicationPortInput

func (GetApplicationPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationPort)(nil)).Elem()
}

func (i GetApplicationPortArray) ToGetApplicationPortArrayOutput() GetApplicationPortArrayOutput {
	return i.ToGetApplicationPortArrayOutputWithContext(context.Background())
}

func (i GetApplicationPortArray) ToGetApplicationPortArrayOutputWithContext(ctx context.Context) GetApplicationPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationPortArrayOutput)
}

type GetApplicationPortOutput struct{ *pulumi.OutputState }

func (GetApplicationPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationPort)(nil)).Elem()
}

func (o GetApplicationPortOutput) ToGetApplicationPortOutput() GetApplicationPortOutput {
	return o
}

func (o GetApplicationPortOutput) ToGetApplicationPortOutputWithContext(ctx context.Context) GetApplicationPortOutput {
	return o
}

// External port of the application.
//   - Required if: `ports.publicly_accessible=true`.
//   - Must be: `>= 1` and `<= 65535`.
func (o GetApplicationPortOutput) ExternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationPort) int { return v.ExternalPort }).(pulumi.IntOutput)
}

// Id of the port.
func (o GetApplicationPortOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationPort) string { return v.Id }).(pulumi.StringOutput)
}

// Internal port of the application.
//   - Must be: `>= 1` and `<= 65535`.
func (o GetApplicationPortOutput) InternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationPort) int { return v.InternalPort }).(pulumi.IntOutput)
}

// If this port will be used for the root domain
func (o GetApplicationPortOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationPort) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of the port.
func (o GetApplicationPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationPort) string { return v.Name }).(pulumi.StringOutput)
}

// Protocol used for the port of the application.
//   - Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
//   - Default: `HTTP`.
func (o GetApplicationPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationPort) string { return v.Protocol }).(pulumi.StringOutput)
}

// Specify if the port is exposed to the world or not for this application.
func (o GetApplicationPortOutput) PubliclyAccessible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationPort) bool { return v.PubliclyAccessible }).(pulumi.BoolOutput)
}

type GetApplicationPortArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationPort)(nil)).Elem()
}

func (o GetApplicationPortArrayOutput) ToGetApplicationPortArrayOutput() GetApplicationPortArrayOutput {
	return o
}

func (o GetApplicationPortArrayOutput) ToGetApplicationPortArrayOutputWithContext(ctx context.Context) GetApplicationPortArrayOutput {
	return o
}

func (o GetApplicationPortArrayOutput) Index(i pulumi.IntInput) GetApplicationPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationPort {
		return vs[0].([]GetApplicationPort)[vs[1].(int)]
	}).(GetApplicationPortOutput)
}

type GetApplicationSecret struct {
	// Id of the secret.
	Id string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// GetApplicationSecretInput is an input type that accepts GetApplicationSecretArgs and GetApplicationSecretOutput values.
// You can construct a concrete instance of `GetApplicationSecretInput` via:
//
//	GetApplicationSecretArgs{...}
type GetApplicationSecretInput interface {
	pulumi.Input

	ToGetApplicationSecretOutput() GetApplicationSecretOutput
	ToGetApplicationSecretOutputWithContext(context.Context) GetApplicationSecretOutput
}

type GetApplicationSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSecret)(nil)).Elem()
}

func (i GetApplicationSecretArgs) ToGetApplicationSecretOutput() GetApplicationSecretOutput {
	return i.ToGetApplicationSecretOutputWithContext(context.Background())
}

func (i GetApplicationSecretArgs) ToGetApplicationSecretOutputWithContext(ctx context.Context) GetApplicationSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSecretOutput)
}

// GetApplicationSecretArrayInput is an input type that accepts GetApplicationSecretArray and GetApplicationSecretArrayOutput values.
// You can construct a concrete instance of `GetApplicationSecretArrayInput` via:
//
//	GetApplicationSecretArray{ GetApplicationSecretArgs{...} }
type GetApplicationSecretArrayInput interface {
	pulumi.Input

	ToGetApplicationSecretArrayOutput() GetApplicationSecretArrayOutput
	ToGetApplicationSecretArrayOutputWithContext(context.Context) GetApplicationSecretArrayOutput
}

type GetApplicationSecretArray []GetApplicationSecretInput

func (GetApplicationSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSecret)(nil)).Elem()
}

func (i GetApplicationSecretArray) ToGetApplicationSecretArrayOutput() GetApplicationSecretArrayOutput {
	return i.ToGetApplicationSecretArrayOutputWithContext(context.Background())
}

func (i GetApplicationSecretArray) ToGetApplicationSecretArrayOutputWithContext(ctx context.Context) GetApplicationSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSecretArrayOutput)
}

type GetApplicationSecretOutput struct{ *pulumi.OutputState }

func (GetApplicationSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSecret)(nil)).Elem()
}

func (o GetApplicationSecretOutput) ToGetApplicationSecretOutput() GetApplicationSecretOutput {
	return o
}

func (o GetApplicationSecretOutput) ToGetApplicationSecretOutputWithContext(ctx context.Context) GetApplicationSecretOutput {
	return o
}

// Id of the secret.
func (o GetApplicationSecretOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecret) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the secret.
func (o GetApplicationSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o GetApplicationSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecret) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationSecretArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSecret)(nil)).Elem()
}

func (o GetApplicationSecretArrayOutput) ToGetApplicationSecretArrayOutput() GetApplicationSecretArrayOutput {
	return o
}

func (o GetApplicationSecretArrayOutput) ToGetApplicationSecretArrayOutputWithContext(ctx context.Context) GetApplicationSecretArrayOutput {
	return o
}

func (o GetApplicationSecretArrayOutput) Index(i pulumi.IntInput) GetApplicationSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSecret {
		return vs[0].([]GetApplicationSecret)[vs[1].(int)]
	}).(GetApplicationSecretOutput)
}

type GetApplicationSecretAlias struct {
	// Id of the secret alias.
	Id string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// GetApplicationSecretAliasInput is an input type that accepts GetApplicationSecretAliasArgs and GetApplicationSecretAliasOutput values.
// You can construct a concrete instance of `GetApplicationSecretAliasInput` via:
//
//	GetApplicationSecretAliasArgs{...}
type GetApplicationSecretAliasInput interface {
	pulumi.Input

	ToGetApplicationSecretAliasOutput() GetApplicationSecretAliasOutput
	ToGetApplicationSecretAliasOutputWithContext(context.Context) GetApplicationSecretAliasOutput
}

type GetApplicationSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSecretAlias)(nil)).Elem()
}

func (i GetApplicationSecretAliasArgs) ToGetApplicationSecretAliasOutput() GetApplicationSecretAliasOutput {
	return i.ToGetApplicationSecretAliasOutputWithContext(context.Background())
}

func (i GetApplicationSecretAliasArgs) ToGetApplicationSecretAliasOutputWithContext(ctx context.Context) GetApplicationSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSecretAliasOutput)
}

// GetApplicationSecretAliasArrayInput is an input type that accepts GetApplicationSecretAliasArray and GetApplicationSecretAliasArrayOutput values.
// You can construct a concrete instance of `GetApplicationSecretAliasArrayInput` via:
//
//	GetApplicationSecretAliasArray{ GetApplicationSecretAliasArgs{...} }
type GetApplicationSecretAliasArrayInput interface {
	pulumi.Input

	ToGetApplicationSecretAliasArrayOutput() GetApplicationSecretAliasArrayOutput
	ToGetApplicationSecretAliasArrayOutputWithContext(context.Context) GetApplicationSecretAliasArrayOutput
}

type GetApplicationSecretAliasArray []GetApplicationSecretAliasInput

func (GetApplicationSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSecretAlias)(nil)).Elem()
}

func (i GetApplicationSecretAliasArray) ToGetApplicationSecretAliasArrayOutput() GetApplicationSecretAliasArrayOutput {
	return i.ToGetApplicationSecretAliasArrayOutputWithContext(context.Background())
}

func (i GetApplicationSecretAliasArray) ToGetApplicationSecretAliasArrayOutputWithContext(ctx context.Context) GetApplicationSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSecretAliasArrayOutput)
}

type GetApplicationSecretAliasOutput struct{ *pulumi.OutputState }

func (GetApplicationSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSecretAlias)(nil)).Elem()
}

func (o GetApplicationSecretAliasOutput) ToGetApplicationSecretAliasOutput() GetApplicationSecretAliasOutput {
	return o
}

func (o GetApplicationSecretAliasOutput) ToGetApplicationSecretAliasOutputWithContext(ctx context.Context) GetApplicationSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o GetApplicationSecretAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecretAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret alias.
func (o GetApplicationSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o GetApplicationSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSecretAlias)(nil)).Elem()
}

func (o GetApplicationSecretAliasArrayOutput) ToGetApplicationSecretAliasArrayOutput() GetApplicationSecretAliasArrayOutput {
	return o
}

func (o GetApplicationSecretAliasArrayOutput) ToGetApplicationSecretAliasArrayOutputWithContext(ctx context.Context) GetApplicationSecretAliasArrayOutput {
	return o
}

func (o GetApplicationSecretAliasArrayOutput) Index(i pulumi.IntInput) GetApplicationSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSecretAlias {
		return vs[0].([]GetApplicationSecretAlias)[vs[1].(int)]
	}).(GetApplicationSecretAliasOutput)
}

type GetApplicationSecretOverride struct {
	// Id of the secret override.
	Id string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// GetApplicationSecretOverrideInput is an input type that accepts GetApplicationSecretOverrideArgs and GetApplicationSecretOverrideOutput values.
// You can construct a concrete instance of `GetApplicationSecretOverrideInput` via:
//
//	GetApplicationSecretOverrideArgs{...}
type GetApplicationSecretOverrideInput interface {
	pulumi.Input

	ToGetApplicationSecretOverrideOutput() GetApplicationSecretOverrideOutput
	ToGetApplicationSecretOverrideOutputWithContext(context.Context) GetApplicationSecretOverrideOutput
}

type GetApplicationSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSecretOverride)(nil)).Elem()
}

func (i GetApplicationSecretOverrideArgs) ToGetApplicationSecretOverrideOutput() GetApplicationSecretOverrideOutput {
	return i.ToGetApplicationSecretOverrideOutputWithContext(context.Background())
}

func (i GetApplicationSecretOverrideArgs) ToGetApplicationSecretOverrideOutputWithContext(ctx context.Context) GetApplicationSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSecretOverrideOutput)
}

// GetApplicationSecretOverrideArrayInput is an input type that accepts GetApplicationSecretOverrideArray and GetApplicationSecretOverrideArrayOutput values.
// You can construct a concrete instance of `GetApplicationSecretOverrideArrayInput` via:
//
//	GetApplicationSecretOverrideArray{ GetApplicationSecretOverrideArgs{...} }
type GetApplicationSecretOverrideArrayInput interface {
	pulumi.Input

	ToGetApplicationSecretOverrideArrayOutput() GetApplicationSecretOverrideArrayOutput
	ToGetApplicationSecretOverrideArrayOutputWithContext(context.Context) GetApplicationSecretOverrideArrayOutput
}

type GetApplicationSecretOverrideArray []GetApplicationSecretOverrideInput

func (GetApplicationSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSecretOverride)(nil)).Elem()
}

func (i GetApplicationSecretOverrideArray) ToGetApplicationSecretOverrideArrayOutput() GetApplicationSecretOverrideArrayOutput {
	return i.ToGetApplicationSecretOverrideArrayOutputWithContext(context.Background())
}

func (i GetApplicationSecretOverrideArray) ToGetApplicationSecretOverrideArrayOutputWithContext(ctx context.Context) GetApplicationSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationSecretOverrideArrayOutput)
}

type GetApplicationSecretOverrideOutput struct{ *pulumi.OutputState }

func (GetApplicationSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationSecretOverride)(nil)).Elem()
}

func (o GetApplicationSecretOverrideOutput) ToGetApplicationSecretOverrideOutput() GetApplicationSecretOverrideOutput {
	return o
}

func (o GetApplicationSecretOverrideOutput) ToGetApplicationSecretOverrideOutputWithContext(ctx context.Context) GetApplicationSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o GetApplicationSecretOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecretOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret override.
func (o GetApplicationSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o GetApplicationSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationSecretOverride)(nil)).Elem()
}

func (o GetApplicationSecretOverrideArrayOutput) ToGetApplicationSecretOverrideArrayOutput() GetApplicationSecretOverrideArrayOutput {
	return o
}

func (o GetApplicationSecretOverrideArrayOutput) ToGetApplicationSecretOverrideArrayOutputWithContext(ctx context.Context) GetApplicationSecretOverrideArrayOutput {
	return o
}

func (o GetApplicationSecretOverrideArrayOutput) Index(i pulumi.IntInput) GetApplicationSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationSecretOverride {
		return vs[0].([]GetApplicationSecretOverride)[vs[1].(int)]
	}).(GetApplicationSecretOverrideOutput)
}

type GetApplicationStorage struct {
	// Id of the storage.
	Id string `pulumi:"id"`
	// Mount point of the storage for the application.
	MountPoint string `pulumi:"mountPoint"`
	// Size of the storage for the application in GB [1024MB = 1GB].
	// 	- Must be: `>= 1`.
	Size int `pulumi:"size"`
	// Type of the storage for the application.
	// 	- Can be: `FAST_SSD`.
	Type string `pulumi:"type"`
}

// GetApplicationStorageInput is an input type that accepts GetApplicationStorageArgs and GetApplicationStorageOutput values.
// You can construct a concrete instance of `GetApplicationStorageInput` via:
//
//	GetApplicationStorageArgs{...}
type GetApplicationStorageInput interface {
	pulumi.Input

	ToGetApplicationStorageOutput() GetApplicationStorageOutput
	ToGetApplicationStorageOutputWithContext(context.Context) GetApplicationStorageOutput
}

type GetApplicationStorageArgs struct {
	// Id of the storage.
	Id pulumi.StringInput `pulumi:"id"`
	// Mount point of the storage for the application.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// Size of the storage for the application in GB [1024MB = 1GB].
	// 	- Must be: `>= 1`.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of the storage for the application.
	// 	- Can be: `FAST_SSD`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApplicationStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStorage)(nil)).Elem()
}

func (i GetApplicationStorageArgs) ToGetApplicationStorageOutput() GetApplicationStorageOutput {
	return i.ToGetApplicationStorageOutputWithContext(context.Background())
}

func (i GetApplicationStorageArgs) ToGetApplicationStorageOutputWithContext(ctx context.Context) GetApplicationStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStorageOutput)
}

// GetApplicationStorageArrayInput is an input type that accepts GetApplicationStorageArray and GetApplicationStorageArrayOutput values.
// You can construct a concrete instance of `GetApplicationStorageArrayInput` via:
//
//	GetApplicationStorageArray{ GetApplicationStorageArgs{...} }
type GetApplicationStorageArrayInput interface {
	pulumi.Input

	ToGetApplicationStorageArrayOutput() GetApplicationStorageArrayOutput
	ToGetApplicationStorageArrayOutputWithContext(context.Context) GetApplicationStorageArrayOutput
}

type GetApplicationStorageArray []GetApplicationStorageInput

func (GetApplicationStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationStorage)(nil)).Elem()
}

func (i GetApplicationStorageArray) ToGetApplicationStorageArrayOutput() GetApplicationStorageArrayOutput {
	return i.ToGetApplicationStorageArrayOutputWithContext(context.Background())
}

func (i GetApplicationStorageArray) ToGetApplicationStorageArrayOutputWithContext(ctx context.Context) GetApplicationStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationStorageArrayOutput)
}

type GetApplicationStorageOutput struct{ *pulumi.OutputState }

func (GetApplicationStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationStorage)(nil)).Elem()
}

func (o GetApplicationStorageOutput) ToGetApplicationStorageOutput() GetApplicationStorageOutput {
	return o
}

func (o GetApplicationStorageOutput) ToGetApplicationStorageOutputWithContext(ctx context.Context) GetApplicationStorageOutput {
	return o
}

// Id of the storage.
func (o GetApplicationStorageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStorage) string { return v.Id }).(pulumi.StringOutput)
}

// Mount point of the storage for the application.
func (o GetApplicationStorageOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStorage) string { return v.MountPoint }).(pulumi.StringOutput)
}

// Size of the storage for the application in GB [1024MB = 1GB].
//   - Must be: `>= 1`.
func (o GetApplicationStorageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationStorage) int { return v.Size }).(pulumi.IntOutput)
}

// Type of the storage for the application.
//   - Can be: `FAST_SSD`.
func (o GetApplicationStorageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationStorage) string { return v.Type }).(pulumi.StringOutput)
}

type GetApplicationStorageArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationStorage)(nil)).Elem()
}

func (o GetApplicationStorageArrayOutput) ToGetApplicationStorageArrayOutput() GetApplicationStorageArrayOutput {
	return o
}

func (o GetApplicationStorageArrayOutput) ToGetApplicationStorageArrayOutputWithContext(ctx context.Context) GetApplicationStorageArrayOutput {
	return o
}

func (o GetApplicationStorageArrayOutput) Index(i pulumi.IntInput) GetApplicationStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationStorage {
		return vs[0].([]GetApplicationStorage)[vs[1].(int)]
	}).(GetApplicationStorageOutput)
}

type GetClusterFeatures struct {
	// Network configuration if you want to install qovery on an existing VPC
	ExistingVpc *GetClusterFeaturesExistingVpc `pulumi:"existingVpc"`
	// Static IP (AWS only) [NOTE: can't be updated after creation].
	// 	- Default: `false`.
	StaticIp bool `pulumi:"staticIp"`
	// Custom VPC subnet (AWS only) [NOTE: can't be updated after creation].
	// 	- Default: `10.0.0.0/16`.
	VpcSubnet string `pulumi:"vpcSubnet"`
}

// GetClusterFeaturesInput is an input type that accepts GetClusterFeaturesArgs and GetClusterFeaturesOutput values.
// You can construct a concrete instance of `GetClusterFeaturesInput` via:
//
//	GetClusterFeaturesArgs{...}
type GetClusterFeaturesInput interface {
	pulumi.Input

	ToGetClusterFeaturesOutput() GetClusterFeaturesOutput
	ToGetClusterFeaturesOutputWithContext(context.Context) GetClusterFeaturesOutput
}

type GetClusterFeaturesArgs struct {
	// Network configuration if you want to install qovery on an existing VPC
	ExistingVpc GetClusterFeaturesExistingVpcPtrInput `pulumi:"existingVpc"`
	// Static IP (AWS only) [NOTE: can't be updated after creation].
	// 	- Default: `false`.
	StaticIp pulumi.BoolInput `pulumi:"staticIp"`
	// Custom VPC subnet (AWS only) [NOTE: can't be updated after creation].
	// 	- Default: `10.0.0.0/16`.
	VpcSubnet pulumi.StringInput `pulumi:"vpcSubnet"`
}

func (GetClusterFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterFeatures)(nil)).Elem()
}

func (i GetClusterFeaturesArgs) ToGetClusterFeaturesOutput() GetClusterFeaturesOutput {
	return i.ToGetClusterFeaturesOutputWithContext(context.Background())
}

func (i GetClusterFeaturesArgs) ToGetClusterFeaturesOutputWithContext(ctx context.Context) GetClusterFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterFeaturesOutput)
}

func (i GetClusterFeaturesArgs) ToGetClusterFeaturesPtrOutput() GetClusterFeaturesPtrOutput {
	return i.ToGetClusterFeaturesPtrOutputWithContext(context.Background())
}

func (i GetClusterFeaturesArgs) ToGetClusterFeaturesPtrOutputWithContext(ctx context.Context) GetClusterFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterFeaturesOutput).ToGetClusterFeaturesPtrOutputWithContext(ctx)
}

// GetClusterFeaturesPtrInput is an input type that accepts GetClusterFeaturesArgs, GetClusterFeaturesPtr and GetClusterFeaturesPtrOutput values.
// You can construct a concrete instance of `GetClusterFeaturesPtrInput` via:
//
//	        GetClusterFeaturesArgs{...}
//
//	or:
//
//	        nil
type GetClusterFeaturesPtrInput interface {
	pulumi.Input

	ToGetClusterFeaturesPtrOutput() GetClusterFeaturesPtrOutput
	ToGetClusterFeaturesPtrOutputWithContext(context.Context) GetClusterFeaturesPtrOutput
}

type getClusterFeaturesPtrType GetClusterFeaturesArgs

func GetClusterFeaturesPtr(v *GetClusterFeaturesArgs) GetClusterFeaturesPtrInput {
	return (*getClusterFeaturesPtrType)(v)
}

func (*getClusterFeaturesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetClusterFeatures)(nil)).Elem()
}

func (i *getClusterFeaturesPtrType) ToGetClusterFeaturesPtrOutput() GetClusterFeaturesPtrOutput {
	return i.ToGetClusterFeaturesPtrOutputWithContext(context.Background())
}

func (i *getClusterFeaturesPtrType) ToGetClusterFeaturesPtrOutputWithContext(ctx context.Context) GetClusterFeaturesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterFeaturesPtrOutput)
}

type GetClusterFeaturesOutput struct{ *pulumi.OutputState }

func (GetClusterFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterFeatures)(nil)).Elem()
}

func (o GetClusterFeaturesOutput) ToGetClusterFeaturesOutput() GetClusterFeaturesOutput {
	return o
}

func (o GetClusterFeaturesOutput) ToGetClusterFeaturesOutputWithContext(ctx context.Context) GetClusterFeaturesOutput {
	return o
}

func (o GetClusterFeaturesOutput) ToGetClusterFeaturesPtrOutput() GetClusterFeaturesPtrOutput {
	return o.ToGetClusterFeaturesPtrOutputWithContext(context.Background())
}

func (o GetClusterFeaturesOutput) ToGetClusterFeaturesPtrOutputWithContext(ctx context.Context) GetClusterFeaturesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetClusterFeatures) *GetClusterFeatures {
		return &v
	}).(GetClusterFeaturesPtrOutput)
}

// Network configuration if you want to install qovery on an existing VPC
func (o GetClusterFeaturesOutput) ExistingVpc() GetClusterFeaturesExistingVpcPtrOutput {
	return o.ApplyT(func(v GetClusterFeatures) *GetClusterFeaturesExistingVpc { return v.ExistingVpc }).(GetClusterFeaturesExistingVpcPtrOutput)
}

// Static IP (AWS only) [NOTE: can't be updated after creation].
//   - Default: `false`.
func (o GetClusterFeaturesOutput) StaticIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterFeatures) bool { return v.StaticIp }).(pulumi.BoolOutput)
}

// Custom VPC subnet (AWS only) [NOTE: can't be updated after creation].
//   - Default: `10.0.0.0/16`.
func (o GetClusterFeaturesOutput) VpcSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterFeatures) string { return v.VpcSubnet }).(pulumi.StringOutput)
}

type GetClusterFeaturesPtrOutput struct{ *pulumi.OutputState }

func (GetClusterFeaturesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetClusterFeatures)(nil)).Elem()
}

func (o GetClusterFeaturesPtrOutput) ToGetClusterFeaturesPtrOutput() GetClusterFeaturesPtrOutput {
	return o
}

func (o GetClusterFeaturesPtrOutput) ToGetClusterFeaturesPtrOutputWithContext(ctx context.Context) GetClusterFeaturesPtrOutput {
	return o
}

func (o GetClusterFeaturesPtrOutput) Elem() GetClusterFeaturesOutput {
	return o.ApplyT(func(v *GetClusterFeatures) GetClusterFeatures {
		if v != nil {
			return *v
		}
		var ret GetClusterFeatures
		return ret
	}).(GetClusterFeaturesOutput)
}

// Network configuration if you want to install qovery on an existing VPC
func (o GetClusterFeaturesPtrOutput) ExistingVpc() GetClusterFeaturesExistingVpcPtrOutput {
	return o.ApplyT(func(v *GetClusterFeatures) *GetClusterFeaturesExistingVpc {
		if v == nil {
			return nil
		}
		return v.ExistingVpc
	}).(GetClusterFeaturesExistingVpcPtrOutput)
}

// Static IP (AWS only) [NOTE: can't be updated after creation].
//   - Default: `false`.
func (o GetClusterFeaturesPtrOutput) StaticIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetClusterFeatures) *bool {
		if v == nil {
			return nil
		}
		return &v.StaticIp
	}).(pulumi.BoolPtrOutput)
}

// Custom VPC subnet (AWS only) [NOTE: can't be updated after creation].
//   - Default: `10.0.0.0/16`.
func (o GetClusterFeaturesPtrOutput) VpcSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetClusterFeatures) *string {
		if v == nil {
			return nil
		}
		return &v.VpcSubnet
	}).(pulumi.StringPtrOutput)
}

type GetClusterFeaturesExistingVpc struct {
	// Aws VPC id
	AwsVpcEksId string `pulumi:"awsVpcEksId"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneAIds []string `pulumi:"documentdbSubnetsZoneAIds"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneBIds []string `pulumi:"documentdbSubnetsZoneBIds"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneCIds []string `pulumi:"documentdbSubnetsZoneCIds"`
	// Ids of the subnets for EKS zone a. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneAIds []string `pulumi:"eksSubnetsZoneAIds"`
	// Ids of the subnets for EKS zone b. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneBIds []string `pulumi:"eksSubnetsZoneBIds"`
	// Ids of the subnets for EKS zone c. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneCIds []string `pulumi:"eksSubnetsZoneCIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneAIds []string `pulumi:"elasticacheSubnetsZoneAIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneBIds []string `pulumi:"elasticacheSubnetsZoneBIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneCIds []string `pulumi:"elasticacheSubnetsZoneCIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneAIds []string `pulumi:"rdsSubnetsZoneAIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneBIds []string `pulumi:"rdsSubnetsZoneBIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneCIds []string `pulumi:"rdsSubnetsZoneCIds"`
}

// GetClusterFeaturesExistingVpcInput is an input type that accepts GetClusterFeaturesExistingVpcArgs and GetClusterFeaturesExistingVpcOutput values.
// You can construct a concrete instance of `GetClusterFeaturesExistingVpcInput` via:
//
//	GetClusterFeaturesExistingVpcArgs{...}
type GetClusterFeaturesExistingVpcInput interface {
	pulumi.Input

	ToGetClusterFeaturesExistingVpcOutput() GetClusterFeaturesExistingVpcOutput
	ToGetClusterFeaturesExistingVpcOutputWithContext(context.Context) GetClusterFeaturesExistingVpcOutput
}

type GetClusterFeaturesExistingVpcArgs struct {
	// Aws VPC id
	AwsVpcEksId pulumi.StringInput `pulumi:"awsVpcEksId"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneAIds pulumi.StringArrayInput `pulumi:"documentdbSubnetsZoneAIds"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneBIds pulumi.StringArrayInput `pulumi:"documentdbSubnetsZoneBIds"`
	// Ids of the subnets for document db
	DocumentdbSubnetsZoneCIds pulumi.StringArrayInput `pulumi:"documentdbSubnetsZoneCIds"`
	// Ids of the subnets for EKS zone a. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneAIds pulumi.StringArrayInput `pulumi:"eksSubnetsZoneAIds"`
	// Ids of the subnets for EKS zone b. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneBIds pulumi.StringArrayInput `pulumi:"eksSubnetsZoneBIds"`
	// Ids of the subnets for EKS zone c. Must have mapPublicIpOnLaunch set to true
	EksSubnetsZoneCIds pulumi.StringArrayInput `pulumi:"eksSubnetsZoneCIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneAIds pulumi.StringArrayInput `pulumi:"elasticacheSubnetsZoneAIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneBIds pulumi.StringArrayInput `pulumi:"elasticacheSubnetsZoneBIds"`
	// Ids of the subnets for elasticache
	ElasticacheSubnetsZoneCIds pulumi.StringArrayInput `pulumi:"elasticacheSubnetsZoneCIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneAIds pulumi.StringArrayInput `pulumi:"rdsSubnetsZoneAIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneBIds pulumi.StringArrayInput `pulumi:"rdsSubnetsZoneBIds"`
	// Ids of the subnets for RDS
	RdsSubnetsZoneCIds pulumi.StringArrayInput `pulumi:"rdsSubnetsZoneCIds"`
}

func (GetClusterFeaturesExistingVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterFeaturesExistingVpc)(nil)).Elem()
}

func (i GetClusterFeaturesExistingVpcArgs) ToGetClusterFeaturesExistingVpcOutput() GetClusterFeaturesExistingVpcOutput {
	return i.ToGetClusterFeaturesExistingVpcOutputWithContext(context.Background())
}

func (i GetClusterFeaturesExistingVpcArgs) ToGetClusterFeaturesExistingVpcOutputWithContext(ctx context.Context) GetClusterFeaturesExistingVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterFeaturesExistingVpcOutput)
}

func (i GetClusterFeaturesExistingVpcArgs) ToGetClusterFeaturesExistingVpcPtrOutput() GetClusterFeaturesExistingVpcPtrOutput {
	return i.ToGetClusterFeaturesExistingVpcPtrOutputWithContext(context.Background())
}

func (i GetClusterFeaturesExistingVpcArgs) ToGetClusterFeaturesExistingVpcPtrOutputWithContext(ctx context.Context) GetClusterFeaturesExistingVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterFeaturesExistingVpcOutput).ToGetClusterFeaturesExistingVpcPtrOutputWithContext(ctx)
}

// GetClusterFeaturesExistingVpcPtrInput is an input type that accepts GetClusterFeaturesExistingVpcArgs, GetClusterFeaturesExistingVpcPtr and GetClusterFeaturesExistingVpcPtrOutput values.
// You can construct a concrete instance of `GetClusterFeaturesExistingVpcPtrInput` via:
//
//	        GetClusterFeaturesExistingVpcArgs{...}
//
//	or:
//
//	        nil
type GetClusterFeaturesExistingVpcPtrInput interface {
	pulumi.Input

	ToGetClusterFeaturesExistingVpcPtrOutput() GetClusterFeaturesExistingVpcPtrOutput
	ToGetClusterFeaturesExistingVpcPtrOutputWithContext(context.Context) GetClusterFeaturesExistingVpcPtrOutput
}

type getClusterFeaturesExistingVpcPtrType GetClusterFeaturesExistingVpcArgs

func GetClusterFeaturesExistingVpcPtr(v *GetClusterFeaturesExistingVpcArgs) GetClusterFeaturesExistingVpcPtrInput {
	return (*getClusterFeaturesExistingVpcPtrType)(v)
}

func (*getClusterFeaturesExistingVpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetClusterFeaturesExistingVpc)(nil)).Elem()
}

func (i *getClusterFeaturesExistingVpcPtrType) ToGetClusterFeaturesExistingVpcPtrOutput() GetClusterFeaturesExistingVpcPtrOutput {
	return i.ToGetClusterFeaturesExistingVpcPtrOutputWithContext(context.Background())
}

func (i *getClusterFeaturesExistingVpcPtrType) ToGetClusterFeaturesExistingVpcPtrOutputWithContext(ctx context.Context) GetClusterFeaturesExistingVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterFeaturesExistingVpcPtrOutput)
}

type GetClusterFeaturesExistingVpcOutput struct{ *pulumi.OutputState }

func (GetClusterFeaturesExistingVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterFeaturesExistingVpc)(nil)).Elem()
}

func (o GetClusterFeaturesExistingVpcOutput) ToGetClusterFeaturesExistingVpcOutput() GetClusterFeaturesExistingVpcOutput {
	return o
}

func (o GetClusterFeaturesExistingVpcOutput) ToGetClusterFeaturesExistingVpcOutputWithContext(ctx context.Context) GetClusterFeaturesExistingVpcOutput {
	return o
}

func (o GetClusterFeaturesExistingVpcOutput) ToGetClusterFeaturesExistingVpcPtrOutput() GetClusterFeaturesExistingVpcPtrOutput {
	return o.ToGetClusterFeaturesExistingVpcPtrOutputWithContext(context.Background())
}

func (o GetClusterFeaturesExistingVpcOutput) ToGetClusterFeaturesExistingVpcPtrOutputWithContext(ctx context.Context) GetClusterFeaturesExistingVpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetClusterFeaturesExistingVpc) *GetClusterFeaturesExistingVpc {
		return &v
	}).(GetClusterFeaturesExistingVpcPtrOutput)
}

// Aws VPC id
func (o GetClusterFeaturesExistingVpcOutput) AwsVpcEksId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) string { return v.AwsVpcEksId }).(pulumi.StringOutput)
}

// Ids of the subnets for document db
func (o GetClusterFeaturesExistingVpcOutput) DocumentdbSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.DocumentdbSubnetsZoneAIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for document db
func (o GetClusterFeaturesExistingVpcOutput) DocumentdbSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.DocumentdbSubnetsZoneBIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for document db
func (o GetClusterFeaturesExistingVpcOutput) DocumentdbSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.DocumentdbSubnetsZoneCIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone a. Must have mapPublicIpOnLaunch set to true
func (o GetClusterFeaturesExistingVpcOutput) EksSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.EksSubnetsZoneAIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone b. Must have mapPublicIpOnLaunch set to true
func (o GetClusterFeaturesExistingVpcOutput) EksSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.EksSubnetsZoneBIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone c. Must have mapPublicIpOnLaunch set to true
func (o GetClusterFeaturesExistingVpcOutput) EksSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.EksSubnetsZoneCIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o GetClusterFeaturesExistingVpcOutput) ElasticacheSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.ElasticacheSubnetsZoneAIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o GetClusterFeaturesExistingVpcOutput) ElasticacheSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.ElasticacheSubnetsZoneBIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o GetClusterFeaturesExistingVpcOutput) ElasticacheSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.ElasticacheSubnetsZoneCIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o GetClusterFeaturesExistingVpcOutput) RdsSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.RdsSubnetsZoneAIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o GetClusterFeaturesExistingVpcOutput) RdsSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.RdsSubnetsZoneBIds }).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o GetClusterFeaturesExistingVpcOutput) RdsSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterFeaturesExistingVpc) []string { return v.RdsSubnetsZoneCIds }).(pulumi.StringArrayOutput)
}

type GetClusterFeaturesExistingVpcPtrOutput struct{ *pulumi.OutputState }

func (GetClusterFeaturesExistingVpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetClusterFeaturesExistingVpc)(nil)).Elem()
}

func (o GetClusterFeaturesExistingVpcPtrOutput) ToGetClusterFeaturesExistingVpcPtrOutput() GetClusterFeaturesExistingVpcPtrOutput {
	return o
}

func (o GetClusterFeaturesExistingVpcPtrOutput) ToGetClusterFeaturesExistingVpcPtrOutputWithContext(ctx context.Context) GetClusterFeaturesExistingVpcPtrOutput {
	return o
}

func (o GetClusterFeaturesExistingVpcPtrOutput) Elem() GetClusterFeaturesExistingVpcOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) GetClusterFeaturesExistingVpc {
		if v != nil {
			return *v
		}
		var ret GetClusterFeaturesExistingVpc
		return ret
	}).(GetClusterFeaturesExistingVpcOutput)
}

// Aws VPC id
func (o GetClusterFeaturesExistingVpcPtrOutput) AwsVpcEksId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) *string {
		if v == nil {
			return nil
		}
		return &v.AwsVpcEksId
	}).(pulumi.StringPtrOutput)
}

// Ids of the subnets for document db
func (o GetClusterFeaturesExistingVpcPtrOutput) DocumentdbSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.DocumentdbSubnetsZoneAIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for document db
func (o GetClusterFeaturesExistingVpcPtrOutput) DocumentdbSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.DocumentdbSubnetsZoneBIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for document db
func (o GetClusterFeaturesExistingVpcPtrOutput) DocumentdbSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.DocumentdbSubnetsZoneCIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone a. Must have mapPublicIpOnLaunch set to true
func (o GetClusterFeaturesExistingVpcPtrOutput) EksSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.EksSubnetsZoneAIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone b. Must have mapPublicIpOnLaunch set to true
func (o GetClusterFeaturesExistingVpcPtrOutput) EksSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.EksSubnetsZoneBIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for EKS zone c. Must have mapPublicIpOnLaunch set to true
func (o GetClusterFeaturesExistingVpcPtrOutput) EksSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.EksSubnetsZoneCIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o GetClusterFeaturesExistingVpcPtrOutput) ElasticacheSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.ElasticacheSubnetsZoneAIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o GetClusterFeaturesExistingVpcPtrOutput) ElasticacheSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.ElasticacheSubnetsZoneBIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for elasticache
func (o GetClusterFeaturesExistingVpcPtrOutput) ElasticacheSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.ElasticacheSubnetsZoneCIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o GetClusterFeaturesExistingVpcPtrOutput) RdsSubnetsZoneAIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.RdsSubnetsZoneAIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o GetClusterFeaturesExistingVpcPtrOutput) RdsSubnetsZoneBIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.RdsSubnetsZoneBIds
	}).(pulumi.StringArrayOutput)
}

// Ids of the subnets for RDS
func (o GetClusterFeaturesExistingVpcPtrOutput) RdsSubnetsZoneCIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetClusterFeaturesExistingVpc) []string {
		if v == nil {
			return nil
		}
		return v.RdsSubnetsZoneCIds
	}).(pulumi.StringArrayOutput)
}

type GetClusterRoutingTable struct {
	// Description of the route.
	Description string `pulumi:"description"`
	// Destination of the route.
	Destination string `pulumi:"destination"`
	// Target of the route.
	Target string `pulumi:"target"`
}

// GetClusterRoutingTableInput is an input type that accepts GetClusterRoutingTableArgs and GetClusterRoutingTableOutput values.
// You can construct a concrete instance of `GetClusterRoutingTableInput` via:
//
//	GetClusterRoutingTableArgs{...}
type GetClusterRoutingTableInput interface {
	pulumi.Input

	ToGetClusterRoutingTableOutput() GetClusterRoutingTableOutput
	ToGetClusterRoutingTableOutputWithContext(context.Context) GetClusterRoutingTableOutput
}

type GetClusterRoutingTableArgs struct {
	// Description of the route.
	Description pulumi.StringInput `pulumi:"description"`
	// Destination of the route.
	Destination pulumi.StringInput `pulumi:"destination"`
	// Target of the route.
	Target pulumi.StringInput `pulumi:"target"`
}

func (GetClusterRoutingTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterRoutingTable)(nil)).Elem()
}

func (i GetClusterRoutingTableArgs) ToGetClusterRoutingTableOutput() GetClusterRoutingTableOutput {
	return i.ToGetClusterRoutingTableOutputWithContext(context.Background())
}

func (i GetClusterRoutingTableArgs) ToGetClusterRoutingTableOutputWithContext(ctx context.Context) GetClusterRoutingTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterRoutingTableOutput)
}

// GetClusterRoutingTableArrayInput is an input type that accepts GetClusterRoutingTableArray and GetClusterRoutingTableArrayOutput values.
// You can construct a concrete instance of `GetClusterRoutingTableArrayInput` via:
//
//	GetClusterRoutingTableArray{ GetClusterRoutingTableArgs{...} }
type GetClusterRoutingTableArrayInput interface {
	pulumi.Input

	ToGetClusterRoutingTableArrayOutput() GetClusterRoutingTableArrayOutput
	ToGetClusterRoutingTableArrayOutputWithContext(context.Context) GetClusterRoutingTableArrayOutput
}

type GetClusterRoutingTableArray []GetClusterRoutingTableInput

func (GetClusterRoutingTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterRoutingTable)(nil)).Elem()
}

func (i GetClusterRoutingTableArray) ToGetClusterRoutingTableArrayOutput() GetClusterRoutingTableArrayOutput {
	return i.ToGetClusterRoutingTableArrayOutputWithContext(context.Background())
}

func (i GetClusterRoutingTableArray) ToGetClusterRoutingTableArrayOutputWithContext(ctx context.Context) GetClusterRoutingTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterRoutingTableArrayOutput)
}

type GetClusterRoutingTableOutput struct{ *pulumi.OutputState }

func (GetClusterRoutingTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterRoutingTable)(nil)).Elem()
}

func (o GetClusterRoutingTableOutput) ToGetClusterRoutingTableOutput() GetClusterRoutingTableOutput {
	return o
}

func (o GetClusterRoutingTableOutput) ToGetClusterRoutingTableOutputWithContext(ctx context.Context) GetClusterRoutingTableOutput {
	return o
}

// Description of the route.
func (o GetClusterRoutingTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterRoutingTable) string { return v.Description }).(pulumi.StringOutput)
}

// Destination of the route.
func (o GetClusterRoutingTableOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterRoutingTable) string { return v.Destination }).(pulumi.StringOutput)
}

// Target of the route.
func (o GetClusterRoutingTableOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterRoutingTable) string { return v.Target }).(pulumi.StringOutput)
}

type GetClusterRoutingTableArrayOutput struct{ *pulumi.OutputState }

func (GetClusterRoutingTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterRoutingTable)(nil)).Elem()
}

func (o GetClusterRoutingTableArrayOutput) ToGetClusterRoutingTableArrayOutput() GetClusterRoutingTableArrayOutput {
	return o
}

func (o GetClusterRoutingTableArrayOutput) ToGetClusterRoutingTableArrayOutputWithContext(ctx context.Context) GetClusterRoutingTableArrayOutput {
	return o
}

func (o GetClusterRoutingTableArrayOutput) Index(i pulumi.IntInput) GetClusterRoutingTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterRoutingTable {
		return vs[0].([]GetClusterRoutingTable)[vs[1].(int)]
	}).(GetClusterRoutingTableOutput)
}

type GetContainerBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetContainerBuiltInEnvironmentVariableInput is an input type that accepts GetContainerBuiltInEnvironmentVariableArgs and GetContainerBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetContainerBuiltInEnvironmentVariableInput` via:
//
//	GetContainerBuiltInEnvironmentVariableArgs{...}
type GetContainerBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToGetContainerBuiltInEnvironmentVariableOutput() GetContainerBuiltInEnvironmentVariableOutput
	ToGetContainerBuiltInEnvironmentVariableOutputWithContext(context.Context) GetContainerBuiltInEnvironmentVariableOutput
}

type GetContainerBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetContainerBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetContainerBuiltInEnvironmentVariableArgs) ToGetContainerBuiltInEnvironmentVariableOutput() GetContainerBuiltInEnvironmentVariableOutput {
	return i.ToGetContainerBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetContainerBuiltInEnvironmentVariableArgs) ToGetContainerBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetContainerBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerBuiltInEnvironmentVariableOutput)
}

// GetContainerBuiltInEnvironmentVariableArrayInput is an input type that accepts GetContainerBuiltInEnvironmentVariableArray and GetContainerBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetContainerBuiltInEnvironmentVariableArrayInput` via:
//
//	GetContainerBuiltInEnvironmentVariableArray{ GetContainerBuiltInEnvironmentVariableArgs{...} }
type GetContainerBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetContainerBuiltInEnvironmentVariableArrayOutput() GetContainerBuiltInEnvironmentVariableArrayOutput
	ToGetContainerBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) GetContainerBuiltInEnvironmentVariableArrayOutput
}

type GetContainerBuiltInEnvironmentVariableArray []GetContainerBuiltInEnvironmentVariableInput

func (GetContainerBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetContainerBuiltInEnvironmentVariableArray) ToGetContainerBuiltInEnvironmentVariableArrayOutput() GetContainerBuiltInEnvironmentVariableArrayOutput {
	return i.ToGetContainerBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetContainerBuiltInEnvironmentVariableArray) ToGetContainerBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetContainerBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerBuiltInEnvironmentVariableArrayOutput)
}

type GetContainerBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetContainerBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetContainerBuiltInEnvironmentVariableOutput) ToGetContainerBuiltInEnvironmentVariableOutput() GetContainerBuiltInEnvironmentVariableOutput {
	return o
}

func (o GetContainerBuiltInEnvironmentVariableOutput) ToGetContainerBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetContainerBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetContainerBuiltInEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerBuiltInEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetContainerBuiltInEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerBuiltInEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetContainerBuiltInEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerBuiltInEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetContainerBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetContainerBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetContainerBuiltInEnvironmentVariableArrayOutput) ToGetContainerBuiltInEnvironmentVariableArrayOutput() GetContainerBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetContainerBuiltInEnvironmentVariableArrayOutput) ToGetContainerBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetContainerBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetContainerBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetContainerBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerBuiltInEnvironmentVariable {
		return vs[0].([]GetContainerBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(GetContainerBuiltInEnvironmentVariableOutput)
}

type GetContainerCustomDomain struct {
	// Your custom domain.
	Domain string `pulumi:"domain"`
	// Id of the custom domain.
	Id string `pulumi:"id"`
	// Status of the custom domain.
	Status string `pulumi:"status"`
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
	ValidationDomain string `pulumi:"validationDomain"`
}

// GetContainerCustomDomainInput is an input type that accepts GetContainerCustomDomainArgs and GetContainerCustomDomainOutput values.
// You can construct a concrete instance of `GetContainerCustomDomainInput` via:
//
//	GetContainerCustomDomainArgs{...}
type GetContainerCustomDomainInput interface {
	pulumi.Input

	ToGetContainerCustomDomainOutput() GetContainerCustomDomainOutput
	ToGetContainerCustomDomainOutputWithContext(context.Context) GetContainerCustomDomainOutput
}

type GetContainerCustomDomainArgs struct {
	// Your custom domain.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Id of the custom domain.
	Id pulumi.StringInput `pulumi:"id"`
	// Status of the custom domain.
	Status pulumi.StringInput `pulumi:"status"`
	// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
	ValidationDomain pulumi.StringInput `pulumi:"validationDomain"`
}

func (GetContainerCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerCustomDomain)(nil)).Elem()
}

func (i GetContainerCustomDomainArgs) ToGetContainerCustomDomainOutput() GetContainerCustomDomainOutput {
	return i.ToGetContainerCustomDomainOutputWithContext(context.Background())
}

func (i GetContainerCustomDomainArgs) ToGetContainerCustomDomainOutputWithContext(ctx context.Context) GetContainerCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerCustomDomainOutput)
}

// GetContainerCustomDomainArrayInput is an input type that accepts GetContainerCustomDomainArray and GetContainerCustomDomainArrayOutput values.
// You can construct a concrete instance of `GetContainerCustomDomainArrayInput` via:
//
//	GetContainerCustomDomainArray{ GetContainerCustomDomainArgs{...} }
type GetContainerCustomDomainArrayInput interface {
	pulumi.Input

	ToGetContainerCustomDomainArrayOutput() GetContainerCustomDomainArrayOutput
	ToGetContainerCustomDomainArrayOutputWithContext(context.Context) GetContainerCustomDomainArrayOutput
}

type GetContainerCustomDomainArray []GetContainerCustomDomainInput

func (GetContainerCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerCustomDomain)(nil)).Elem()
}

func (i GetContainerCustomDomainArray) ToGetContainerCustomDomainArrayOutput() GetContainerCustomDomainArrayOutput {
	return i.ToGetContainerCustomDomainArrayOutputWithContext(context.Background())
}

func (i GetContainerCustomDomainArray) ToGetContainerCustomDomainArrayOutputWithContext(ctx context.Context) GetContainerCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerCustomDomainArrayOutput)
}

type GetContainerCustomDomainOutput struct{ *pulumi.OutputState }

func (GetContainerCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerCustomDomain)(nil)).Elem()
}

func (o GetContainerCustomDomainOutput) ToGetContainerCustomDomainOutput() GetContainerCustomDomainOutput {
	return o
}

func (o GetContainerCustomDomainOutput) ToGetContainerCustomDomainOutputWithContext(ctx context.Context) GetContainerCustomDomainOutput {
	return o
}

// Your custom domain.
func (o GetContainerCustomDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerCustomDomain) string { return v.Domain }).(pulumi.StringOutput)
}

// Id of the custom domain.
func (o GetContainerCustomDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerCustomDomain) string { return v.Id }).(pulumi.StringOutput)
}

// Status of the custom domain.
func (o GetContainerCustomDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerCustomDomain) string { return v.Status }).(pulumi.StringOutput)
}

// URL provided by Qovery. You must create a CNAME on your DNS provider using that URL.
func (o GetContainerCustomDomainOutput) ValidationDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerCustomDomain) string { return v.ValidationDomain }).(pulumi.StringOutput)
}

type GetContainerCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (GetContainerCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerCustomDomain)(nil)).Elem()
}

func (o GetContainerCustomDomainArrayOutput) ToGetContainerCustomDomainArrayOutput() GetContainerCustomDomainArrayOutput {
	return o
}

func (o GetContainerCustomDomainArrayOutput) ToGetContainerCustomDomainArrayOutputWithContext(ctx context.Context) GetContainerCustomDomainArrayOutput {
	return o
}

func (o GetContainerCustomDomainArrayOutput) Index(i pulumi.IntInput) GetContainerCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerCustomDomain {
		return vs[0].([]GetContainerCustomDomain)[vs[1].(int)]
	}).(GetContainerCustomDomainOutput)
}

type GetContainerEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetContainerEnvironmentVariableInput is an input type that accepts GetContainerEnvironmentVariableArgs and GetContainerEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetContainerEnvironmentVariableInput` via:
//
//	GetContainerEnvironmentVariableArgs{...}
type GetContainerEnvironmentVariableInput interface {
	pulumi.Input

	ToGetContainerEnvironmentVariableOutput() GetContainerEnvironmentVariableOutput
	ToGetContainerEnvironmentVariableOutputWithContext(context.Context) GetContainerEnvironmentVariableOutput
}

type GetContainerEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetContainerEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerEnvironmentVariable)(nil)).Elem()
}

func (i GetContainerEnvironmentVariableArgs) ToGetContainerEnvironmentVariableOutput() GetContainerEnvironmentVariableOutput {
	return i.ToGetContainerEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetContainerEnvironmentVariableArgs) ToGetContainerEnvironmentVariableOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerEnvironmentVariableOutput)
}

// GetContainerEnvironmentVariableArrayInput is an input type that accepts GetContainerEnvironmentVariableArray and GetContainerEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetContainerEnvironmentVariableArrayInput` via:
//
//	GetContainerEnvironmentVariableArray{ GetContainerEnvironmentVariableArgs{...} }
type GetContainerEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetContainerEnvironmentVariableArrayOutput() GetContainerEnvironmentVariableArrayOutput
	ToGetContainerEnvironmentVariableArrayOutputWithContext(context.Context) GetContainerEnvironmentVariableArrayOutput
}

type GetContainerEnvironmentVariableArray []GetContainerEnvironmentVariableInput

func (GetContainerEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerEnvironmentVariable)(nil)).Elem()
}

func (i GetContainerEnvironmentVariableArray) ToGetContainerEnvironmentVariableArrayOutput() GetContainerEnvironmentVariableArrayOutput {
	return i.ToGetContainerEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetContainerEnvironmentVariableArray) ToGetContainerEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerEnvironmentVariableArrayOutput)
}

type GetContainerEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetContainerEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerEnvironmentVariable)(nil)).Elem()
}

func (o GetContainerEnvironmentVariableOutput) ToGetContainerEnvironmentVariableOutput() GetContainerEnvironmentVariableOutput {
	return o
}

func (o GetContainerEnvironmentVariableOutput) ToGetContainerEnvironmentVariableOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetContainerEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetContainerEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetContainerEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetContainerEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetContainerEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerEnvironmentVariable)(nil)).Elem()
}

func (o GetContainerEnvironmentVariableArrayOutput) ToGetContainerEnvironmentVariableArrayOutput() GetContainerEnvironmentVariableArrayOutput {
	return o
}

func (o GetContainerEnvironmentVariableArrayOutput) ToGetContainerEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableArrayOutput {
	return o
}

func (o GetContainerEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetContainerEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerEnvironmentVariable {
		return vs[0].([]GetContainerEnvironmentVariable)[vs[1].(int)]
	}).(GetContainerEnvironmentVariableOutput)
}

type GetContainerEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// GetContainerEnvironmentVariableAliasInput is an input type that accepts GetContainerEnvironmentVariableAliasArgs and GetContainerEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `GetContainerEnvironmentVariableAliasInput` via:
//
//	GetContainerEnvironmentVariableAliasArgs{...}
type GetContainerEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToGetContainerEnvironmentVariableAliasOutput() GetContainerEnvironmentVariableAliasOutput
	ToGetContainerEnvironmentVariableAliasOutputWithContext(context.Context) GetContainerEnvironmentVariableAliasOutput
}

type GetContainerEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetContainerEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetContainerEnvironmentVariableAliasArgs) ToGetContainerEnvironmentVariableAliasOutput() GetContainerEnvironmentVariableAliasOutput {
	return i.ToGetContainerEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i GetContainerEnvironmentVariableAliasArgs) ToGetContainerEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerEnvironmentVariableAliasOutput)
}

// GetContainerEnvironmentVariableAliasArrayInput is an input type that accepts GetContainerEnvironmentVariableAliasArray and GetContainerEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `GetContainerEnvironmentVariableAliasArrayInput` via:
//
//	GetContainerEnvironmentVariableAliasArray{ GetContainerEnvironmentVariableAliasArgs{...} }
type GetContainerEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToGetContainerEnvironmentVariableAliasArrayOutput() GetContainerEnvironmentVariableAliasArrayOutput
	ToGetContainerEnvironmentVariableAliasArrayOutputWithContext(context.Context) GetContainerEnvironmentVariableAliasArrayOutput
}

type GetContainerEnvironmentVariableAliasArray []GetContainerEnvironmentVariableAliasInput

func (GetContainerEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetContainerEnvironmentVariableAliasArray) ToGetContainerEnvironmentVariableAliasArrayOutput() GetContainerEnvironmentVariableAliasArrayOutput {
	return i.ToGetContainerEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i GetContainerEnvironmentVariableAliasArray) ToGetContainerEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerEnvironmentVariableAliasArrayOutput)
}

type GetContainerEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (GetContainerEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetContainerEnvironmentVariableAliasOutput) ToGetContainerEnvironmentVariableAliasOutput() GetContainerEnvironmentVariableAliasOutput {
	return o
}

func (o GetContainerEnvironmentVariableAliasOutput) ToGetContainerEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o GetContainerEnvironmentVariableAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariableAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable alias.
func (o GetContainerEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o GetContainerEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetContainerEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (GetContainerEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetContainerEnvironmentVariableAliasArrayOutput) ToGetContainerEnvironmentVariableAliasArrayOutput() GetContainerEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetContainerEnvironmentVariableAliasArrayOutput) ToGetContainerEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetContainerEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) GetContainerEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerEnvironmentVariableAlias {
		return vs[0].([]GetContainerEnvironmentVariableAlias)[vs[1].(int)]
	}).(GetContainerEnvironmentVariableAliasOutput)
}

type GetContainerEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// GetContainerEnvironmentVariableOverrideInput is an input type that accepts GetContainerEnvironmentVariableOverrideArgs and GetContainerEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `GetContainerEnvironmentVariableOverrideInput` via:
//
//	GetContainerEnvironmentVariableOverrideArgs{...}
type GetContainerEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToGetContainerEnvironmentVariableOverrideOutput() GetContainerEnvironmentVariableOverrideOutput
	ToGetContainerEnvironmentVariableOverrideOutputWithContext(context.Context) GetContainerEnvironmentVariableOverrideOutput
}

type GetContainerEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetContainerEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetContainerEnvironmentVariableOverrideArgs) ToGetContainerEnvironmentVariableOverrideOutput() GetContainerEnvironmentVariableOverrideOutput {
	return i.ToGetContainerEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i GetContainerEnvironmentVariableOverrideArgs) ToGetContainerEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerEnvironmentVariableOverrideOutput)
}

// GetContainerEnvironmentVariableOverrideArrayInput is an input type that accepts GetContainerEnvironmentVariableOverrideArray and GetContainerEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `GetContainerEnvironmentVariableOverrideArrayInput` via:
//
//	GetContainerEnvironmentVariableOverrideArray{ GetContainerEnvironmentVariableOverrideArgs{...} }
type GetContainerEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToGetContainerEnvironmentVariableOverrideArrayOutput() GetContainerEnvironmentVariableOverrideArrayOutput
	ToGetContainerEnvironmentVariableOverrideArrayOutputWithContext(context.Context) GetContainerEnvironmentVariableOverrideArrayOutput
}

type GetContainerEnvironmentVariableOverrideArray []GetContainerEnvironmentVariableOverrideInput

func (GetContainerEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetContainerEnvironmentVariableOverrideArray) ToGetContainerEnvironmentVariableOverrideArrayOutput() GetContainerEnvironmentVariableOverrideArrayOutput {
	return i.ToGetContainerEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i GetContainerEnvironmentVariableOverrideArray) ToGetContainerEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerEnvironmentVariableOverrideArrayOutput)
}

type GetContainerEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (GetContainerEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetContainerEnvironmentVariableOverrideOutput) ToGetContainerEnvironmentVariableOverrideOutput() GetContainerEnvironmentVariableOverrideOutput {
	return o
}

func (o GetContainerEnvironmentVariableOverrideOutput) ToGetContainerEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o GetContainerEnvironmentVariableOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariableOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable override.
func (o GetContainerEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o GetContainerEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetContainerEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetContainerEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetContainerEnvironmentVariableOverrideArrayOutput) ToGetContainerEnvironmentVariableOverrideArrayOutput() GetContainerEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetContainerEnvironmentVariableOverrideArrayOutput) ToGetContainerEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetContainerEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetContainerEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) GetContainerEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerEnvironmentVariableOverride {
		return vs[0].([]GetContainerEnvironmentVariableOverride)[vs[1].(int)]
	}).(GetContainerEnvironmentVariableOverrideOutput)
}

type GetContainerHealthchecks struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe *GetContainerHealthchecksLivenessProbe `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe *GetContainerHealthchecksReadinessProbe `pulumi:"readinessProbe"`
}

// GetContainerHealthchecksInput is an input type that accepts GetContainerHealthchecksArgs and GetContainerHealthchecksOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksInput` via:
//
//	GetContainerHealthchecksArgs{...}
type GetContainerHealthchecksInput interface {
	pulumi.Input

	ToGetContainerHealthchecksOutput() GetContainerHealthchecksOutput
	ToGetContainerHealthchecksOutputWithContext(context.Context) GetContainerHealthchecksOutput
}

type GetContainerHealthchecksArgs struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe GetContainerHealthchecksLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe GetContainerHealthchecksReadinessProbePtrInput `pulumi:"readinessProbe"`
}

func (GetContainerHealthchecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecks)(nil)).Elem()
}

func (i GetContainerHealthchecksArgs) ToGetContainerHealthchecksOutput() GetContainerHealthchecksOutput {
	return i.ToGetContainerHealthchecksOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksArgs) ToGetContainerHealthchecksOutputWithContext(ctx context.Context) GetContainerHealthchecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksOutput)
}

func (i GetContainerHealthchecksArgs) ToGetContainerHealthchecksPtrOutput() GetContainerHealthchecksPtrOutput {
	return i.ToGetContainerHealthchecksPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksArgs) ToGetContainerHealthchecksPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksOutput).ToGetContainerHealthchecksPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksPtrInput is an input type that accepts GetContainerHealthchecksArgs, GetContainerHealthchecksPtr and GetContainerHealthchecksPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksPtrInput` via:
//
//	        GetContainerHealthchecksArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksPtrOutput() GetContainerHealthchecksPtrOutput
	ToGetContainerHealthchecksPtrOutputWithContext(context.Context) GetContainerHealthchecksPtrOutput
}

type getContainerHealthchecksPtrType GetContainerHealthchecksArgs

func GetContainerHealthchecksPtr(v *GetContainerHealthchecksArgs) GetContainerHealthchecksPtrInput {
	return (*getContainerHealthchecksPtrType)(v)
}

func (*getContainerHealthchecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecks)(nil)).Elem()
}

func (i *getContainerHealthchecksPtrType) ToGetContainerHealthchecksPtrOutput() GetContainerHealthchecksPtrOutput {
	return i.ToGetContainerHealthchecksPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksPtrType) ToGetContainerHealthchecksPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksPtrOutput)
}

type GetContainerHealthchecksOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecks)(nil)).Elem()
}

func (o GetContainerHealthchecksOutput) ToGetContainerHealthchecksOutput() GetContainerHealthchecksOutput {
	return o
}

func (o GetContainerHealthchecksOutput) ToGetContainerHealthchecksOutputWithContext(ctx context.Context) GetContainerHealthchecksOutput {
	return o
}

func (o GetContainerHealthchecksOutput) ToGetContainerHealthchecksPtrOutput() GetContainerHealthchecksPtrOutput {
	return o.ToGetContainerHealthchecksPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksOutput) ToGetContainerHealthchecksPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecks) *GetContainerHealthchecks {
		return &v
	}).(GetContainerHealthchecksPtrOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o GetContainerHealthchecksOutput) LivenessProbe() GetContainerHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecks) *GetContainerHealthchecksLivenessProbe { return v.LivenessProbe }).(GetContainerHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o GetContainerHealthchecksOutput) ReadinessProbe() GetContainerHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecks) *GetContainerHealthchecksReadinessProbe { return v.ReadinessProbe }).(GetContainerHealthchecksReadinessProbePtrOutput)
}

type GetContainerHealthchecksPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecks)(nil)).Elem()
}

func (o GetContainerHealthchecksPtrOutput) ToGetContainerHealthchecksPtrOutput() GetContainerHealthchecksPtrOutput {
	return o
}

func (o GetContainerHealthchecksPtrOutput) ToGetContainerHealthchecksPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksPtrOutput {
	return o
}

func (o GetContainerHealthchecksPtrOutput) Elem() GetContainerHealthchecksOutput {
	return o.ApplyT(func(v *GetContainerHealthchecks) GetContainerHealthchecks {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecks
		return ret
	}).(GetContainerHealthchecksOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o GetContainerHealthchecksPtrOutput) LivenessProbe() GetContainerHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecks) *GetContainerHealthchecksLivenessProbe {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(GetContainerHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o GetContainerHealthchecksPtrOutput) ReadinessProbe() GetContainerHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecks) *GetContainerHealthchecksReadinessProbe {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(GetContainerHealthchecksReadinessProbePtrOutput)
}

type GetContainerHealthchecksLivenessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetContainerHealthchecksLivenessProbeType `pulumi:"type"`
}

// GetContainerHealthchecksLivenessProbeInput is an input type that accepts GetContainerHealthchecksLivenessProbeArgs and GetContainerHealthchecksLivenessProbeOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeInput` via:
//
//	GetContainerHealthchecksLivenessProbeArgs{...}
type GetContainerHealthchecksLivenessProbeInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeOutput() GetContainerHealthchecksLivenessProbeOutput
	ToGetContainerHealthchecksLivenessProbeOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeOutput
}

type GetContainerHealthchecksLivenessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetContainerHealthchecksLivenessProbeTypeInput `pulumi:"type"`
}

func (GetContainerHealthchecksLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbe)(nil)).Elem()
}

func (i GetContainerHealthchecksLivenessProbeArgs) ToGetContainerHealthchecksLivenessProbeOutput() GetContainerHealthchecksLivenessProbeOutput {
	return i.ToGetContainerHealthchecksLivenessProbeOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeArgs) ToGetContainerHealthchecksLivenessProbeOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeOutput)
}

func (i GetContainerHealthchecksLivenessProbeArgs) ToGetContainerHealthchecksLivenessProbePtrOutput() GetContainerHealthchecksLivenessProbePtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeArgs) ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeOutput).ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(ctx)
}

// GetContainerHealthchecksLivenessProbePtrInput is an input type that accepts GetContainerHealthchecksLivenessProbeArgs, GetContainerHealthchecksLivenessProbePtr and GetContainerHealthchecksLivenessProbePtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbePtrInput` via:
//
//	        GetContainerHealthchecksLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksLivenessProbePtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbePtrOutput() GetContainerHealthchecksLivenessProbePtrOutput
	ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbePtrOutput
}

type getContainerHealthchecksLivenessProbePtrType GetContainerHealthchecksLivenessProbeArgs

func GetContainerHealthchecksLivenessProbePtr(v *GetContainerHealthchecksLivenessProbeArgs) GetContainerHealthchecksLivenessProbePtrInput {
	return (*getContainerHealthchecksLivenessProbePtrType)(v)
}

func (*getContainerHealthchecksLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbe)(nil)).Elem()
}

func (i *getContainerHealthchecksLivenessProbePtrType) ToGetContainerHealthchecksLivenessProbePtrOutput() GetContainerHealthchecksLivenessProbePtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksLivenessProbePtrType) ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbePtrOutput)
}

type GetContainerHealthchecksLivenessProbeOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbe)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeOutput) ToGetContainerHealthchecksLivenessProbeOutput() GetContainerHealthchecksLivenessProbeOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeOutput) ToGetContainerHealthchecksLivenessProbeOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeOutput) ToGetContainerHealthchecksLivenessProbePtrOutput() GetContainerHealthchecksLivenessProbePtrOutput {
	return o.ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksLivenessProbeOutput) ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksLivenessProbe) *GetContainerHealthchecksLivenessProbe {
		return &v
	}).(GetContainerHealthchecksLivenessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetContainerHealthchecksLivenessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetContainerHealthchecksLivenessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o GetContainerHealthchecksLivenessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetContainerHealthchecksLivenessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetContainerHealthchecksLivenessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetContainerHealthchecksLivenessProbeOutput) Type() GetContainerHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbe) GetContainerHealthchecksLivenessProbeType { return v.Type }).(GetContainerHealthchecksLivenessProbeTypeOutput)
}

type GetContainerHealthchecksLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbe)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbePtrOutput) ToGetContainerHealthchecksLivenessProbePtrOutput() GetContainerHealthchecksLivenessProbePtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbePtrOutput) ToGetContainerHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbePtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbePtrOutput) Elem() GetContainerHealthchecksLivenessProbeOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbe) GetContainerHealthchecksLivenessProbe {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksLivenessProbe
		return ret
	}).(GetContainerHealthchecksLivenessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetContainerHealthchecksLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetContainerHealthchecksLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o GetContainerHealthchecksLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetContainerHealthchecksLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetContainerHealthchecksLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetContainerHealthchecksLivenessProbePtrOutput) Type() GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbe) *GetContainerHealthchecksLivenessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(GetContainerHealthchecksLivenessProbeTypePtrOutput)
}

type GetContainerHealthchecksLivenessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *GetContainerHealthchecksLivenessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *GetContainerHealthchecksLivenessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *GetContainerHealthchecksLivenessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *GetContainerHealthchecksLivenessProbeTypeTcp `pulumi:"tcp"`
}

// GetContainerHealthchecksLivenessProbeTypeInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeArgs and GetContainerHealthchecksLivenessProbeTypeOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeInput` via:
//
//	GetContainerHealthchecksLivenessProbeTypeArgs{...}
type GetContainerHealthchecksLivenessProbeTypeInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeOutput() GetContainerHealthchecksLivenessProbeTypeOutput
	ToGetContainerHealthchecksLivenessProbeTypeOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeOutput
}

type GetContainerHealthchecksLivenessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec GetContainerHealthchecksLivenessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc GetContainerHealthchecksLivenessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http GetContainerHealthchecksLivenessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp GetContainerHealthchecksLivenessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (GetContainerHealthchecksLivenessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i GetContainerHealthchecksLivenessProbeTypeArgs) ToGetContainerHealthchecksLivenessProbeTypeOutput() GetContainerHealthchecksLivenessProbeTypeOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeArgs) ToGetContainerHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeOutput)
}

func (i GetContainerHealthchecksLivenessProbeTypeArgs) ToGetContainerHealthchecksLivenessProbeTypePtrOutput() GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeArgs) ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeOutput).ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx)
}

// GetContainerHealthchecksLivenessProbeTypePtrInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeArgs, GetContainerHealthchecksLivenessProbeTypePtr and GetContainerHealthchecksLivenessProbeTypePtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypePtrInput` via:
//
//	        GetContainerHealthchecksLivenessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksLivenessProbeTypePtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypePtrOutput() GetContainerHealthchecksLivenessProbeTypePtrOutput
	ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypePtrOutput
}

type getContainerHealthchecksLivenessProbeTypePtrType GetContainerHealthchecksLivenessProbeTypeArgs

func GetContainerHealthchecksLivenessProbeTypePtr(v *GetContainerHealthchecksLivenessProbeTypeArgs) GetContainerHealthchecksLivenessProbeTypePtrInput {
	return (*getContainerHealthchecksLivenessProbeTypePtrType)(v)
}

func (*getContainerHealthchecksLivenessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i *getContainerHealthchecksLivenessProbeTypePtrType) ToGetContainerHealthchecksLivenessProbeTypePtrOutput() GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksLivenessProbeTypePtrType) ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypePtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeOutput) ToGetContainerHealthchecksLivenessProbeTypeOutput() GetContainerHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeOutput) ToGetContainerHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeOutput) ToGetContainerHealthchecksLivenessProbeTypePtrOutput() GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return o.ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksLivenessProbeTypeOutput) ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeType {
		return &v
	}).(GetContainerHealthchecksLivenessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetContainerHealthchecksLivenessProbeTypeOutput) Exec() GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeTypeExec {
		return v.Exec
	}).(GetContainerHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetContainerHealthchecksLivenessProbeTypeOutput) Grpc() GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeTypeGrpc {
		return v.Grpc
	}).(GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetContainerHealthchecksLivenessProbeTypeOutput) Http() GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeTypeHttp {
		return v.Http
	}).(GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetContainerHealthchecksLivenessProbeTypeOutput) Tcp() GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeTypeTcp {
		return v.Tcp
	}).(GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypePtrOutput) ToGetContainerHealthchecksLivenessProbeTypePtrOutput() GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypePtrOutput) ToGetContainerHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypePtrOutput) Elem() GetContainerHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeType) GetContainerHealthchecksLivenessProbeType {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksLivenessProbeType
		return ret
	}).(GetContainerHealthchecksLivenessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetContainerHealthchecksLivenessProbeTypePtrOutput) Exec() GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(GetContainerHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetContainerHealthchecksLivenessProbeTypePtrOutput) Grpc() GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetContainerHealthchecksLivenessProbeTypePtrOutput) Http() GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetContainerHealthchecksLivenessProbeTypePtrOutput) Tcp() GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeType) *GetContainerHealthchecksLivenessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// GetContainerHealthchecksLivenessProbeTypeExecInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeExecArgs and GetContainerHealthchecksLivenessProbeTypeExecOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeExecInput` via:
//
//	GetContainerHealthchecksLivenessProbeTypeExecArgs{...}
type GetContainerHealthchecksLivenessProbeTypeExecInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeExecOutput() GetContainerHealthchecksLivenessProbeTypeExecOutput
	ToGetContainerHealthchecksLivenessProbeTypeExecOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeExecOutput
}

type GetContainerHealthchecksLivenessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (GetContainerHealthchecksLivenessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i GetContainerHealthchecksLivenessProbeTypeExecArgs) ToGetContainerHealthchecksLivenessProbeTypeExecOutput() GetContainerHealthchecksLivenessProbeTypeExecOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeExecOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeExecArgs) ToGetContainerHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeExecOutput)
}

func (i GetContainerHealthchecksLivenessProbeTypeExecArgs) ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutput() GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeExecArgs) ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeExecOutput).ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksLivenessProbeTypeExecPtrInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeExecArgs, GetContainerHealthchecksLivenessProbeTypeExecPtr and GetContainerHealthchecksLivenessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeExecPtrInput` via:
//
//	        GetContainerHealthchecksLivenessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksLivenessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutput() GetContainerHealthchecksLivenessProbeTypeExecPtrOutput
	ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeExecPtrOutput
}

type getContainerHealthchecksLivenessProbeTypeExecPtrType GetContainerHealthchecksLivenessProbeTypeExecArgs

func GetContainerHealthchecksLivenessProbeTypeExecPtr(v *GetContainerHealthchecksLivenessProbeTypeExecArgs) GetContainerHealthchecksLivenessProbeTypeExecPtrInput {
	return (*getContainerHealthchecksLivenessProbeTypeExecPtrType)(v)
}

func (*getContainerHealthchecksLivenessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i *getContainerHealthchecksLivenessProbeTypeExecPtrType) ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutput() GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksLivenessProbeTypeExecPtrType) ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeExecPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeExecOutput) ToGetContainerHealthchecksLivenessProbeTypeExecOutput() GetContainerHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeExecOutput) ToGetContainerHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeExecOutput) ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutput() GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksLivenessProbeTypeExecOutput) ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksLivenessProbeTypeExec) *GetContainerHealthchecksLivenessProbeTypeExec {
		return &v
	}).(GetContainerHealthchecksLivenessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o GetContainerHealthchecksLivenessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type GetContainerHealthchecksLivenessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeExecPtrOutput) ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutput() GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeExecPtrOutput) ToGetContainerHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeExecPtrOutput) Elem() GetContainerHealthchecksLivenessProbeTypeExecOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeExec) GetContainerHealthchecksLivenessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksLivenessProbeTypeExec
		return ret
	}).(GetContainerHealthchecksLivenessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o GetContainerHealthchecksLivenessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type GetContainerHealthchecksLivenessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// GetContainerHealthchecksLivenessProbeTypeGrpcInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeGrpcArgs and GetContainerHealthchecksLivenessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeGrpcInput` via:
//
//	GetContainerHealthchecksLivenessProbeTypeGrpcArgs{...}
type GetContainerHealthchecksLivenessProbeTypeGrpcInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeGrpcOutput() GetContainerHealthchecksLivenessProbeTypeGrpcOutput
	ToGetContainerHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeGrpcOutput
}

type GetContainerHealthchecksLivenessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GetContainerHealthchecksLivenessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i GetContainerHealthchecksLivenessProbeTypeGrpcArgs) ToGetContainerHealthchecksLivenessProbeTypeGrpcOutput() GetContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeGrpcArgs) ToGetContainerHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeGrpcOutput)
}

func (i GetContainerHealthchecksLivenessProbeTypeGrpcArgs) ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeGrpcArgs) ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeGrpcOutput).ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksLivenessProbeTypeGrpcPtrInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeGrpcArgs, GetContainerHealthchecksLivenessProbeTypeGrpcPtr and GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeGrpcPtrInput` via:
//
//	        GetContainerHealthchecksLivenessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksLivenessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput
	ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput
}

type getContainerHealthchecksLivenessProbeTypeGrpcPtrType GetContainerHealthchecksLivenessProbeTypeGrpcArgs

func GetContainerHealthchecksLivenessProbeTypeGrpcPtr(v *GetContainerHealthchecksLivenessProbeTypeGrpcArgs) GetContainerHealthchecksLivenessProbeTypeGrpcPtrInput {
	return (*getContainerHealthchecksLivenessProbeTypeGrpcPtrType)(v)
}

func (*getContainerHealthchecksLivenessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i *getContainerHealthchecksLivenessProbeTypeGrpcPtrType) ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksLivenessProbeTypeGrpcPtrType) ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeGrpcOutput) ToGetContainerHealthchecksLivenessProbeTypeGrpcOutput() GetContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeGrpcOutput) ToGetContainerHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeGrpcOutput) ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksLivenessProbeTypeGrpcOutput) ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksLivenessProbeTypeGrpc) *GetContainerHealthchecksLivenessProbeTypeGrpc {
		return &v
	}).(GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksLivenessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetContainerHealthchecksLivenessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput() GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) ToGetContainerHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) Elem() GetContainerHealthchecksLivenessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeGrpc) GetContainerHealthchecksLivenessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksLivenessProbeTypeGrpc
		return ret
	}).(GetContainerHealthchecksLivenessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// GetContainerHealthchecksLivenessProbeTypeHttpInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeHttpArgs and GetContainerHealthchecksLivenessProbeTypeHttpOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeHttpInput` via:
//
//	GetContainerHealthchecksLivenessProbeTypeHttpArgs{...}
type GetContainerHealthchecksLivenessProbeTypeHttpInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeHttpOutput() GetContainerHealthchecksLivenessProbeTypeHttpOutput
	ToGetContainerHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeHttpOutput
}

type GetContainerHealthchecksLivenessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (GetContainerHealthchecksLivenessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i GetContainerHealthchecksLivenessProbeTypeHttpArgs) ToGetContainerHealthchecksLivenessProbeTypeHttpOutput() GetContainerHealthchecksLivenessProbeTypeHttpOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeHttpArgs) ToGetContainerHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeHttpOutput)
}

func (i GetContainerHealthchecksLivenessProbeTypeHttpArgs) ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutput() GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeHttpArgs) ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeHttpOutput).ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksLivenessProbeTypeHttpPtrInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeHttpArgs, GetContainerHealthchecksLivenessProbeTypeHttpPtr and GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeHttpPtrInput` via:
//
//	        GetContainerHealthchecksLivenessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksLivenessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutput() GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput
	ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput
}

type getContainerHealthchecksLivenessProbeTypeHttpPtrType GetContainerHealthchecksLivenessProbeTypeHttpArgs

func GetContainerHealthchecksLivenessProbeTypeHttpPtr(v *GetContainerHealthchecksLivenessProbeTypeHttpArgs) GetContainerHealthchecksLivenessProbeTypeHttpPtrInput {
	return (*getContainerHealthchecksLivenessProbeTypeHttpPtrType)(v)
}

func (*getContainerHealthchecksLivenessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i *getContainerHealthchecksLivenessProbeTypeHttpPtrType) ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutput() GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksLivenessProbeTypeHttpPtrType) ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeHttpOutput) ToGetContainerHealthchecksLivenessProbeTypeHttpOutput() GetContainerHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeHttpOutput) ToGetContainerHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeHttpOutput) ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutput() GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksLivenessProbeTypeHttpOutput) ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksLivenessProbeTypeHttp) *GetContainerHealthchecksLivenessProbeTypeHttp {
		return &v
	}).(GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetContainerHealthchecksLivenessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksLivenessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetContainerHealthchecksLivenessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput) ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutput() GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput) ToGetContainerHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput) Elem() GetContainerHealthchecksLivenessProbeTypeHttpOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeHttp) GetContainerHealthchecksLivenessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksLivenessProbeTypeHttp
		return ret
	}).(GetContainerHealthchecksLivenessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// GetContainerHealthchecksLivenessProbeTypeTcpInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeTcpArgs and GetContainerHealthchecksLivenessProbeTypeTcpOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeTcpInput` via:
//
//	GetContainerHealthchecksLivenessProbeTypeTcpArgs{...}
type GetContainerHealthchecksLivenessProbeTypeTcpInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeTcpOutput() GetContainerHealthchecksLivenessProbeTypeTcpOutput
	ToGetContainerHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeTcpOutput
}

type GetContainerHealthchecksLivenessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetContainerHealthchecksLivenessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i GetContainerHealthchecksLivenessProbeTypeTcpArgs) ToGetContainerHealthchecksLivenessProbeTypeTcpOutput() GetContainerHealthchecksLivenessProbeTypeTcpOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeTcpArgs) ToGetContainerHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeTcpOutput)
}

func (i GetContainerHealthchecksLivenessProbeTypeTcpArgs) ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutput() GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksLivenessProbeTypeTcpArgs) ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeTcpOutput).ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksLivenessProbeTypeTcpPtrInput is an input type that accepts GetContainerHealthchecksLivenessProbeTypeTcpArgs, GetContainerHealthchecksLivenessProbeTypeTcpPtr and GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksLivenessProbeTypeTcpPtrInput` via:
//
//	        GetContainerHealthchecksLivenessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksLivenessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutput() GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput
	ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Context) GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput
}

type getContainerHealthchecksLivenessProbeTypeTcpPtrType GetContainerHealthchecksLivenessProbeTypeTcpArgs

func GetContainerHealthchecksLivenessProbeTypeTcpPtr(v *GetContainerHealthchecksLivenessProbeTypeTcpArgs) GetContainerHealthchecksLivenessProbeTypeTcpPtrInput {
	return (*getContainerHealthchecksLivenessProbeTypeTcpPtrType)(v)
}

func (*getContainerHealthchecksLivenessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i *getContainerHealthchecksLivenessProbeTypeTcpPtrType) ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutput() GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksLivenessProbeTypeTcpPtrType) ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetContainerHealthchecksLivenessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeTcpOutput) ToGetContainerHealthchecksLivenessProbeTypeTcpOutput() GetContainerHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeTcpOutput) ToGetContainerHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeTcpOutput) ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutput() GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksLivenessProbeTypeTcpOutput) ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksLivenessProbeTypeTcp) *GetContainerHealthchecksLivenessProbeTypeTcp {
		return &v
	}).(GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetContainerHealthchecksLivenessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksLivenessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksLivenessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput) ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutput() GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput) ToGetContainerHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput) Elem() GetContainerHealthchecksLivenessProbeTypeTcpOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeTcp) GetContainerHealthchecksLivenessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksLivenessProbeTypeTcp
		return ret
	}).(GetContainerHealthchecksLivenessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksLivenessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type GetContainerHealthchecksReadinessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetContainerHealthchecksReadinessProbeType `pulumi:"type"`
}

// GetContainerHealthchecksReadinessProbeInput is an input type that accepts GetContainerHealthchecksReadinessProbeArgs and GetContainerHealthchecksReadinessProbeOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeInput` via:
//
//	GetContainerHealthchecksReadinessProbeArgs{...}
type GetContainerHealthchecksReadinessProbeInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeOutput() GetContainerHealthchecksReadinessProbeOutput
	ToGetContainerHealthchecksReadinessProbeOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeOutput
}

type GetContainerHealthchecksReadinessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetContainerHealthchecksReadinessProbeTypeInput `pulumi:"type"`
}

func (GetContainerHealthchecksReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbe)(nil)).Elem()
}

func (i GetContainerHealthchecksReadinessProbeArgs) ToGetContainerHealthchecksReadinessProbeOutput() GetContainerHealthchecksReadinessProbeOutput {
	return i.ToGetContainerHealthchecksReadinessProbeOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeArgs) ToGetContainerHealthchecksReadinessProbeOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeOutput)
}

func (i GetContainerHealthchecksReadinessProbeArgs) ToGetContainerHealthchecksReadinessProbePtrOutput() GetContainerHealthchecksReadinessProbePtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeArgs) ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeOutput).ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(ctx)
}

// GetContainerHealthchecksReadinessProbePtrInput is an input type that accepts GetContainerHealthchecksReadinessProbeArgs, GetContainerHealthchecksReadinessProbePtr and GetContainerHealthchecksReadinessProbePtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbePtrInput` via:
//
//	        GetContainerHealthchecksReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksReadinessProbePtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbePtrOutput() GetContainerHealthchecksReadinessProbePtrOutput
	ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbePtrOutput
}

type getContainerHealthchecksReadinessProbePtrType GetContainerHealthchecksReadinessProbeArgs

func GetContainerHealthchecksReadinessProbePtr(v *GetContainerHealthchecksReadinessProbeArgs) GetContainerHealthchecksReadinessProbePtrInput {
	return (*getContainerHealthchecksReadinessProbePtrType)(v)
}

func (*getContainerHealthchecksReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbe)(nil)).Elem()
}

func (i *getContainerHealthchecksReadinessProbePtrType) ToGetContainerHealthchecksReadinessProbePtrOutput() GetContainerHealthchecksReadinessProbePtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksReadinessProbePtrType) ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbePtrOutput)
}

type GetContainerHealthchecksReadinessProbeOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbe)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeOutput) ToGetContainerHealthchecksReadinessProbeOutput() GetContainerHealthchecksReadinessProbeOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeOutput) ToGetContainerHealthchecksReadinessProbeOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeOutput) ToGetContainerHealthchecksReadinessProbePtrOutput() GetContainerHealthchecksReadinessProbePtrOutput {
	return o.ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksReadinessProbeOutput) ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksReadinessProbe) *GetContainerHealthchecksReadinessProbe {
		return &v
	}).(GetContainerHealthchecksReadinessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetContainerHealthchecksReadinessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetContainerHealthchecksReadinessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o GetContainerHealthchecksReadinessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetContainerHealthchecksReadinessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetContainerHealthchecksReadinessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetContainerHealthchecksReadinessProbeOutput) Type() GetContainerHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbe) GetContainerHealthchecksReadinessProbeType {
		return v.Type
	}).(GetContainerHealthchecksReadinessProbeTypeOutput)
}

type GetContainerHealthchecksReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbe)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbePtrOutput) ToGetContainerHealthchecksReadinessProbePtrOutput() GetContainerHealthchecksReadinessProbePtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbePtrOutput) ToGetContainerHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbePtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbePtrOutput) Elem() GetContainerHealthchecksReadinessProbeOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbe) GetContainerHealthchecksReadinessProbe {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksReadinessProbe
		return ret
	}).(GetContainerHealthchecksReadinessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetContainerHealthchecksReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetContainerHealthchecksReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o GetContainerHealthchecksReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetContainerHealthchecksReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetContainerHealthchecksReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetContainerHealthchecksReadinessProbePtrOutput) Type() GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbe) *GetContainerHealthchecksReadinessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(GetContainerHealthchecksReadinessProbeTypePtrOutput)
}

type GetContainerHealthchecksReadinessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *GetContainerHealthchecksReadinessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *GetContainerHealthchecksReadinessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *GetContainerHealthchecksReadinessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *GetContainerHealthchecksReadinessProbeTypeTcp `pulumi:"tcp"`
}

// GetContainerHealthchecksReadinessProbeTypeInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeArgs and GetContainerHealthchecksReadinessProbeTypeOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeInput` via:
//
//	GetContainerHealthchecksReadinessProbeTypeArgs{...}
type GetContainerHealthchecksReadinessProbeTypeInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeOutput() GetContainerHealthchecksReadinessProbeTypeOutput
	ToGetContainerHealthchecksReadinessProbeTypeOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeOutput
}

type GetContainerHealthchecksReadinessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec GetContainerHealthchecksReadinessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc GetContainerHealthchecksReadinessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http GetContainerHealthchecksReadinessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp GetContainerHealthchecksReadinessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (GetContainerHealthchecksReadinessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i GetContainerHealthchecksReadinessProbeTypeArgs) ToGetContainerHealthchecksReadinessProbeTypeOutput() GetContainerHealthchecksReadinessProbeTypeOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeArgs) ToGetContainerHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeOutput)
}

func (i GetContainerHealthchecksReadinessProbeTypeArgs) ToGetContainerHealthchecksReadinessProbeTypePtrOutput() GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeArgs) ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeOutput).ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx)
}

// GetContainerHealthchecksReadinessProbeTypePtrInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeArgs, GetContainerHealthchecksReadinessProbeTypePtr and GetContainerHealthchecksReadinessProbeTypePtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypePtrInput` via:
//
//	        GetContainerHealthchecksReadinessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksReadinessProbeTypePtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypePtrOutput() GetContainerHealthchecksReadinessProbeTypePtrOutput
	ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypePtrOutput
}

type getContainerHealthchecksReadinessProbeTypePtrType GetContainerHealthchecksReadinessProbeTypeArgs

func GetContainerHealthchecksReadinessProbeTypePtr(v *GetContainerHealthchecksReadinessProbeTypeArgs) GetContainerHealthchecksReadinessProbeTypePtrInput {
	return (*getContainerHealthchecksReadinessProbeTypePtrType)(v)
}

func (*getContainerHealthchecksReadinessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i *getContainerHealthchecksReadinessProbeTypePtrType) ToGetContainerHealthchecksReadinessProbeTypePtrOutput() GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksReadinessProbeTypePtrType) ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypePtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeOutput) ToGetContainerHealthchecksReadinessProbeTypeOutput() GetContainerHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeOutput) ToGetContainerHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeOutput) ToGetContainerHealthchecksReadinessProbeTypePtrOutput() GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return o.ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksReadinessProbeTypeOutput) ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeType {
		return &v
	}).(GetContainerHealthchecksReadinessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetContainerHealthchecksReadinessProbeTypeOutput) Exec() GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeTypeExec {
		return v.Exec
	}).(GetContainerHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetContainerHealthchecksReadinessProbeTypeOutput) Grpc() GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeTypeGrpc {
		return v.Grpc
	}).(GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetContainerHealthchecksReadinessProbeTypeOutput) Http() GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeTypeHttp {
		return v.Http
	}).(GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetContainerHealthchecksReadinessProbeTypeOutput) Tcp() GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeTypeTcp {
		return v.Tcp
	}).(GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypePtrOutput) ToGetContainerHealthchecksReadinessProbeTypePtrOutput() GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypePtrOutput) ToGetContainerHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypePtrOutput) Elem() GetContainerHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeType) GetContainerHealthchecksReadinessProbeType {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksReadinessProbeType
		return ret
	}).(GetContainerHealthchecksReadinessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetContainerHealthchecksReadinessProbeTypePtrOutput) Exec() GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(GetContainerHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetContainerHealthchecksReadinessProbeTypePtrOutput) Grpc() GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetContainerHealthchecksReadinessProbeTypePtrOutput) Http() GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetContainerHealthchecksReadinessProbeTypePtrOutput) Tcp() GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeType) *GetContainerHealthchecksReadinessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// GetContainerHealthchecksReadinessProbeTypeExecInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeExecArgs and GetContainerHealthchecksReadinessProbeTypeExecOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeExecInput` via:
//
//	GetContainerHealthchecksReadinessProbeTypeExecArgs{...}
type GetContainerHealthchecksReadinessProbeTypeExecInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeExecOutput() GetContainerHealthchecksReadinessProbeTypeExecOutput
	ToGetContainerHealthchecksReadinessProbeTypeExecOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeExecOutput
}

type GetContainerHealthchecksReadinessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (GetContainerHealthchecksReadinessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i GetContainerHealthchecksReadinessProbeTypeExecArgs) ToGetContainerHealthchecksReadinessProbeTypeExecOutput() GetContainerHealthchecksReadinessProbeTypeExecOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeExecOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeExecArgs) ToGetContainerHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeExecOutput)
}

func (i GetContainerHealthchecksReadinessProbeTypeExecArgs) ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutput() GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeExecArgs) ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeExecOutput).ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksReadinessProbeTypeExecPtrInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeExecArgs, GetContainerHealthchecksReadinessProbeTypeExecPtr and GetContainerHealthchecksReadinessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeExecPtrInput` via:
//
//	        GetContainerHealthchecksReadinessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksReadinessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutput() GetContainerHealthchecksReadinessProbeTypeExecPtrOutput
	ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeExecPtrOutput
}

type getContainerHealthchecksReadinessProbeTypeExecPtrType GetContainerHealthchecksReadinessProbeTypeExecArgs

func GetContainerHealthchecksReadinessProbeTypeExecPtr(v *GetContainerHealthchecksReadinessProbeTypeExecArgs) GetContainerHealthchecksReadinessProbeTypeExecPtrInput {
	return (*getContainerHealthchecksReadinessProbeTypeExecPtrType)(v)
}

func (*getContainerHealthchecksReadinessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i *getContainerHealthchecksReadinessProbeTypeExecPtrType) ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutput() GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksReadinessProbeTypeExecPtrType) ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeExecPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeExecOutput) ToGetContainerHealthchecksReadinessProbeTypeExecOutput() GetContainerHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeExecOutput) ToGetContainerHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeExecOutput) ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutput() GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksReadinessProbeTypeExecOutput) ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksReadinessProbeTypeExec) *GetContainerHealthchecksReadinessProbeTypeExec {
		return &v
	}).(GetContainerHealthchecksReadinessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o GetContainerHealthchecksReadinessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type GetContainerHealthchecksReadinessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeExecPtrOutput) ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutput() GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeExecPtrOutput) ToGetContainerHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeExecPtrOutput) Elem() GetContainerHealthchecksReadinessProbeTypeExecOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeExec) GetContainerHealthchecksReadinessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksReadinessProbeTypeExec
		return ret
	}).(GetContainerHealthchecksReadinessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o GetContainerHealthchecksReadinessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type GetContainerHealthchecksReadinessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// GetContainerHealthchecksReadinessProbeTypeGrpcInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeGrpcArgs and GetContainerHealthchecksReadinessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeGrpcInput` via:
//
//	GetContainerHealthchecksReadinessProbeTypeGrpcArgs{...}
type GetContainerHealthchecksReadinessProbeTypeGrpcInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeGrpcOutput() GetContainerHealthchecksReadinessProbeTypeGrpcOutput
	ToGetContainerHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeGrpcOutput
}

type GetContainerHealthchecksReadinessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GetContainerHealthchecksReadinessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i GetContainerHealthchecksReadinessProbeTypeGrpcArgs) ToGetContainerHealthchecksReadinessProbeTypeGrpcOutput() GetContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeGrpcArgs) ToGetContainerHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeGrpcOutput)
}

func (i GetContainerHealthchecksReadinessProbeTypeGrpcArgs) ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeGrpcArgs) ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeGrpcOutput).ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksReadinessProbeTypeGrpcPtrInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeGrpcArgs, GetContainerHealthchecksReadinessProbeTypeGrpcPtr and GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeGrpcPtrInput` via:
//
//	        GetContainerHealthchecksReadinessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksReadinessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput
	ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput
}

type getContainerHealthchecksReadinessProbeTypeGrpcPtrType GetContainerHealthchecksReadinessProbeTypeGrpcArgs

func GetContainerHealthchecksReadinessProbeTypeGrpcPtr(v *GetContainerHealthchecksReadinessProbeTypeGrpcArgs) GetContainerHealthchecksReadinessProbeTypeGrpcPtrInput {
	return (*getContainerHealthchecksReadinessProbeTypeGrpcPtrType)(v)
}

func (*getContainerHealthchecksReadinessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i *getContainerHealthchecksReadinessProbeTypeGrpcPtrType) ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksReadinessProbeTypeGrpcPtrType) ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeGrpcOutput) ToGetContainerHealthchecksReadinessProbeTypeGrpcOutput() GetContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeGrpcOutput) ToGetContainerHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeGrpcOutput) ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksReadinessProbeTypeGrpcOutput) ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksReadinessProbeTypeGrpc) *GetContainerHealthchecksReadinessProbeTypeGrpc {
		return &v
	}).(GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksReadinessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetContainerHealthchecksReadinessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput() GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) ToGetContainerHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) Elem() GetContainerHealthchecksReadinessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeGrpc) GetContainerHealthchecksReadinessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksReadinessProbeTypeGrpc
		return ret
	}).(GetContainerHealthchecksReadinessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// GetContainerHealthchecksReadinessProbeTypeHttpInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeHttpArgs and GetContainerHealthchecksReadinessProbeTypeHttpOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeHttpInput` via:
//
//	GetContainerHealthchecksReadinessProbeTypeHttpArgs{...}
type GetContainerHealthchecksReadinessProbeTypeHttpInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeHttpOutput() GetContainerHealthchecksReadinessProbeTypeHttpOutput
	ToGetContainerHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeHttpOutput
}

type GetContainerHealthchecksReadinessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (GetContainerHealthchecksReadinessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i GetContainerHealthchecksReadinessProbeTypeHttpArgs) ToGetContainerHealthchecksReadinessProbeTypeHttpOutput() GetContainerHealthchecksReadinessProbeTypeHttpOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeHttpArgs) ToGetContainerHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeHttpOutput)
}

func (i GetContainerHealthchecksReadinessProbeTypeHttpArgs) ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutput() GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeHttpArgs) ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeHttpOutput).ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksReadinessProbeTypeHttpPtrInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeHttpArgs, GetContainerHealthchecksReadinessProbeTypeHttpPtr and GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeHttpPtrInput` via:
//
//	        GetContainerHealthchecksReadinessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksReadinessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutput() GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput
	ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput
}

type getContainerHealthchecksReadinessProbeTypeHttpPtrType GetContainerHealthchecksReadinessProbeTypeHttpArgs

func GetContainerHealthchecksReadinessProbeTypeHttpPtr(v *GetContainerHealthchecksReadinessProbeTypeHttpArgs) GetContainerHealthchecksReadinessProbeTypeHttpPtrInput {
	return (*getContainerHealthchecksReadinessProbeTypeHttpPtrType)(v)
}

func (*getContainerHealthchecksReadinessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i *getContainerHealthchecksReadinessProbeTypeHttpPtrType) ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutput() GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksReadinessProbeTypeHttpPtrType) ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeHttpOutput) ToGetContainerHealthchecksReadinessProbeTypeHttpOutput() GetContainerHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeHttpOutput) ToGetContainerHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeHttpOutput) ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutput() GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksReadinessProbeTypeHttpOutput) ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksReadinessProbeTypeHttp) *GetContainerHealthchecksReadinessProbeTypeHttp {
		return &v
	}).(GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetContainerHealthchecksReadinessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksReadinessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetContainerHealthchecksReadinessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput) ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutput() GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput) ToGetContainerHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput) Elem() GetContainerHealthchecksReadinessProbeTypeHttpOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeHttp) GetContainerHealthchecksReadinessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksReadinessProbeTypeHttp
		return ret
	}).(GetContainerHealthchecksReadinessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// GetContainerHealthchecksReadinessProbeTypeTcpInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeTcpArgs and GetContainerHealthchecksReadinessProbeTypeTcpOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeTcpInput` via:
//
//	GetContainerHealthchecksReadinessProbeTypeTcpArgs{...}
type GetContainerHealthchecksReadinessProbeTypeTcpInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeTcpOutput() GetContainerHealthchecksReadinessProbeTypeTcpOutput
	ToGetContainerHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeTcpOutput
}

type GetContainerHealthchecksReadinessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetContainerHealthchecksReadinessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i GetContainerHealthchecksReadinessProbeTypeTcpArgs) ToGetContainerHealthchecksReadinessProbeTypeTcpOutput() GetContainerHealthchecksReadinessProbeTypeTcpOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeTcpArgs) ToGetContainerHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeTcpOutput)
}

func (i GetContainerHealthchecksReadinessProbeTypeTcpArgs) ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutput() GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i GetContainerHealthchecksReadinessProbeTypeTcpArgs) ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeTcpOutput).ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx)
}

// GetContainerHealthchecksReadinessProbeTypeTcpPtrInput is an input type that accepts GetContainerHealthchecksReadinessProbeTypeTcpArgs, GetContainerHealthchecksReadinessProbeTypeTcpPtr and GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `GetContainerHealthchecksReadinessProbeTypeTcpPtrInput` via:
//
//	        GetContainerHealthchecksReadinessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type GetContainerHealthchecksReadinessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutput() GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput
	ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Context) GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput
}

type getContainerHealthchecksReadinessProbeTypeTcpPtrType GetContainerHealthchecksReadinessProbeTypeTcpArgs

func GetContainerHealthchecksReadinessProbeTypeTcpPtr(v *GetContainerHealthchecksReadinessProbeTypeTcpArgs) GetContainerHealthchecksReadinessProbeTypeTcpPtrInput {
	return (*getContainerHealthchecksReadinessProbeTypeTcpPtrType)(v)
}

func (*getContainerHealthchecksReadinessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i *getContainerHealthchecksReadinessProbeTypeTcpPtrType) ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutput() GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *getContainerHealthchecksReadinessProbeTypeTcpPtrType) ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetContainerHealthchecksReadinessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeTcpOutput) ToGetContainerHealthchecksReadinessProbeTypeTcpOutput() GetContainerHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeTcpOutput) ToGetContainerHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeTcpOutput) ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutput() GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o GetContainerHealthchecksReadinessProbeTypeTcpOutput) ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetContainerHealthchecksReadinessProbeTypeTcp) *GetContainerHealthchecksReadinessProbeTypeTcp {
		return &v
	}).(GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetContainerHealthchecksReadinessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksReadinessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerHealthchecksReadinessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetContainerHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput) ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutput() GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput) ToGetContainerHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput) Elem() GetContainerHealthchecksReadinessProbeTypeTcpOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeTcp) GetContainerHealthchecksReadinessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret GetContainerHealthchecksReadinessProbeTypeTcp
		return ret
	}).(GetContainerHealthchecksReadinessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetContainerHealthchecksReadinessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type GetContainerPort struct {
	// External port of the container.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort int `pulumi:"externalPort"`
	// Id of the port.
	Id string `pulumi:"id"`
	// Internal port of the container.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort int `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault bool `pulumi:"isDefault"`
	// Name of the port.
	Name string `pulumi:"name"`
	// Protocol used for the port of the container.
	// 	- Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
	// 	- Default: `HTTP`.
	Protocol string `pulumi:"protocol"`
	// Specify if the port is exposed to the world or not for this container.
	PubliclyAccessible bool `pulumi:"publiclyAccessible"`
}

// GetContainerPortInput is an input type that accepts GetContainerPortArgs and GetContainerPortOutput values.
// You can construct a concrete instance of `GetContainerPortInput` via:
//
//	GetContainerPortArgs{...}
type GetContainerPortInput interface {
	pulumi.Input

	ToGetContainerPortOutput() GetContainerPortOutput
	ToGetContainerPortOutputWithContext(context.Context) GetContainerPortOutput
}

type GetContainerPortArgs struct {
	// External port of the container.
	// 	- Required if: `ports.publicly_accessible=true`.
	// 	- Must be: `>= 1` and `<= 65535`.
	ExternalPort pulumi.IntInput `pulumi:"externalPort"`
	// Id of the port.
	Id pulumi.StringInput `pulumi:"id"`
	// Internal port of the container.
	// 	- Must be: `>= 1` and `<= 65535`.
	InternalPort pulumi.IntInput `pulumi:"internalPort"`
	// If this port will be used for the root domain
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// Name of the port.
	Name pulumi.StringInput `pulumi:"name"`
	// Protocol used for the port of the container.
	// 	- Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
	// 	- Default: `HTTP`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Specify if the port is exposed to the world or not for this container.
	PubliclyAccessible pulumi.BoolInput `pulumi:"publiclyAccessible"`
}

func (GetContainerPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerPort)(nil)).Elem()
}

func (i GetContainerPortArgs) ToGetContainerPortOutput() GetContainerPortOutput {
	return i.ToGetContainerPortOutputWithContext(context.Background())
}

func (i GetContainerPortArgs) ToGetContainerPortOutputWithContext(ctx context.Context) GetContainerPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerPortOutput)
}

// GetContainerPortArrayInput is an input type that accepts GetContainerPortArray and GetContainerPortArrayOutput values.
// You can construct a concrete instance of `GetContainerPortArrayInput` via:
//
//	GetContainerPortArray{ GetContainerPortArgs{...} }
type GetContainerPortArrayInput interface {
	pulumi.Input

	ToGetContainerPortArrayOutput() GetContainerPortArrayOutput
	ToGetContainerPortArrayOutputWithContext(context.Context) GetContainerPortArrayOutput
}

type GetContainerPortArray []GetContainerPortInput

func (GetContainerPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerPort)(nil)).Elem()
}

func (i GetContainerPortArray) ToGetContainerPortArrayOutput() GetContainerPortArrayOutput {
	return i.ToGetContainerPortArrayOutputWithContext(context.Background())
}

func (i GetContainerPortArray) ToGetContainerPortArrayOutputWithContext(ctx context.Context) GetContainerPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerPortArrayOutput)
}

type GetContainerPortOutput struct{ *pulumi.OutputState }

func (GetContainerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerPort)(nil)).Elem()
}

func (o GetContainerPortOutput) ToGetContainerPortOutput() GetContainerPortOutput {
	return o
}

func (o GetContainerPortOutput) ToGetContainerPortOutputWithContext(ctx context.Context) GetContainerPortOutput {
	return o
}

// External port of the container.
//   - Required if: `ports.publicly_accessible=true`.
//   - Must be: `>= 1` and `<= 65535`.
func (o GetContainerPortOutput) ExternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerPort) int { return v.ExternalPort }).(pulumi.IntOutput)
}

// Id of the port.
func (o GetContainerPortOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerPort) string { return v.Id }).(pulumi.StringOutput)
}

// Internal port of the container.
//   - Must be: `>= 1` and `<= 65535`.
func (o GetContainerPortOutput) InternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerPort) int { return v.InternalPort }).(pulumi.IntOutput)
}

// If this port will be used for the root domain
func (o GetContainerPortOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetContainerPort) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of the port.
func (o GetContainerPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerPort) string { return v.Name }).(pulumi.StringOutput)
}

// Protocol used for the port of the container.
//   - Can be: `GRPC`, `HTTP`, `TCP`, `UDP`.
//   - Default: `HTTP`.
func (o GetContainerPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerPort) string { return v.Protocol }).(pulumi.StringOutput)
}

// Specify if the port is exposed to the world or not for this container.
func (o GetContainerPortOutput) PubliclyAccessible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetContainerPort) bool { return v.PubliclyAccessible }).(pulumi.BoolOutput)
}

type GetContainerPortArrayOutput struct{ *pulumi.OutputState }

func (GetContainerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerPort)(nil)).Elem()
}

func (o GetContainerPortArrayOutput) ToGetContainerPortArrayOutput() GetContainerPortArrayOutput {
	return o
}

func (o GetContainerPortArrayOutput) ToGetContainerPortArrayOutputWithContext(ctx context.Context) GetContainerPortArrayOutput {
	return o
}

func (o GetContainerPortArrayOutput) Index(i pulumi.IntInput) GetContainerPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerPort {
		return vs[0].([]GetContainerPort)[vs[1].(int)]
	}).(GetContainerPortOutput)
}

type GetContainerSecret struct {
	// Id of the secret.
	Id string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// GetContainerSecretInput is an input type that accepts GetContainerSecretArgs and GetContainerSecretOutput values.
// You can construct a concrete instance of `GetContainerSecretInput` via:
//
//	GetContainerSecretArgs{...}
type GetContainerSecretInput interface {
	pulumi.Input

	ToGetContainerSecretOutput() GetContainerSecretOutput
	ToGetContainerSecretOutputWithContext(context.Context) GetContainerSecretOutput
}

type GetContainerSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetContainerSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerSecret)(nil)).Elem()
}

func (i GetContainerSecretArgs) ToGetContainerSecretOutput() GetContainerSecretOutput {
	return i.ToGetContainerSecretOutputWithContext(context.Background())
}

func (i GetContainerSecretArgs) ToGetContainerSecretOutputWithContext(ctx context.Context) GetContainerSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerSecretOutput)
}

// GetContainerSecretArrayInput is an input type that accepts GetContainerSecretArray and GetContainerSecretArrayOutput values.
// You can construct a concrete instance of `GetContainerSecretArrayInput` via:
//
//	GetContainerSecretArray{ GetContainerSecretArgs{...} }
type GetContainerSecretArrayInput interface {
	pulumi.Input

	ToGetContainerSecretArrayOutput() GetContainerSecretArrayOutput
	ToGetContainerSecretArrayOutputWithContext(context.Context) GetContainerSecretArrayOutput
}

type GetContainerSecretArray []GetContainerSecretInput

func (GetContainerSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerSecret)(nil)).Elem()
}

func (i GetContainerSecretArray) ToGetContainerSecretArrayOutput() GetContainerSecretArrayOutput {
	return i.ToGetContainerSecretArrayOutputWithContext(context.Background())
}

func (i GetContainerSecretArray) ToGetContainerSecretArrayOutputWithContext(ctx context.Context) GetContainerSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerSecretArrayOutput)
}

type GetContainerSecretOutput struct{ *pulumi.OutputState }

func (GetContainerSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerSecret)(nil)).Elem()
}

func (o GetContainerSecretOutput) ToGetContainerSecretOutput() GetContainerSecretOutput {
	return o
}

func (o GetContainerSecretOutput) ToGetContainerSecretOutputWithContext(ctx context.Context) GetContainerSecretOutput {
	return o
}

// Id of the secret.
func (o GetContainerSecretOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecret) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the secret.
func (o GetContainerSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o GetContainerSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecret) string { return v.Value }).(pulumi.StringOutput)
}

type GetContainerSecretArrayOutput struct{ *pulumi.OutputState }

func (GetContainerSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerSecret)(nil)).Elem()
}

func (o GetContainerSecretArrayOutput) ToGetContainerSecretArrayOutput() GetContainerSecretArrayOutput {
	return o
}

func (o GetContainerSecretArrayOutput) ToGetContainerSecretArrayOutputWithContext(ctx context.Context) GetContainerSecretArrayOutput {
	return o
}

func (o GetContainerSecretArrayOutput) Index(i pulumi.IntInput) GetContainerSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerSecret {
		return vs[0].([]GetContainerSecret)[vs[1].(int)]
	}).(GetContainerSecretOutput)
}

type GetContainerSecretAlias struct {
	// Id of the secret alias.
	Id string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// GetContainerSecretAliasInput is an input type that accepts GetContainerSecretAliasArgs and GetContainerSecretAliasOutput values.
// You can construct a concrete instance of `GetContainerSecretAliasInput` via:
//
//	GetContainerSecretAliasArgs{...}
type GetContainerSecretAliasInput interface {
	pulumi.Input

	ToGetContainerSecretAliasOutput() GetContainerSecretAliasOutput
	ToGetContainerSecretAliasOutputWithContext(context.Context) GetContainerSecretAliasOutput
}

type GetContainerSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetContainerSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerSecretAlias)(nil)).Elem()
}

func (i GetContainerSecretAliasArgs) ToGetContainerSecretAliasOutput() GetContainerSecretAliasOutput {
	return i.ToGetContainerSecretAliasOutputWithContext(context.Background())
}

func (i GetContainerSecretAliasArgs) ToGetContainerSecretAliasOutputWithContext(ctx context.Context) GetContainerSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerSecretAliasOutput)
}

// GetContainerSecretAliasArrayInput is an input type that accepts GetContainerSecretAliasArray and GetContainerSecretAliasArrayOutput values.
// You can construct a concrete instance of `GetContainerSecretAliasArrayInput` via:
//
//	GetContainerSecretAliasArray{ GetContainerSecretAliasArgs{...} }
type GetContainerSecretAliasArrayInput interface {
	pulumi.Input

	ToGetContainerSecretAliasArrayOutput() GetContainerSecretAliasArrayOutput
	ToGetContainerSecretAliasArrayOutputWithContext(context.Context) GetContainerSecretAliasArrayOutput
}

type GetContainerSecretAliasArray []GetContainerSecretAliasInput

func (GetContainerSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerSecretAlias)(nil)).Elem()
}

func (i GetContainerSecretAliasArray) ToGetContainerSecretAliasArrayOutput() GetContainerSecretAliasArrayOutput {
	return i.ToGetContainerSecretAliasArrayOutputWithContext(context.Background())
}

func (i GetContainerSecretAliasArray) ToGetContainerSecretAliasArrayOutputWithContext(ctx context.Context) GetContainerSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerSecretAliasArrayOutput)
}

type GetContainerSecretAliasOutput struct{ *pulumi.OutputState }

func (GetContainerSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerSecretAlias)(nil)).Elem()
}

func (o GetContainerSecretAliasOutput) ToGetContainerSecretAliasOutput() GetContainerSecretAliasOutput {
	return o
}

func (o GetContainerSecretAliasOutput) ToGetContainerSecretAliasOutputWithContext(ctx context.Context) GetContainerSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o GetContainerSecretAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecretAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret alias.
func (o GetContainerSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o GetContainerSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetContainerSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (GetContainerSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerSecretAlias)(nil)).Elem()
}

func (o GetContainerSecretAliasArrayOutput) ToGetContainerSecretAliasArrayOutput() GetContainerSecretAliasArrayOutput {
	return o
}

func (o GetContainerSecretAliasArrayOutput) ToGetContainerSecretAliasArrayOutputWithContext(ctx context.Context) GetContainerSecretAliasArrayOutput {
	return o
}

func (o GetContainerSecretAliasArrayOutput) Index(i pulumi.IntInput) GetContainerSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerSecretAlias {
		return vs[0].([]GetContainerSecretAlias)[vs[1].(int)]
	}).(GetContainerSecretAliasOutput)
}

type GetContainerSecretOverride struct {
	// Id of the secret override.
	Id string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// GetContainerSecretOverrideInput is an input type that accepts GetContainerSecretOverrideArgs and GetContainerSecretOverrideOutput values.
// You can construct a concrete instance of `GetContainerSecretOverrideInput` via:
//
//	GetContainerSecretOverrideArgs{...}
type GetContainerSecretOverrideInput interface {
	pulumi.Input

	ToGetContainerSecretOverrideOutput() GetContainerSecretOverrideOutput
	ToGetContainerSecretOverrideOutputWithContext(context.Context) GetContainerSecretOverrideOutput
}

type GetContainerSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetContainerSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerSecretOverride)(nil)).Elem()
}

func (i GetContainerSecretOverrideArgs) ToGetContainerSecretOverrideOutput() GetContainerSecretOverrideOutput {
	return i.ToGetContainerSecretOverrideOutputWithContext(context.Background())
}

func (i GetContainerSecretOverrideArgs) ToGetContainerSecretOverrideOutputWithContext(ctx context.Context) GetContainerSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerSecretOverrideOutput)
}

// GetContainerSecretOverrideArrayInput is an input type that accepts GetContainerSecretOverrideArray and GetContainerSecretOverrideArrayOutput values.
// You can construct a concrete instance of `GetContainerSecretOverrideArrayInput` via:
//
//	GetContainerSecretOverrideArray{ GetContainerSecretOverrideArgs{...} }
type GetContainerSecretOverrideArrayInput interface {
	pulumi.Input

	ToGetContainerSecretOverrideArrayOutput() GetContainerSecretOverrideArrayOutput
	ToGetContainerSecretOverrideArrayOutputWithContext(context.Context) GetContainerSecretOverrideArrayOutput
}

type GetContainerSecretOverrideArray []GetContainerSecretOverrideInput

func (GetContainerSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerSecretOverride)(nil)).Elem()
}

func (i GetContainerSecretOverrideArray) ToGetContainerSecretOverrideArrayOutput() GetContainerSecretOverrideArrayOutput {
	return i.ToGetContainerSecretOverrideArrayOutputWithContext(context.Background())
}

func (i GetContainerSecretOverrideArray) ToGetContainerSecretOverrideArrayOutputWithContext(ctx context.Context) GetContainerSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerSecretOverrideArrayOutput)
}

type GetContainerSecretOverrideOutput struct{ *pulumi.OutputState }

func (GetContainerSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerSecretOverride)(nil)).Elem()
}

func (o GetContainerSecretOverrideOutput) ToGetContainerSecretOverrideOutput() GetContainerSecretOverrideOutput {
	return o
}

func (o GetContainerSecretOverrideOutput) ToGetContainerSecretOverrideOutputWithContext(ctx context.Context) GetContainerSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o GetContainerSecretOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecretOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret override.
func (o GetContainerSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o GetContainerSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetContainerSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetContainerSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerSecretOverride)(nil)).Elem()
}

func (o GetContainerSecretOverrideArrayOutput) ToGetContainerSecretOverrideArrayOutput() GetContainerSecretOverrideArrayOutput {
	return o
}

func (o GetContainerSecretOverrideArrayOutput) ToGetContainerSecretOverrideArrayOutputWithContext(ctx context.Context) GetContainerSecretOverrideArrayOutput {
	return o
}

func (o GetContainerSecretOverrideArrayOutput) Index(i pulumi.IntInput) GetContainerSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerSecretOverride {
		return vs[0].([]GetContainerSecretOverride)[vs[1].(int)]
	}).(GetContainerSecretOverrideOutput)
}

type GetContainerStorage struct {
	// Id of the storage.
	Id string `pulumi:"id"`
	// Mount point of the storage for the container.
	MountPoint string `pulumi:"mountPoint"`
	// Size of the storage for the container in GB [1024MB = 1GB].
	// 	- Must be: `>= 1`.
	Size int `pulumi:"size"`
	// Type of the storage for the container.
	// 	- Can be: `FAST_SSD`.
	Type string `pulumi:"type"`
}

// GetContainerStorageInput is an input type that accepts GetContainerStorageArgs and GetContainerStorageOutput values.
// You can construct a concrete instance of `GetContainerStorageInput` via:
//
//	GetContainerStorageArgs{...}
type GetContainerStorageInput interface {
	pulumi.Input

	ToGetContainerStorageOutput() GetContainerStorageOutput
	ToGetContainerStorageOutputWithContext(context.Context) GetContainerStorageOutput
}

type GetContainerStorageArgs struct {
	// Id of the storage.
	Id pulumi.StringInput `pulumi:"id"`
	// Mount point of the storage for the container.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// Size of the storage for the container in GB [1024MB = 1GB].
	// 	- Must be: `>= 1`.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of the storage for the container.
	// 	- Can be: `FAST_SSD`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetContainerStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerStorage)(nil)).Elem()
}

func (i GetContainerStorageArgs) ToGetContainerStorageOutput() GetContainerStorageOutput {
	return i.ToGetContainerStorageOutputWithContext(context.Background())
}

func (i GetContainerStorageArgs) ToGetContainerStorageOutputWithContext(ctx context.Context) GetContainerStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerStorageOutput)
}

// GetContainerStorageArrayInput is an input type that accepts GetContainerStorageArray and GetContainerStorageArrayOutput values.
// You can construct a concrete instance of `GetContainerStorageArrayInput` via:
//
//	GetContainerStorageArray{ GetContainerStorageArgs{...} }
type GetContainerStorageArrayInput interface {
	pulumi.Input

	ToGetContainerStorageArrayOutput() GetContainerStorageArrayOutput
	ToGetContainerStorageArrayOutputWithContext(context.Context) GetContainerStorageArrayOutput
}

type GetContainerStorageArray []GetContainerStorageInput

func (GetContainerStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerStorage)(nil)).Elem()
}

func (i GetContainerStorageArray) ToGetContainerStorageArrayOutput() GetContainerStorageArrayOutput {
	return i.ToGetContainerStorageArrayOutputWithContext(context.Background())
}

func (i GetContainerStorageArray) ToGetContainerStorageArrayOutputWithContext(ctx context.Context) GetContainerStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerStorageArrayOutput)
}

type GetContainerStorageOutput struct{ *pulumi.OutputState }

func (GetContainerStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerStorage)(nil)).Elem()
}

func (o GetContainerStorageOutput) ToGetContainerStorageOutput() GetContainerStorageOutput {
	return o
}

func (o GetContainerStorageOutput) ToGetContainerStorageOutputWithContext(ctx context.Context) GetContainerStorageOutput {
	return o
}

// Id of the storage.
func (o GetContainerStorageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerStorage) string { return v.Id }).(pulumi.StringOutput)
}

// Mount point of the storage for the container.
func (o GetContainerStorageOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerStorage) string { return v.MountPoint }).(pulumi.StringOutput)
}

// Size of the storage for the container in GB [1024MB = 1GB].
//   - Must be: `>= 1`.
func (o GetContainerStorageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetContainerStorage) int { return v.Size }).(pulumi.IntOutput)
}

// Type of the storage for the container.
//   - Can be: `FAST_SSD`.
func (o GetContainerStorageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerStorage) string { return v.Type }).(pulumi.StringOutput)
}

type GetContainerStorageArrayOutput struct{ *pulumi.OutputState }

func (GetContainerStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerStorage)(nil)).Elem()
}

func (o GetContainerStorageArrayOutput) ToGetContainerStorageArrayOutput() GetContainerStorageArrayOutput {
	return o
}

func (o GetContainerStorageArrayOutput) ToGetContainerStorageArrayOutputWithContext(ctx context.Context) GetContainerStorageArrayOutput {
	return o
}

func (o GetContainerStorageArrayOutput) Index(i pulumi.IntInput) GetContainerStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContainerStorage {
		return vs[0].([]GetContainerStorage)[vs[1].(int)]
	}).(GetContainerStorageOutput)
}

type GetEnvironmentBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetEnvironmentBuiltInEnvironmentVariableInput is an input type that accepts GetEnvironmentBuiltInEnvironmentVariableArgs and GetEnvironmentBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetEnvironmentBuiltInEnvironmentVariableInput` via:
//
//	GetEnvironmentBuiltInEnvironmentVariableArgs{...}
type GetEnvironmentBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToGetEnvironmentBuiltInEnvironmentVariableOutput() GetEnvironmentBuiltInEnvironmentVariableOutput
	ToGetEnvironmentBuiltInEnvironmentVariableOutputWithContext(context.Context) GetEnvironmentBuiltInEnvironmentVariableOutput
}

type GetEnvironmentBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEnvironmentBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetEnvironmentBuiltInEnvironmentVariableArgs) ToGetEnvironmentBuiltInEnvironmentVariableOutput() GetEnvironmentBuiltInEnvironmentVariableOutput {
	return i.ToGetEnvironmentBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetEnvironmentBuiltInEnvironmentVariableArgs) ToGetEnvironmentBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetEnvironmentBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentBuiltInEnvironmentVariableOutput)
}

// GetEnvironmentBuiltInEnvironmentVariableArrayInput is an input type that accepts GetEnvironmentBuiltInEnvironmentVariableArray and GetEnvironmentBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentBuiltInEnvironmentVariableArrayInput` via:
//
//	GetEnvironmentBuiltInEnvironmentVariableArray{ GetEnvironmentBuiltInEnvironmentVariableArgs{...} }
type GetEnvironmentBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetEnvironmentBuiltInEnvironmentVariableArrayOutput() GetEnvironmentBuiltInEnvironmentVariableArrayOutput
	ToGetEnvironmentBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) GetEnvironmentBuiltInEnvironmentVariableArrayOutput
}

type GetEnvironmentBuiltInEnvironmentVariableArray []GetEnvironmentBuiltInEnvironmentVariableInput

func (GetEnvironmentBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetEnvironmentBuiltInEnvironmentVariableArray) ToGetEnvironmentBuiltInEnvironmentVariableArrayOutput() GetEnvironmentBuiltInEnvironmentVariableArrayOutput {
	return i.ToGetEnvironmentBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentBuiltInEnvironmentVariableArray) ToGetEnvironmentBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetEnvironmentBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentBuiltInEnvironmentVariableArrayOutput)
}

type GetEnvironmentBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetEnvironmentBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetEnvironmentBuiltInEnvironmentVariableOutput) ToGetEnvironmentBuiltInEnvironmentVariableOutput() GetEnvironmentBuiltInEnvironmentVariableOutput {
	return o
}

func (o GetEnvironmentBuiltInEnvironmentVariableOutput) ToGetEnvironmentBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetEnvironmentBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetEnvironmentBuiltInEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentBuiltInEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetEnvironmentBuiltInEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentBuiltInEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetEnvironmentBuiltInEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentBuiltInEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvironmentBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetEnvironmentBuiltInEnvironmentVariableArrayOutput) ToGetEnvironmentBuiltInEnvironmentVariableArrayOutput() GetEnvironmentBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetEnvironmentBuiltInEnvironmentVariableArrayOutput) ToGetEnvironmentBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetEnvironmentBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetEnvironmentBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetEnvironmentBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentBuiltInEnvironmentVariable {
		return vs[0].([]GetEnvironmentBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(GetEnvironmentBuiltInEnvironmentVariableOutput)
}

type GetEnvironmentEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetEnvironmentEnvironmentVariableInput is an input type that accepts GetEnvironmentEnvironmentVariableArgs and GetEnvironmentEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetEnvironmentEnvironmentVariableInput` via:
//
//	GetEnvironmentEnvironmentVariableArgs{...}
type GetEnvironmentEnvironmentVariableInput interface {
	pulumi.Input

	ToGetEnvironmentEnvironmentVariableOutput() GetEnvironmentEnvironmentVariableOutput
	ToGetEnvironmentEnvironmentVariableOutputWithContext(context.Context) GetEnvironmentEnvironmentVariableOutput
}

type GetEnvironmentEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEnvironmentEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (i GetEnvironmentEnvironmentVariableArgs) ToGetEnvironmentEnvironmentVariableOutput() GetEnvironmentEnvironmentVariableOutput {
	return i.ToGetEnvironmentEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetEnvironmentEnvironmentVariableArgs) ToGetEnvironmentEnvironmentVariableOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentEnvironmentVariableOutput)
}

// GetEnvironmentEnvironmentVariableArrayInput is an input type that accepts GetEnvironmentEnvironmentVariableArray and GetEnvironmentEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentEnvironmentVariableArrayInput` via:
//
//	GetEnvironmentEnvironmentVariableArray{ GetEnvironmentEnvironmentVariableArgs{...} }
type GetEnvironmentEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetEnvironmentEnvironmentVariableArrayOutput() GetEnvironmentEnvironmentVariableArrayOutput
	ToGetEnvironmentEnvironmentVariableArrayOutputWithContext(context.Context) GetEnvironmentEnvironmentVariableArrayOutput
}

type GetEnvironmentEnvironmentVariableArray []GetEnvironmentEnvironmentVariableInput

func (GetEnvironmentEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (i GetEnvironmentEnvironmentVariableArray) ToGetEnvironmentEnvironmentVariableArrayOutput() GetEnvironmentEnvironmentVariableArrayOutput {
	return i.ToGetEnvironmentEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentEnvironmentVariableArray) ToGetEnvironmentEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentEnvironmentVariableArrayOutput)
}

type GetEnvironmentEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetEnvironmentEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (o GetEnvironmentEnvironmentVariableOutput) ToGetEnvironmentEnvironmentVariableOutput() GetEnvironmentEnvironmentVariableOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableOutput) ToGetEnvironmentEnvironmentVariableOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetEnvironmentEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetEnvironmentEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetEnvironmentEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvironmentEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (o GetEnvironmentEnvironmentVariableArrayOutput) ToGetEnvironmentEnvironmentVariableArrayOutput() GetEnvironmentEnvironmentVariableArrayOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableArrayOutput) ToGetEnvironmentEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableArrayOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetEnvironmentEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentEnvironmentVariable {
		return vs[0].([]GetEnvironmentEnvironmentVariable)[vs[1].(int)]
	}).(GetEnvironmentEnvironmentVariableOutput)
}

type GetEnvironmentEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// GetEnvironmentEnvironmentVariableAliasInput is an input type that accepts GetEnvironmentEnvironmentVariableAliasArgs and GetEnvironmentEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `GetEnvironmentEnvironmentVariableAliasInput` via:
//
//	GetEnvironmentEnvironmentVariableAliasArgs{...}
type GetEnvironmentEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToGetEnvironmentEnvironmentVariableAliasOutput() GetEnvironmentEnvironmentVariableAliasOutput
	ToGetEnvironmentEnvironmentVariableAliasOutputWithContext(context.Context) GetEnvironmentEnvironmentVariableAliasOutput
}

type GetEnvironmentEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEnvironmentEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetEnvironmentEnvironmentVariableAliasArgs) ToGetEnvironmentEnvironmentVariableAliasOutput() GetEnvironmentEnvironmentVariableAliasOutput {
	return i.ToGetEnvironmentEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i GetEnvironmentEnvironmentVariableAliasArgs) ToGetEnvironmentEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentEnvironmentVariableAliasOutput)
}

// GetEnvironmentEnvironmentVariableAliasArrayInput is an input type that accepts GetEnvironmentEnvironmentVariableAliasArray and GetEnvironmentEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentEnvironmentVariableAliasArrayInput` via:
//
//	GetEnvironmentEnvironmentVariableAliasArray{ GetEnvironmentEnvironmentVariableAliasArgs{...} }
type GetEnvironmentEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToGetEnvironmentEnvironmentVariableAliasArrayOutput() GetEnvironmentEnvironmentVariableAliasArrayOutput
	ToGetEnvironmentEnvironmentVariableAliasArrayOutputWithContext(context.Context) GetEnvironmentEnvironmentVariableAliasArrayOutput
}

type GetEnvironmentEnvironmentVariableAliasArray []GetEnvironmentEnvironmentVariableAliasInput

func (GetEnvironmentEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetEnvironmentEnvironmentVariableAliasArray) ToGetEnvironmentEnvironmentVariableAliasArrayOutput() GetEnvironmentEnvironmentVariableAliasArrayOutput {
	return i.ToGetEnvironmentEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentEnvironmentVariableAliasArray) ToGetEnvironmentEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentEnvironmentVariableAliasArrayOutput)
}

type GetEnvironmentEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (GetEnvironmentEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetEnvironmentEnvironmentVariableAliasOutput) ToGetEnvironmentEnvironmentVariableAliasOutput() GetEnvironmentEnvironmentVariableAliasOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableAliasOutput) ToGetEnvironmentEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o GetEnvironmentEnvironmentVariableAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariableAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable alias.
func (o GetEnvironmentEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o GetEnvironmentEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvironmentEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetEnvironmentEnvironmentVariableAliasArrayOutput) ToGetEnvironmentEnvironmentVariableAliasArrayOutput() GetEnvironmentEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableAliasArrayOutput) ToGetEnvironmentEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) GetEnvironmentEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentEnvironmentVariableAlias {
		return vs[0].([]GetEnvironmentEnvironmentVariableAlias)[vs[1].(int)]
	}).(GetEnvironmentEnvironmentVariableAliasOutput)
}

type GetEnvironmentEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// GetEnvironmentEnvironmentVariableOverrideInput is an input type that accepts GetEnvironmentEnvironmentVariableOverrideArgs and GetEnvironmentEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `GetEnvironmentEnvironmentVariableOverrideInput` via:
//
//	GetEnvironmentEnvironmentVariableOverrideArgs{...}
type GetEnvironmentEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToGetEnvironmentEnvironmentVariableOverrideOutput() GetEnvironmentEnvironmentVariableOverrideOutput
	ToGetEnvironmentEnvironmentVariableOverrideOutputWithContext(context.Context) GetEnvironmentEnvironmentVariableOverrideOutput
}

type GetEnvironmentEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEnvironmentEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetEnvironmentEnvironmentVariableOverrideArgs) ToGetEnvironmentEnvironmentVariableOverrideOutput() GetEnvironmentEnvironmentVariableOverrideOutput {
	return i.ToGetEnvironmentEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i GetEnvironmentEnvironmentVariableOverrideArgs) ToGetEnvironmentEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentEnvironmentVariableOverrideOutput)
}

// GetEnvironmentEnvironmentVariableOverrideArrayInput is an input type that accepts GetEnvironmentEnvironmentVariableOverrideArray and GetEnvironmentEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentEnvironmentVariableOverrideArrayInput` via:
//
//	GetEnvironmentEnvironmentVariableOverrideArray{ GetEnvironmentEnvironmentVariableOverrideArgs{...} }
type GetEnvironmentEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToGetEnvironmentEnvironmentVariableOverrideArrayOutput() GetEnvironmentEnvironmentVariableOverrideArrayOutput
	ToGetEnvironmentEnvironmentVariableOverrideArrayOutputWithContext(context.Context) GetEnvironmentEnvironmentVariableOverrideArrayOutput
}

type GetEnvironmentEnvironmentVariableOverrideArray []GetEnvironmentEnvironmentVariableOverrideInput

func (GetEnvironmentEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetEnvironmentEnvironmentVariableOverrideArray) ToGetEnvironmentEnvironmentVariableOverrideArrayOutput() GetEnvironmentEnvironmentVariableOverrideArrayOutput {
	return i.ToGetEnvironmentEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentEnvironmentVariableOverrideArray) ToGetEnvironmentEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentEnvironmentVariableOverrideArrayOutput)
}

type GetEnvironmentEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (GetEnvironmentEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetEnvironmentEnvironmentVariableOverrideOutput) ToGetEnvironmentEnvironmentVariableOverrideOutput() GetEnvironmentEnvironmentVariableOverrideOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableOverrideOutput) ToGetEnvironmentEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o GetEnvironmentEnvironmentVariableOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariableOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable override.
func (o GetEnvironmentEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o GetEnvironmentEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvironmentEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetEnvironmentEnvironmentVariableOverrideArrayOutput) ToGetEnvironmentEnvironmentVariableOverrideArrayOutput() GetEnvironmentEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableOverrideArrayOutput) ToGetEnvironmentEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetEnvironmentEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetEnvironmentEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) GetEnvironmentEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentEnvironmentVariableOverride {
		return vs[0].([]GetEnvironmentEnvironmentVariableOverride)[vs[1].(int)]
	}).(GetEnvironmentEnvironmentVariableOverrideOutput)
}

type GetEnvironmentSecret struct {
	// Id of the secret.
	Id string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// GetEnvironmentSecretInput is an input type that accepts GetEnvironmentSecretArgs and GetEnvironmentSecretOutput values.
// You can construct a concrete instance of `GetEnvironmentSecretInput` via:
//
//	GetEnvironmentSecretArgs{...}
type GetEnvironmentSecretInput interface {
	pulumi.Input

	ToGetEnvironmentSecretOutput() GetEnvironmentSecretOutput
	ToGetEnvironmentSecretOutputWithContext(context.Context) GetEnvironmentSecretOutput
}

type GetEnvironmentSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEnvironmentSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentSecret)(nil)).Elem()
}

func (i GetEnvironmentSecretArgs) ToGetEnvironmentSecretOutput() GetEnvironmentSecretOutput {
	return i.ToGetEnvironmentSecretOutputWithContext(context.Background())
}

func (i GetEnvironmentSecretArgs) ToGetEnvironmentSecretOutputWithContext(ctx context.Context) GetEnvironmentSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentSecretOutput)
}

// GetEnvironmentSecretArrayInput is an input type that accepts GetEnvironmentSecretArray and GetEnvironmentSecretArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentSecretArrayInput` via:
//
//	GetEnvironmentSecretArray{ GetEnvironmentSecretArgs{...} }
type GetEnvironmentSecretArrayInput interface {
	pulumi.Input

	ToGetEnvironmentSecretArrayOutput() GetEnvironmentSecretArrayOutput
	ToGetEnvironmentSecretArrayOutputWithContext(context.Context) GetEnvironmentSecretArrayOutput
}

type GetEnvironmentSecretArray []GetEnvironmentSecretInput

func (GetEnvironmentSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentSecret)(nil)).Elem()
}

func (i GetEnvironmentSecretArray) ToGetEnvironmentSecretArrayOutput() GetEnvironmentSecretArrayOutput {
	return i.ToGetEnvironmentSecretArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentSecretArray) ToGetEnvironmentSecretArrayOutputWithContext(ctx context.Context) GetEnvironmentSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentSecretArrayOutput)
}

type GetEnvironmentSecretOutput struct{ *pulumi.OutputState }

func (GetEnvironmentSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentSecret)(nil)).Elem()
}

func (o GetEnvironmentSecretOutput) ToGetEnvironmentSecretOutput() GetEnvironmentSecretOutput {
	return o
}

func (o GetEnvironmentSecretOutput) ToGetEnvironmentSecretOutputWithContext(ctx context.Context) GetEnvironmentSecretOutput {
	return o
}

// Id of the secret.
func (o GetEnvironmentSecretOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecret) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the secret.
func (o GetEnvironmentSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o GetEnvironmentSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecret) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvironmentSecretArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentSecret)(nil)).Elem()
}

func (o GetEnvironmentSecretArrayOutput) ToGetEnvironmentSecretArrayOutput() GetEnvironmentSecretArrayOutput {
	return o
}

func (o GetEnvironmentSecretArrayOutput) ToGetEnvironmentSecretArrayOutputWithContext(ctx context.Context) GetEnvironmentSecretArrayOutput {
	return o
}

func (o GetEnvironmentSecretArrayOutput) Index(i pulumi.IntInput) GetEnvironmentSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentSecret {
		return vs[0].([]GetEnvironmentSecret)[vs[1].(int)]
	}).(GetEnvironmentSecretOutput)
}

type GetEnvironmentSecretAlias struct {
	// Id of the secret alias.
	Id string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// GetEnvironmentSecretAliasInput is an input type that accepts GetEnvironmentSecretAliasArgs and GetEnvironmentSecretAliasOutput values.
// You can construct a concrete instance of `GetEnvironmentSecretAliasInput` via:
//
//	GetEnvironmentSecretAliasArgs{...}
type GetEnvironmentSecretAliasInput interface {
	pulumi.Input

	ToGetEnvironmentSecretAliasOutput() GetEnvironmentSecretAliasOutput
	ToGetEnvironmentSecretAliasOutputWithContext(context.Context) GetEnvironmentSecretAliasOutput
}

type GetEnvironmentSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEnvironmentSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentSecretAlias)(nil)).Elem()
}

func (i GetEnvironmentSecretAliasArgs) ToGetEnvironmentSecretAliasOutput() GetEnvironmentSecretAliasOutput {
	return i.ToGetEnvironmentSecretAliasOutputWithContext(context.Background())
}

func (i GetEnvironmentSecretAliasArgs) ToGetEnvironmentSecretAliasOutputWithContext(ctx context.Context) GetEnvironmentSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentSecretAliasOutput)
}

// GetEnvironmentSecretAliasArrayInput is an input type that accepts GetEnvironmentSecretAliasArray and GetEnvironmentSecretAliasArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentSecretAliasArrayInput` via:
//
//	GetEnvironmentSecretAliasArray{ GetEnvironmentSecretAliasArgs{...} }
type GetEnvironmentSecretAliasArrayInput interface {
	pulumi.Input

	ToGetEnvironmentSecretAliasArrayOutput() GetEnvironmentSecretAliasArrayOutput
	ToGetEnvironmentSecretAliasArrayOutputWithContext(context.Context) GetEnvironmentSecretAliasArrayOutput
}

type GetEnvironmentSecretAliasArray []GetEnvironmentSecretAliasInput

func (GetEnvironmentSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentSecretAlias)(nil)).Elem()
}

func (i GetEnvironmentSecretAliasArray) ToGetEnvironmentSecretAliasArrayOutput() GetEnvironmentSecretAliasArrayOutput {
	return i.ToGetEnvironmentSecretAliasArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentSecretAliasArray) ToGetEnvironmentSecretAliasArrayOutputWithContext(ctx context.Context) GetEnvironmentSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentSecretAliasArrayOutput)
}

type GetEnvironmentSecretAliasOutput struct{ *pulumi.OutputState }

func (GetEnvironmentSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentSecretAlias)(nil)).Elem()
}

func (o GetEnvironmentSecretAliasOutput) ToGetEnvironmentSecretAliasOutput() GetEnvironmentSecretAliasOutput {
	return o
}

func (o GetEnvironmentSecretAliasOutput) ToGetEnvironmentSecretAliasOutputWithContext(ctx context.Context) GetEnvironmentSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o GetEnvironmentSecretAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecretAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret alias.
func (o GetEnvironmentSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o GetEnvironmentSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvironmentSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentSecretAlias)(nil)).Elem()
}

func (o GetEnvironmentSecretAliasArrayOutput) ToGetEnvironmentSecretAliasArrayOutput() GetEnvironmentSecretAliasArrayOutput {
	return o
}

func (o GetEnvironmentSecretAliasArrayOutput) ToGetEnvironmentSecretAliasArrayOutputWithContext(ctx context.Context) GetEnvironmentSecretAliasArrayOutput {
	return o
}

func (o GetEnvironmentSecretAliasArrayOutput) Index(i pulumi.IntInput) GetEnvironmentSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentSecretAlias {
		return vs[0].([]GetEnvironmentSecretAlias)[vs[1].(int)]
	}).(GetEnvironmentSecretAliasOutput)
}

type GetEnvironmentSecretOverride struct {
	// Id of the secret override.
	Id string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// GetEnvironmentSecretOverrideInput is an input type that accepts GetEnvironmentSecretOverrideArgs and GetEnvironmentSecretOverrideOutput values.
// You can construct a concrete instance of `GetEnvironmentSecretOverrideInput` via:
//
//	GetEnvironmentSecretOverrideArgs{...}
type GetEnvironmentSecretOverrideInput interface {
	pulumi.Input

	ToGetEnvironmentSecretOverrideOutput() GetEnvironmentSecretOverrideOutput
	ToGetEnvironmentSecretOverrideOutputWithContext(context.Context) GetEnvironmentSecretOverrideOutput
}

type GetEnvironmentSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEnvironmentSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentSecretOverride)(nil)).Elem()
}

func (i GetEnvironmentSecretOverrideArgs) ToGetEnvironmentSecretOverrideOutput() GetEnvironmentSecretOverrideOutput {
	return i.ToGetEnvironmentSecretOverrideOutputWithContext(context.Background())
}

func (i GetEnvironmentSecretOverrideArgs) ToGetEnvironmentSecretOverrideOutputWithContext(ctx context.Context) GetEnvironmentSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentSecretOverrideOutput)
}

// GetEnvironmentSecretOverrideArrayInput is an input type that accepts GetEnvironmentSecretOverrideArray and GetEnvironmentSecretOverrideArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentSecretOverrideArrayInput` via:
//
//	GetEnvironmentSecretOverrideArray{ GetEnvironmentSecretOverrideArgs{...} }
type GetEnvironmentSecretOverrideArrayInput interface {
	pulumi.Input

	ToGetEnvironmentSecretOverrideArrayOutput() GetEnvironmentSecretOverrideArrayOutput
	ToGetEnvironmentSecretOverrideArrayOutputWithContext(context.Context) GetEnvironmentSecretOverrideArrayOutput
}

type GetEnvironmentSecretOverrideArray []GetEnvironmentSecretOverrideInput

func (GetEnvironmentSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentSecretOverride)(nil)).Elem()
}

func (i GetEnvironmentSecretOverrideArray) ToGetEnvironmentSecretOverrideArrayOutput() GetEnvironmentSecretOverrideArrayOutput {
	return i.ToGetEnvironmentSecretOverrideArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentSecretOverrideArray) ToGetEnvironmentSecretOverrideArrayOutputWithContext(ctx context.Context) GetEnvironmentSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentSecretOverrideArrayOutput)
}

type GetEnvironmentSecretOverrideOutput struct{ *pulumi.OutputState }

func (GetEnvironmentSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentSecretOverride)(nil)).Elem()
}

func (o GetEnvironmentSecretOverrideOutput) ToGetEnvironmentSecretOverrideOutput() GetEnvironmentSecretOverrideOutput {
	return o
}

func (o GetEnvironmentSecretOverrideOutput) ToGetEnvironmentSecretOverrideOutputWithContext(ctx context.Context) GetEnvironmentSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o GetEnvironmentSecretOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecretOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret override.
func (o GetEnvironmentSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o GetEnvironmentSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetEnvironmentSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentSecretOverride)(nil)).Elem()
}

func (o GetEnvironmentSecretOverrideArrayOutput) ToGetEnvironmentSecretOverrideArrayOutput() GetEnvironmentSecretOverrideArrayOutput {
	return o
}

func (o GetEnvironmentSecretOverrideArrayOutput) ToGetEnvironmentSecretOverrideArrayOutputWithContext(ctx context.Context) GetEnvironmentSecretOverrideArrayOutput {
	return o
}

func (o GetEnvironmentSecretOverrideArrayOutput) Index(i pulumi.IntInput) GetEnvironmentSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentSecretOverride {
		return vs[0].([]GetEnvironmentSecretOverride)[vs[1].(int)]
	}).(GetEnvironmentSecretOverrideOutput)
}

type GetHelmBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetHelmBuiltInEnvironmentVariableInput is an input type that accepts GetHelmBuiltInEnvironmentVariableArgs and GetHelmBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetHelmBuiltInEnvironmentVariableInput` via:
//
//	GetHelmBuiltInEnvironmentVariableArgs{...}
type GetHelmBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToGetHelmBuiltInEnvironmentVariableOutput() GetHelmBuiltInEnvironmentVariableOutput
	ToGetHelmBuiltInEnvironmentVariableOutputWithContext(context.Context) GetHelmBuiltInEnvironmentVariableOutput
}

type GetHelmBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHelmBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetHelmBuiltInEnvironmentVariableArgs) ToGetHelmBuiltInEnvironmentVariableOutput() GetHelmBuiltInEnvironmentVariableOutput {
	return i.ToGetHelmBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetHelmBuiltInEnvironmentVariableArgs) ToGetHelmBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetHelmBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmBuiltInEnvironmentVariableOutput)
}

// GetHelmBuiltInEnvironmentVariableArrayInput is an input type that accepts GetHelmBuiltInEnvironmentVariableArray and GetHelmBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetHelmBuiltInEnvironmentVariableArrayInput` via:
//
//	GetHelmBuiltInEnvironmentVariableArray{ GetHelmBuiltInEnvironmentVariableArgs{...} }
type GetHelmBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetHelmBuiltInEnvironmentVariableArrayOutput() GetHelmBuiltInEnvironmentVariableArrayOutput
	ToGetHelmBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) GetHelmBuiltInEnvironmentVariableArrayOutput
}

type GetHelmBuiltInEnvironmentVariableArray []GetHelmBuiltInEnvironmentVariableInput

func (GetHelmBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetHelmBuiltInEnvironmentVariableArray) ToGetHelmBuiltInEnvironmentVariableArrayOutput() GetHelmBuiltInEnvironmentVariableArrayOutput {
	return i.ToGetHelmBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetHelmBuiltInEnvironmentVariableArray) ToGetHelmBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetHelmBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmBuiltInEnvironmentVariableArrayOutput)
}

type GetHelmBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetHelmBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetHelmBuiltInEnvironmentVariableOutput) ToGetHelmBuiltInEnvironmentVariableOutput() GetHelmBuiltInEnvironmentVariableOutput {
	return o
}

func (o GetHelmBuiltInEnvironmentVariableOutput) ToGetHelmBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetHelmBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetHelmBuiltInEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmBuiltInEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetHelmBuiltInEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmBuiltInEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetHelmBuiltInEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmBuiltInEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetHelmBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetHelmBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetHelmBuiltInEnvironmentVariableArrayOutput) ToGetHelmBuiltInEnvironmentVariableArrayOutput() GetHelmBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetHelmBuiltInEnvironmentVariableArrayOutput) ToGetHelmBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetHelmBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetHelmBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetHelmBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmBuiltInEnvironmentVariable {
		return vs[0].([]GetHelmBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(GetHelmBuiltInEnvironmentVariableOutput)
}

type GetHelmDeploymentRestriction struct {
	// Id of the deployment restriction
	Id string `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode string `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type string `pulumi:"type"`
	// Value of the deployment restriction
	Value string `pulumi:"value"`
}

// GetHelmDeploymentRestrictionInput is an input type that accepts GetHelmDeploymentRestrictionArgs and GetHelmDeploymentRestrictionOutput values.
// You can construct a concrete instance of `GetHelmDeploymentRestrictionInput` via:
//
//	GetHelmDeploymentRestrictionArgs{...}
type GetHelmDeploymentRestrictionInput interface {
	pulumi.Input

	ToGetHelmDeploymentRestrictionOutput() GetHelmDeploymentRestrictionOutput
	ToGetHelmDeploymentRestrictionOutputWithContext(context.Context) GetHelmDeploymentRestrictionOutput
}

type GetHelmDeploymentRestrictionArgs struct {
	// Id of the deployment restriction
	Id pulumi.StringInput `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode pulumi.StringInput `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the deployment restriction
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHelmDeploymentRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmDeploymentRestriction)(nil)).Elem()
}

func (i GetHelmDeploymentRestrictionArgs) ToGetHelmDeploymentRestrictionOutput() GetHelmDeploymentRestrictionOutput {
	return i.ToGetHelmDeploymentRestrictionOutputWithContext(context.Background())
}

func (i GetHelmDeploymentRestrictionArgs) ToGetHelmDeploymentRestrictionOutputWithContext(ctx context.Context) GetHelmDeploymentRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmDeploymentRestrictionOutput)
}

// GetHelmDeploymentRestrictionArrayInput is an input type that accepts GetHelmDeploymentRestrictionArray and GetHelmDeploymentRestrictionArrayOutput values.
// You can construct a concrete instance of `GetHelmDeploymentRestrictionArrayInput` via:
//
//	GetHelmDeploymentRestrictionArray{ GetHelmDeploymentRestrictionArgs{...} }
type GetHelmDeploymentRestrictionArrayInput interface {
	pulumi.Input

	ToGetHelmDeploymentRestrictionArrayOutput() GetHelmDeploymentRestrictionArrayOutput
	ToGetHelmDeploymentRestrictionArrayOutputWithContext(context.Context) GetHelmDeploymentRestrictionArrayOutput
}

type GetHelmDeploymentRestrictionArray []GetHelmDeploymentRestrictionInput

func (GetHelmDeploymentRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmDeploymentRestriction)(nil)).Elem()
}

func (i GetHelmDeploymentRestrictionArray) ToGetHelmDeploymentRestrictionArrayOutput() GetHelmDeploymentRestrictionArrayOutput {
	return i.ToGetHelmDeploymentRestrictionArrayOutputWithContext(context.Background())
}

func (i GetHelmDeploymentRestrictionArray) ToGetHelmDeploymentRestrictionArrayOutputWithContext(ctx context.Context) GetHelmDeploymentRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmDeploymentRestrictionArrayOutput)
}

type GetHelmDeploymentRestrictionOutput struct{ *pulumi.OutputState }

func (GetHelmDeploymentRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmDeploymentRestriction)(nil)).Elem()
}

func (o GetHelmDeploymentRestrictionOutput) ToGetHelmDeploymentRestrictionOutput() GetHelmDeploymentRestrictionOutput {
	return o
}

func (o GetHelmDeploymentRestrictionOutput) ToGetHelmDeploymentRestrictionOutputWithContext(ctx context.Context) GetHelmDeploymentRestrictionOutput {
	return o
}

// Id of the deployment restriction
func (o GetHelmDeploymentRestrictionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmDeploymentRestriction) string { return v.Id }).(pulumi.StringOutput)
}

// Can be EXCLUDE or MATCH
func (o GetHelmDeploymentRestrictionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmDeploymentRestriction) string { return v.Mode }).(pulumi.StringOutput)
}

// Currently, only PATH is accepted
func (o GetHelmDeploymentRestrictionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmDeploymentRestriction) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the deployment restriction
func (o GetHelmDeploymentRestrictionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmDeploymentRestriction) string { return v.Value }).(pulumi.StringOutput)
}

type GetHelmDeploymentRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetHelmDeploymentRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmDeploymentRestriction)(nil)).Elem()
}

func (o GetHelmDeploymentRestrictionArrayOutput) ToGetHelmDeploymentRestrictionArrayOutput() GetHelmDeploymentRestrictionArrayOutput {
	return o
}

func (o GetHelmDeploymentRestrictionArrayOutput) ToGetHelmDeploymentRestrictionArrayOutputWithContext(ctx context.Context) GetHelmDeploymentRestrictionArrayOutput {
	return o
}

func (o GetHelmDeploymentRestrictionArrayOutput) Index(i pulumi.IntInput) GetHelmDeploymentRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmDeploymentRestriction {
		return vs[0].([]GetHelmDeploymentRestriction)[vs[1].(int)]
	}).(GetHelmDeploymentRestrictionOutput)
}

type GetHelmEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetHelmEnvironmentVariableInput is an input type that accepts GetHelmEnvironmentVariableArgs and GetHelmEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetHelmEnvironmentVariableInput` via:
//
//	GetHelmEnvironmentVariableArgs{...}
type GetHelmEnvironmentVariableInput interface {
	pulumi.Input

	ToGetHelmEnvironmentVariableOutput() GetHelmEnvironmentVariableOutput
	ToGetHelmEnvironmentVariableOutputWithContext(context.Context) GetHelmEnvironmentVariableOutput
}

type GetHelmEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHelmEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmEnvironmentVariable)(nil)).Elem()
}

func (i GetHelmEnvironmentVariableArgs) ToGetHelmEnvironmentVariableOutput() GetHelmEnvironmentVariableOutput {
	return i.ToGetHelmEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetHelmEnvironmentVariableArgs) ToGetHelmEnvironmentVariableOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmEnvironmentVariableOutput)
}

// GetHelmEnvironmentVariableArrayInput is an input type that accepts GetHelmEnvironmentVariableArray and GetHelmEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetHelmEnvironmentVariableArrayInput` via:
//
//	GetHelmEnvironmentVariableArray{ GetHelmEnvironmentVariableArgs{...} }
type GetHelmEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetHelmEnvironmentVariableArrayOutput() GetHelmEnvironmentVariableArrayOutput
	ToGetHelmEnvironmentVariableArrayOutputWithContext(context.Context) GetHelmEnvironmentVariableArrayOutput
}

type GetHelmEnvironmentVariableArray []GetHelmEnvironmentVariableInput

func (GetHelmEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmEnvironmentVariable)(nil)).Elem()
}

func (i GetHelmEnvironmentVariableArray) ToGetHelmEnvironmentVariableArrayOutput() GetHelmEnvironmentVariableArrayOutput {
	return i.ToGetHelmEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetHelmEnvironmentVariableArray) ToGetHelmEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmEnvironmentVariableArrayOutput)
}

type GetHelmEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetHelmEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmEnvironmentVariable)(nil)).Elem()
}

func (o GetHelmEnvironmentVariableOutput) ToGetHelmEnvironmentVariableOutput() GetHelmEnvironmentVariableOutput {
	return o
}

func (o GetHelmEnvironmentVariableOutput) ToGetHelmEnvironmentVariableOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetHelmEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetHelmEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetHelmEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetHelmEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetHelmEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmEnvironmentVariable)(nil)).Elem()
}

func (o GetHelmEnvironmentVariableArrayOutput) ToGetHelmEnvironmentVariableArrayOutput() GetHelmEnvironmentVariableArrayOutput {
	return o
}

func (o GetHelmEnvironmentVariableArrayOutput) ToGetHelmEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableArrayOutput {
	return o
}

func (o GetHelmEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetHelmEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmEnvironmentVariable {
		return vs[0].([]GetHelmEnvironmentVariable)[vs[1].(int)]
	}).(GetHelmEnvironmentVariableOutput)
}

type GetHelmEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// GetHelmEnvironmentVariableAliasInput is an input type that accepts GetHelmEnvironmentVariableAliasArgs and GetHelmEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `GetHelmEnvironmentVariableAliasInput` via:
//
//	GetHelmEnvironmentVariableAliasArgs{...}
type GetHelmEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToGetHelmEnvironmentVariableAliasOutput() GetHelmEnvironmentVariableAliasOutput
	ToGetHelmEnvironmentVariableAliasOutputWithContext(context.Context) GetHelmEnvironmentVariableAliasOutput
}

type GetHelmEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHelmEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetHelmEnvironmentVariableAliasArgs) ToGetHelmEnvironmentVariableAliasOutput() GetHelmEnvironmentVariableAliasOutput {
	return i.ToGetHelmEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i GetHelmEnvironmentVariableAliasArgs) ToGetHelmEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmEnvironmentVariableAliasOutput)
}

// GetHelmEnvironmentVariableAliasArrayInput is an input type that accepts GetHelmEnvironmentVariableAliasArray and GetHelmEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `GetHelmEnvironmentVariableAliasArrayInput` via:
//
//	GetHelmEnvironmentVariableAliasArray{ GetHelmEnvironmentVariableAliasArgs{...} }
type GetHelmEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToGetHelmEnvironmentVariableAliasArrayOutput() GetHelmEnvironmentVariableAliasArrayOutput
	ToGetHelmEnvironmentVariableAliasArrayOutputWithContext(context.Context) GetHelmEnvironmentVariableAliasArrayOutput
}

type GetHelmEnvironmentVariableAliasArray []GetHelmEnvironmentVariableAliasInput

func (GetHelmEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetHelmEnvironmentVariableAliasArray) ToGetHelmEnvironmentVariableAliasArrayOutput() GetHelmEnvironmentVariableAliasArrayOutput {
	return i.ToGetHelmEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i GetHelmEnvironmentVariableAliasArray) ToGetHelmEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmEnvironmentVariableAliasArrayOutput)
}

type GetHelmEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (GetHelmEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetHelmEnvironmentVariableAliasOutput) ToGetHelmEnvironmentVariableAliasOutput() GetHelmEnvironmentVariableAliasOutput {
	return o
}

func (o GetHelmEnvironmentVariableAliasOutput) ToGetHelmEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o GetHelmEnvironmentVariableAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariableAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable alias.
func (o GetHelmEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o GetHelmEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetHelmEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (GetHelmEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetHelmEnvironmentVariableAliasArrayOutput) ToGetHelmEnvironmentVariableAliasArrayOutput() GetHelmEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetHelmEnvironmentVariableAliasArrayOutput) ToGetHelmEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetHelmEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) GetHelmEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmEnvironmentVariableAlias {
		return vs[0].([]GetHelmEnvironmentVariableAlias)[vs[1].(int)]
	}).(GetHelmEnvironmentVariableAliasOutput)
}

type GetHelmEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// GetHelmEnvironmentVariableOverrideInput is an input type that accepts GetHelmEnvironmentVariableOverrideArgs and GetHelmEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `GetHelmEnvironmentVariableOverrideInput` via:
//
//	GetHelmEnvironmentVariableOverrideArgs{...}
type GetHelmEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToGetHelmEnvironmentVariableOverrideOutput() GetHelmEnvironmentVariableOverrideOutput
	ToGetHelmEnvironmentVariableOverrideOutputWithContext(context.Context) GetHelmEnvironmentVariableOverrideOutput
}

type GetHelmEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHelmEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetHelmEnvironmentVariableOverrideArgs) ToGetHelmEnvironmentVariableOverrideOutput() GetHelmEnvironmentVariableOverrideOutput {
	return i.ToGetHelmEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i GetHelmEnvironmentVariableOverrideArgs) ToGetHelmEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmEnvironmentVariableOverrideOutput)
}

// GetHelmEnvironmentVariableOverrideArrayInput is an input type that accepts GetHelmEnvironmentVariableOverrideArray and GetHelmEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `GetHelmEnvironmentVariableOverrideArrayInput` via:
//
//	GetHelmEnvironmentVariableOverrideArray{ GetHelmEnvironmentVariableOverrideArgs{...} }
type GetHelmEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToGetHelmEnvironmentVariableOverrideArrayOutput() GetHelmEnvironmentVariableOverrideArrayOutput
	ToGetHelmEnvironmentVariableOverrideArrayOutputWithContext(context.Context) GetHelmEnvironmentVariableOverrideArrayOutput
}

type GetHelmEnvironmentVariableOverrideArray []GetHelmEnvironmentVariableOverrideInput

func (GetHelmEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetHelmEnvironmentVariableOverrideArray) ToGetHelmEnvironmentVariableOverrideArrayOutput() GetHelmEnvironmentVariableOverrideArrayOutput {
	return i.ToGetHelmEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i GetHelmEnvironmentVariableOverrideArray) ToGetHelmEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmEnvironmentVariableOverrideArrayOutput)
}

type GetHelmEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (GetHelmEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetHelmEnvironmentVariableOverrideOutput) ToGetHelmEnvironmentVariableOverrideOutput() GetHelmEnvironmentVariableOverrideOutput {
	return o
}

func (o GetHelmEnvironmentVariableOverrideOutput) ToGetHelmEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o GetHelmEnvironmentVariableOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariableOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable override.
func (o GetHelmEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o GetHelmEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetHelmEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetHelmEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetHelmEnvironmentVariableOverrideArrayOutput) ToGetHelmEnvironmentVariableOverrideArrayOutput() GetHelmEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetHelmEnvironmentVariableOverrideArrayOutput) ToGetHelmEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetHelmEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetHelmEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) GetHelmEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmEnvironmentVariableOverride {
		return vs[0].([]GetHelmEnvironmentVariableOverride)[vs[1].(int)]
	}).(GetHelmEnvironmentVariableOverrideOutput)
}

type GetHelmSecret struct {
	// Id of the secret.
	Id string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// GetHelmSecretInput is an input type that accepts GetHelmSecretArgs and GetHelmSecretOutput values.
// You can construct a concrete instance of `GetHelmSecretInput` via:
//
//	GetHelmSecretArgs{...}
type GetHelmSecretInput interface {
	pulumi.Input

	ToGetHelmSecretOutput() GetHelmSecretOutput
	ToGetHelmSecretOutputWithContext(context.Context) GetHelmSecretOutput
}

type GetHelmSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHelmSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmSecret)(nil)).Elem()
}

func (i GetHelmSecretArgs) ToGetHelmSecretOutput() GetHelmSecretOutput {
	return i.ToGetHelmSecretOutputWithContext(context.Background())
}

func (i GetHelmSecretArgs) ToGetHelmSecretOutputWithContext(ctx context.Context) GetHelmSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmSecretOutput)
}

// GetHelmSecretArrayInput is an input type that accepts GetHelmSecretArray and GetHelmSecretArrayOutput values.
// You can construct a concrete instance of `GetHelmSecretArrayInput` via:
//
//	GetHelmSecretArray{ GetHelmSecretArgs{...} }
type GetHelmSecretArrayInput interface {
	pulumi.Input

	ToGetHelmSecretArrayOutput() GetHelmSecretArrayOutput
	ToGetHelmSecretArrayOutputWithContext(context.Context) GetHelmSecretArrayOutput
}

type GetHelmSecretArray []GetHelmSecretInput

func (GetHelmSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmSecret)(nil)).Elem()
}

func (i GetHelmSecretArray) ToGetHelmSecretArrayOutput() GetHelmSecretArrayOutput {
	return i.ToGetHelmSecretArrayOutputWithContext(context.Background())
}

func (i GetHelmSecretArray) ToGetHelmSecretArrayOutputWithContext(ctx context.Context) GetHelmSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmSecretArrayOutput)
}

type GetHelmSecretOutput struct{ *pulumi.OutputState }

func (GetHelmSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmSecret)(nil)).Elem()
}

func (o GetHelmSecretOutput) ToGetHelmSecretOutput() GetHelmSecretOutput {
	return o
}

func (o GetHelmSecretOutput) ToGetHelmSecretOutputWithContext(ctx context.Context) GetHelmSecretOutput {
	return o
}

// Id of the secret.
func (o GetHelmSecretOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecret) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the secret.
func (o GetHelmSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o GetHelmSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecret) string { return v.Value }).(pulumi.StringOutput)
}

type GetHelmSecretArrayOutput struct{ *pulumi.OutputState }

func (GetHelmSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmSecret)(nil)).Elem()
}

func (o GetHelmSecretArrayOutput) ToGetHelmSecretArrayOutput() GetHelmSecretArrayOutput {
	return o
}

func (o GetHelmSecretArrayOutput) ToGetHelmSecretArrayOutputWithContext(ctx context.Context) GetHelmSecretArrayOutput {
	return o
}

func (o GetHelmSecretArrayOutput) Index(i pulumi.IntInput) GetHelmSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmSecret {
		return vs[0].([]GetHelmSecret)[vs[1].(int)]
	}).(GetHelmSecretOutput)
}

type GetHelmSecretAlias struct {
	// Id of the secret alias.
	Id string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// GetHelmSecretAliasInput is an input type that accepts GetHelmSecretAliasArgs and GetHelmSecretAliasOutput values.
// You can construct a concrete instance of `GetHelmSecretAliasInput` via:
//
//	GetHelmSecretAliasArgs{...}
type GetHelmSecretAliasInput interface {
	pulumi.Input

	ToGetHelmSecretAliasOutput() GetHelmSecretAliasOutput
	ToGetHelmSecretAliasOutputWithContext(context.Context) GetHelmSecretAliasOutput
}

type GetHelmSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHelmSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmSecretAlias)(nil)).Elem()
}

func (i GetHelmSecretAliasArgs) ToGetHelmSecretAliasOutput() GetHelmSecretAliasOutput {
	return i.ToGetHelmSecretAliasOutputWithContext(context.Background())
}

func (i GetHelmSecretAliasArgs) ToGetHelmSecretAliasOutputWithContext(ctx context.Context) GetHelmSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmSecretAliasOutput)
}

// GetHelmSecretAliasArrayInput is an input type that accepts GetHelmSecretAliasArray and GetHelmSecretAliasArrayOutput values.
// You can construct a concrete instance of `GetHelmSecretAliasArrayInput` via:
//
//	GetHelmSecretAliasArray{ GetHelmSecretAliasArgs{...} }
type GetHelmSecretAliasArrayInput interface {
	pulumi.Input

	ToGetHelmSecretAliasArrayOutput() GetHelmSecretAliasArrayOutput
	ToGetHelmSecretAliasArrayOutputWithContext(context.Context) GetHelmSecretAliasArrayOutput
}

type GetHelmSecretAliasArray []GetHelmSecretAliasInput

func (GetHelmSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmSecretAlias)(nil)).Elem()
}

func (i GetHelmSecretAliasArray) ToGetHelmSecretAliasArrayOutput() GetHelmSecretAliasArrayOutput {
	return i.ToGetHelmSecretAliasArrayOutputWithContext(context.Background())
}

func (i GetHelmSecretAliasArray) ToGetHelmSecretAliasArrayOutputWithContext(ctx context.Context) GetHelmSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmSecretAliasArrayOutput)
}

type GetHelmSecretAliasOutput struct{ *pulumi.OutputState }

func (GetHelmSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmSecretAlias)(nil)).Elem()
}

func (o GetHelmSecretAliasOutput) ToGetHelmSecretAliasOutput() GetHelmSecretAliasOutput {
	return o
}

func (o GetHelmSecretAliasOutput) ToGetHelmSecretAliasOutputWithContext(ctx context.Context) GetHelmSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o GetHelmSecretAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecretAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret alias.
func (o GetHelmSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o GetHelmSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetHelmSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (GetHelmSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmSecretAlias)(nil)).Elem()
}

func (o GetHelmSecretAliasArrayOutput) ToGetHelmSecretAliasArrayOutput() GetHelmSecretAliasArrayOutput {
	return o
}

func (o GetHelmSecretAliasArrayOutput) ToGetHelmSecretAliasArrayOutputWithContext(ctx context.Context) GetHelmSecretAliasArrayOutput {
	return o
}

func (o GetHelmSecretAliasArrayOutput) Index(i pulumi.IntInput) GetHelmSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmSecretAlias {
		return vs[0].([]GetHelmSecretAlias)[vs[1].(int)]
	}).(GetHelmSecretAliasOutput)
}

type GetHelmSecretOverride struct {
	// Id of the secret override.
	Id string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// GetHelmSecretOverrideInput is an input type that accepts GetHelmSecretOverrideArgs and GetHelmSecretOverrideOutput values.
// You can construct a concrete instance of `GetHelmSecretOverrideInput` via:
//
//	GetHelmSecretOverrideArgs{...}
type GetHelmSecretOverrideInput interface {
	pulumi.Input

	ToGetHelmSecretOverrideOutput() GetHelmSecretOverrideOutput
	ToGetHelmSecretOverrideOutputWithContext(context.Context) GetHelmSecretOverrideOutput
}

type GetHelmSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHelmSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmSecretOverride)(nil)).Elem()
}

func (i GetHelmSecretOverrideArgs) ToGetHelmSecretOverrideOutput() GetHelmSecretOverrideOutput {
	return i.ToGetHelmSecretOverrideOutputWithContext(context.Background())
}

func (i GetHelmSecretOverrideArgs) ToGetHelmSecretOverrideOutputWithContext(ctx context.Context) GetHelmSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmSecretOverrideOutput)
}

// GetHelmSecretOverrideArrayInput is an input type that accepts GetHelmSecretOverrideArray and GetHelmSecretOverrideArrayOutput values.
// You can construct a concrete instance of `GetHelmSecretOverrideArrayInput` via:
//
//	GetHelmSecretOverrideArray{ GetHelmSecretOverrideArgs{...} }
type GetHelmSecretOverrideArrayInput interface {
	pulumi.Input

	ToGetHelmSecretOverrideArrayOutput() GetHelmSecretOverrideArrayOutput
	ToGetHelmSecretOverrideArrayOutputWithContext(context.Context) GetHelmSecretOverrideArrayOutput
}

type GetHelmSecretOverrideArray []GetHelmSecretOverrideInput

func (GetHelmSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmSecretOverride)(nil)).Elem()
}

func (i GetHelmSecretOverrideArray) ToGetHelmSecretOverrideArrayOutput() GetHelmSecretOverrideArrayOutput {
	return i.ToGetHelmSecretOverrideArrayOutputWithContext(context.Background())
}

func (i GetHelmSecretOverrideArray) ToGetHelmSecretOverrideArrayOutputWithContext(ctx context.Context) GetHelmSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmSecretOverrideArrayOutput)
}

type GetHelmSecretOverrideOutput struct{ *pulumi.OutputState }

func (GetHelmSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmSecretOverride)(nil)).Elem()
}

func (o GetHelmSecretOverrideOutput) ToGetHelmSecretOverrideOutput() GetHelmSecretOverrideOutput {
	return o
}

func (o GetHelmSecretOverrideOutput) ToGetHelmSecretOverrideOutputWithContext(ctx context.Context) GetHelmSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o GetHelmSecretOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecretOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret override.
func (o GetHelmSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o GetHelmSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetHelmSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetHelmSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmSecretOverride)(nil)).Elem()
}

func (o GetHelmSecretOverrideArrayOutput) ToGetHelmSecretOverrideArrayOutput() GetHelmSecretOverrideArrayOutput {
	return o
}

func (o GetHelmSecretOverrideArrayOutput) ToGetHelmSecretOverrideArrayOutputWithContext(ctx context.Context) GetHelmSecretOverrideArrayOutput {
	return o
}

func (o GetHelmSecretOverrideArrayOutput) Index(i pulumi.IntInput) GetHelmSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmSecretOverride {
		return vs[0].([]GetHelmSecretOverride)[vs[1].(int)]
	}).(GetHelmSecretOverrideOutput)
}

type GetJobBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetJobBuiltInEnvironmentVariableInput is an input type that accepts GetJobBuiltInEnvironmentVariableArgs and GetJobBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetJobBuiltInEnvironmentVariableInput` via:
//
//	GetJobBuiltInEnvironmentVariableArgs{...}
type GetJobBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToGetJobBuiltInEnvironmentVariableOutput() GetJobBuiltInEnvironmentVariableOutput
	ToGetJobBuiltInEnvironmentVariableOutputWithContext(context.Context) GetJobBuiltInEnvironmentVariableOutput
}

type GetJobBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetJobBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetJobBuiltInEnvironmentVariableArgs) ToGetJobBuiltInEnvironmentVariableOutput() GetJobBuiltInEnvironmentVariableOutput {
	return i.ToGetJobBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetJobBuiltInEnvironmentVariableArgs) ToGetJobBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetJobBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobBuiltInEnvironmentVariableOutput)
}

// GetJobBuiltInEnvironmentVariableArrayInput is an input type that accepts GetJobBuiltInEnvironmentVariableArray and GetJobBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetJobBuiltInEnvironmentVariableArrayInput` via:
//
//	GetJobBuiltInEnvironmentVariableArray{ GetJobBuiltInEnvironmentVariableArgs{...} }
type GetJobBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetJobBuiltInEnvironmentVariableArrayOutput() GetJobBuiltInEnvironmentVariableArrayOutput
	ToGetJobBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) GetJobBuiltInEnvironmentVariableArrayOutput
}

type GetJobBuiltInEnvironmentVariableArray []GetJobBuiltInEnvironmentVariableInput

func (GetJobBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetJobBuiltInEnvironmentVariableArray) ToGetJobBuiltInEnvironmentVariableArrayOutput() GetJobBuiltInEnvironmentVariableArrayOutput {
	return i.ToGetJobBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetJobBuiltInEnvironmentVariableArray) ToGetJobBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetJobBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobBuiltInEnvironmentVariableArrayOutput)
}

type GetJobBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetJobBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetJobBuiltInEnvironmentVariableOutput) ToGetJobBuiltInEnvironmentVariableOutput() GetJobBuiltInEnvironmentVariableOutput {
	return o
}

func (o GetJobBuiltInEnvironmentVariableOutput) ToGetJobBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetJobBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetJobBuiltInEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobBuiltInEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetJobBuiltInEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobBuiltInEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetJobBuiltInEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobBuiltInEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetJobBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetJobBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetJobBuiltInEnvironmentVariableArrayOutput) ToGetJobBuiltInEnvironmentVariableArrayOutput() GetJobBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetJobBuiltInEnvironmentVariableArrayOutput) ToGetJobBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetJobBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetJobBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetJobBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobBuiltInEnvironmentVariable {
		return vs[0].([]GetJobBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(GetJobBuiltInEnvironmentVariableOutput)
}

type GetJobDeploymentRestriction struct {
	// Id of the deployment restriction
	Id string `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode string `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type string `pulumi:"type"`
	// Value of the deployment restriction
	Value string `pulumi:"value"`
}

// GetJobDeploymentRestrictionInput is an input type that accepts GetJobDeploymentRestrictionArgs and GetJobDeploymentRestrictionOutput values.
// You can construct a concrete instance of `GetJobDeploymentRestrictionInput` via:
//
//	GetJobDeploymentRestrictionArgs{...}
type GetJobDeploymentRestrictionInput interface {
	pulumi.Input

	ToGetJobDeploymentRestrictionOutput() GetJobDeploymentRestrictionOutput
	ToGetJobDeploymentRestrictionOutputWithContext(context.Context) GetJobDeploymentRestrictionOutput
}

type GetJobDeploymentRestrictionArgs struct {
	// Id of the deployment restriction
	Id pulumi.StringInput `pulumi:"id"`
	// Can be EXCLUDE or MATCH
	Mode pulumi.StringInput `pulumi:"mode"`
	// Currently, only PATH is accepted
	Type pulumi.StringInput `pulumi:"type"`
	// Value of the deployment restriction
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetJobDeploymentRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDeploymentRestriction)(nil)).Elem()
}

func (i GetJobDeploymentRestrictionArgs) ToGetJobDeploymentRestrictionOutput() GetJobDeploymentRestrictionOutput {
	return i.ToGetJobDeploymentRestrictionOutputWithContext(context.Background())
}

func (i GetJobDeploymentRestrictionArgs) ToGetJobDeploymentRestrictionOutputWithContext(ctx context.Context) GetJobDeploymentRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDeploymentRestrictionOutput)
}

// GetJobDeploymentRestrictionArrayInput is an input type that accepts GetJobDeploymentRestrictionArray and GetJobDeploymentRestrictionArrayOutput values.
// You can construct a concrete instance of `GetJobDeploymentRestrictionArrayInput` via:
//
//	GetJobDeploymentRestrictionArray{ GetJobDeploymentRestrictionArgs{...} }
type GetJobDeploymentRestrictionArrayInput interface {
	pulumi.Input

	ToGetJobDeploymentRestrictionArrayOutput() GetJobDeploymentRestrictionArrayOutput
	ToGetJobDeploymentRestrictionArrayOutputWithContext(context.Context) GetJobDeploymentRestrictionArrayOutput
}

type GetJobDeploymentRestrictionArray []GetJobDeploymentRestrictionInput

func (GetJobDeploymentRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDeploymentRestriction)(nil)).Elem()
}

func (i GetJobDeploymentRestrictionArray) ToGetJobDeploymentRestrictionArrayOutput() GetJobDeploymentRestrictionArrayOutput {
	return i.ToGetJobDeploymentRestrictionArrayOutputWithContext(context.Background())
}

func (i GetJobDeploymentRestrictionArray) ToGetJobDeploymentRestrictionArrayOutputWithContext(ctx context.Context) GetJobDeploymentRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobDeploymentRestrictionArrayOutput)
}

type GetJobDeploymentRestrictionOutput struct{ *pulumi.OutputState }

func (GetJobDeploymentRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobDeploymentRestriction)(nil)).Elem()
}

func (o GetJobDeploymentRestrictionOutput) ToGetJobDeploymentRestrictionOutput() GetJobDeploymentRestrictionOutput {
	return o
}

func (o GetJobDeploymentRestrictionOutput) ToGetJobDeploymentRestrictionOutputWithContext(ctx context.Context) GetJobDeploymentRestrictionOutput {
	return o
}

// Id of the deployment restriction
func (o GetJobDeploymentRestrictionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobDeploymentRestriction) string { return v.Id }).(pulumi.StringOutput)
}

// Can be EXCLUDE or MATCH
func (o GetJobDeploymentRestrictionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobDeploymentRestriction) string { return v.Mode }).(pulumi.StringOutput)
}

// Currently, only PATH is accepted
func (o GetJobDeploymentRestrictionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobDeploymentRestriction) string { return v.Type }).(pulumi.StringOutput)
}

// Value of the deployment restriction
func (o GetJobDeploymentRestrictionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobDeploymentRestriction) string { return v.Value }).(pulumi.StringOutput)
}

type GetJobDeploymentRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetJobDeploymentRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobDeploymentRestriction)(nil)).Elem()
}

func (o GetJobDeploymentRestrictionArrayOutput) ToGetJobDeploymentRestrictionArrayOutput() GetJobDeploymentRestrictionArrayOutput {
	return o
}

func (o GetJobDeploymentRestrictionArrayOutput) ToGetJobDeploymentRestrictionArrayOutputWithContext(ctx context.Context) GetJobDeploymentRestrictionArrayOutput {
	return o
}

func (o GetJobDeploymentRestrictionArrayOutput) Index(i pulumi.IntInput) GetJobDeploymentRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobDeploymentRestriction {
		return vs[0].([]GetJobDeploymentRestriction)[vs[1].(int)]
	}).(GetJobDeploymentRestrictionOutput)
}

type GetJobEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetJobEnvironmentVariableInput is an input type that accepts GetJobEnvironmentVariableArgs and GetJobEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetJobEnvironmentVariableInput` via:
//
//	GetJobEnvironmentVariableArgs{...}
type GetJobEnvironmentVariableInput interface {
	pulumi.Input

	ToGetJobEnvironmentVariableOutput() GetJobEnvironmentVariableOutput
	ToGetJobEnvironmentVariableOutputWithContext(context.Context) GetJobEnvironmentVariableOutput
}

type GetJobEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetJobEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobEnvironmentVariable)(nil)).Elem()
}

func (i GetJobEnvironmentVariableArgs) ToGetJobEnvironmentVariableOutput() GetJobEnvironmentVariableOutput {
	return i.ToGetJobEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetJobEnvironmentVariableArgs) ToGetJobEnvironmentVariableOutputWithContext(ctx context.Context) GetJobEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobEnvironmentVariableOutput)
}

// GetJobEnvironmentVariableArrayInput is an input type that accepts GetJobEnvironmentVariableArray and GetJobEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetJobEnvironmentVariableArrayInput` via:
//
//	GetJobEnvironmentVariableArray{ GetJobEnvironmentVariableArgs{...} }
type GetJobEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetJobEnvironmentVariableArrayOutput() GetJobEnvironmentVariableArrayOutput
	ToGetJobEnvironmentVariableArrayOutputWithContext(context.Context) GetJobEnvironmentVariableArrayOutput
}

type GetJobEnvironmentVariableArray []GetJobEnvironmentVariableInput

func (GetJobEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobEnvironmentVariable)(nil)).Elem()
}

func (i GetJobEnvironmentVariableArray) ToGetJobEnvironmentVariableArrayOutput() GetJobEnvironmentVariableArrayOutput {
	return i.ToGetJobEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetJobEnvironmentVariableArray) ToGetJobEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetJobEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobEnvironmentVariableArrayOutput)
}

type GetJobEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetJobEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobEnvironmentVariable)(nil)).Elem()
}

func (o GetJobEnvironmentVariableOutput) ToGetJobEnvironmentVariableOutput() GetJobEnvironmentVariableOutput {
	return o
}

func (o GetJobEnvironmentVariableOutput) ToGetJobEnvironmentVariableOutputWithContext(ctx context.Context) GetJobEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetJobEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetJobEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetJobEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetJobEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetJobEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobEnvironmentVariable)(nil)).Elem()
}

func (o GetJobEnvironmentVariableArrayOutput) ToGetJobEnvironmentVariableArrayOutput() GetJobEnvironmentVariableArrayOutput {
	return o
}

func (o GetJobEnvironmentVariableArrayOutput) ToGetJobEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetJobEnvironmentVariableArrayOutput {
	return o
}

func (o GetJobEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetJobEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobEnvironmentVariable {
		return vs[0].([]GetJobEnvironmentVariable)[vs[1].(int)]
	}).(GetJobEnvironmentVariableOutput)
}

type GetJobEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// GetJobEnvironmentVariableAliasInput is an input type that accepts GetJobEnvironmentVariableAliasArgs and GetJobEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `GetJobEnvironmentVariableAliasInput` via:
//
//	GetJobEnvironmentVariableAliasArgs{...}
type GetJobEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToGetJobEnvironmentVariableAliasOutput() GetJobEnvironmentVariableAliasOutput
	ToGetJobEnvironmentVariableAliasOutputWithContext(context.Context) GetJobEnvironmentVariableAliasOutput
}

type GetJobEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetJobEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetJobEnvironmentVariableAliasArgs) ToGetJobEnvironmentVariableAliasOutput() GetJobEnvironmentVariableAliasOutput {
	return i.ToGetJobEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i GetJobEnvironmentVariableAliasArgs) ToGetJobEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetJobEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobEnvironmentVariableAliasOutput)
}

// GetJobEnvironmentVariableAliasArrayInput is an input type that accepts GetJobEnvironmentVariableAliasArray and GetJobEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `GetJobEnvironmentVariableAliasArrayInput` via:
//
//	GetJobEnvironmentVariableAliasArray{ GetJobEnvironmentVariableAliasArgs{...} }
type GetJobEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToGetJobEnvironmentVariableAliasArrayOutput() GetJobEnvironmentVariableAliasArrayOutput
	ToGetJobEnvironmentVariableAliasArrayOutputWithContext(context.Context) GetJobEnvironmentVariableAliasArrayOutput
}

type GetJobEnvironmentVariableAliasArray []GetJobEnvironmentVariableAliasInput

func (GetJobEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetJobEnvironmentVariableAliasArray) ToGetJobEnvironmentVariableAliasArrayOutput() GetJobEnvironmentVariableAliasArrayOutput {
	return i.ToGetJobEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i GetJobEnvironmentVariableAliasArray) ToGetJobEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetJobEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobEnvironmentVariableAliasArrayOutput)
}

type GetJobEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (GetJobEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetJobEnvironmentVariableAliasOutput) ToGetJobEnvironmentVariableAliasOutput() GetJobEnvironmentVariableAliasOutput {
	return o
}

func (o GetJobEnvironmentVariableAliasOutput) ToGetJobEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetJobEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o GetJobEnvironmentVariableAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariableAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable alias.
func (o GetJobEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o GetJobEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetJobEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (GetJobEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetJobEnvironmentVariableAliasArrayOutput) ToGetJobEnvironmentVariableAliasArrayOutput() GetJobEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetJobEnvironmentVariableAliasArrayOutput) ToGetJobEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetJobEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetJobEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) GetJobEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobEnvironmentVariableAlias {
		return vs[0].([]GetJobEnvironmentVariableAlias)[vs[1].(int)]
	}).(GetJobEnvironmentVariableAliasOutput)
}

type GetJobEnvironmentVariableOverride struct {
	// Id of the environment variable override.
	Id string `pulumi:"id"`
	// Name of the environment variable override.
	Key string `pulumi:"key"`
	// Value of the environment variable override.
	Value string `pulumi:"value"`
}

// GetJobEnvironmentVariableOverrideInput is an input type that accepts GetJobEnvironmentVariableOverrideArgs and GetJobEnvironmentVariableOverrideOutput values.
// You can construct a concrete instance of `GetJobEnvironmentVariableOverrideInput` via:
//
//	GetJobEnvironmentVariableOverrideArgs{...}
type GetJobEnvironmentVariableOverrideInput interface {
	pulumi.Input

	ToGetJobEnvironmentVariableOverrideOutput() GetJobEnvironmentVariableOverrideOutput
	ToGetJobEnvironmentVariableOverrideOutputWithContext(context.Context) GetJobEnvironmentVariableOverrideOutput
}

type GetJobEnvironmentVariableOverrideArgs struct {
	// Id of the environment variable override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetJobEnvironmentVariableOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetJobEnvironmentVariableOverrideArgs) ToGetJobEnvironmentVariableOverrideOutput() GetJobEnvironmentVariableOverrideOutput {
	return i.ToGetJobEnvironmentVariableOverrideOutputWithContext(context.Background())
}

func (i GetJobEnvironmentVariableOverrideArgs) ToGetJobEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetJobEnvironmentVariableOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobEnvironmentVariableOverrideOutput)
}

// GetJobEnvironmentVariableOverrideArrayInput is an input type that accepts GetJobEnvironmentVariableOverrideArray and GetJobEnvironmentVariableOverrideArrayOutput values.
// You can construct a concrete instance of `GetJobEnvironmentVariableOverrideArrayInput` via:
//
//	GetJobEnvironmentVariableOverrideArray{ GetJobEnvironmentVariableOverrideArgs{...} }
type GetJobEnvironmentVariableOverrideArrayInput interface {
	pulumi.Input

	ToGetJobEnvironmentVariableOverrideArrayOutput() GetJobEnvironmentVariableOverrideArrayOutput
	ToGetJobEnvironmentVariableOverrideArrayOutputWithContext(context.Context) GetJobEnvironmentVariableOverrideArrayOutput
}

type GetJobEnvironmentVariableOverrideArray []GetJobEnvironmentVariableOverrideInput

func (GetJobEnvironmentVariableOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobEnvironmentVariableOverride)(nil)).Elem()
}

func (i GetJobEnvironmentVariableOverrideArray) ToGetJobEnvironmentVariableOverrideArrayOutput() GetJobEnvironmentVariableOverrideArrayOutput {
	return i.ToGetJobEnvironmentVariableOverrideArrayOutputWithContext(context.Background())
}

func (i GetJobEnvironmentVariableOverrideArray) ToGetJobEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetJobEnvironmentVariableOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobEnvironmentVariableOverrideArrayOutput)
}

type GetJobEnvironmentVariableOverrideOutput struct{ *pulumi.OutputState }

func (GetJobEnvironmentVariableOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetJobEnvironmentVariableOverrideOutput) ToGetJobEnvironmentVariableOverrideOutput() GetJobEnvironmentVariableOverrideOutput {
	return o
}

func (o GetJobEnvironmentVariableOverrideOutput) ToGetJobEnvironmentVariableOverrideOutputWithContext(ctx context.Context) GetJobEnvironmentVariableOverrideOutput {
	return o
}

// Id of the environment variable override.
func (o GetJobEnvironmentVariableOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariableOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable override.
func (o GetJobEnvironmentVariableOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariableOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable override.
func (o GetJobEnvironmentVariableOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobEnvironmentVariableOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetJobEnvironmentVariableOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetJobEnvironmentVariableOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobEnvironmentVariableOverride)(nil)).Elem()
}

func (o GetJobEnvironmentVariableOverrideArrayOutput) ToGetJobEnvironmentVariableOverrideArrayOutput() GetJobEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetJobEnvironmentVariableOverrideArrayOutput) ToGetJobEnvironmentVariableOverrideArrayOutputWithContext(ctx context.Context) GetJobEnvironmentVariableOverrideArrayOutput {
	return o
}

func (o GetJobEnvironmentVariableOverrideArrayOutput) Index(i pulumi.IntInput) GetJobEnvironmentVariableOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobEnvironmentVariableOverride {
		return vs[0].([]GetJobEnvironmentVariableOverride)[vs[1].(int)]
	}).(GetJobEnvironmentVariableOverrideOutput)
}

type GetJobHealthchecks struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe *GetJobHealthchecksLivenessProbe `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe *GetJobHealthchecksReadinessProbe `pulumi:"readinessProbe"`
}

// GetJobHealthchecksInput is an input type that accepts GetJobHealthchecksArgs and GetJobHealthchecksOutput values.
// You can construct a concrete instance of `GetJobHealthchecksInput` via:
//
//	GetJobHealthchecksArgs{...}
type GetJobHealthchecksInput interface {
	pulumi.Input

	ToGetJobHealthchecksOutput() GetJobHealthchecksOutput
	ToGetJobHealthchecksOutputWithContext(context.Context) GetJobHealthchecksOutput
}

type GetJobHealthchecksArgs struct {
	// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
	LivenessProbe GetJobHealthchecksLivenessProbePtrInput `pulumi:"livenessProbe"`
	// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
	ReadinessProbe GetJobHealthchecksReadinessProbePtrInput `pulumi:"readinessProbe"`
}

func (GetJobHealthchecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecks)(nil)).Elem()
}

func (i GetJobHealthchecksArgs) ToGetJobHealthchecksOutput() GetJobHealthchecksOutput {
	return i.ToGetJobHealthchecksOutputWithContext(context.Background())
}

func (i GetJobHealthchecksArgs) ToGetJobHealthchecksOutputWithContext(ctx context.Context) GetJobHealthchecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksOutput)
}

func (i GetJobHealthchecksArgs) ToGetJobHealthchecksPtrOutput() GetJobHealthchecksPtrOutput {
	return i.ToGetJobHealthchecksPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksArgs) ToGetJobHealthchecksPtrOutputWithContext(ctx context.Context) GetJobHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksOutput).ToGetJobHealthchecksPtrOutputWithContext(ctx)
}

// GetJobHealthchecksPtrInput is an input type that accepts GetJobHealthchecksArgs, GetJobHealthchecksPtr and GetJobHealthchecksPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksPtrInput` via:
//
//	        GetJobHealthchecksArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksPtrOutput() GetJobHealthchecksPtrOutput
	ToGetJobHealthchecksPtrOutputWithContext(context.Context) GetJobHealthchecksPtrOutput
}

type getJobHealthchecksPtrType GetJobHealthchecksArgs

func GetJobHealthchecksPtr(v *GetJobHealthchecksArgs) GetJobHealthchecksPtrInput {
	return (*getJobHealthchecksPtrType)(v)
}

func (*getJobHealthchecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecks)(nil)).Elem()
}

func (i *getJobHealthchecksPtrType) ToGetJobHealthchecksPtrOutput() GetJobHealthchecksPtrOutput {
	return i.ToGetJobHealthchecksPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksPtrType) ToGetJobHealthchecksPtrOutputWithContext(ctx context.Context) GetJobHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksPtrOutput)
}

type GetJobHealthchecksOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecks)(nil)).Elem()
}

func (o GetJobHealthchecksOutput) ToGetJobHealthchecksOutput() GetJobHealthchecksOutput {
	return o
}

func (o GetJobHealthchecksOutput) ToGetJobHealthchecksOutputWithContext(ctx context.Context) GetJobHealthchecksOutput {
	return o
}

func (o GetJobHealthchecksOutput) ToGetJobHealthchecksPtrOutput() GetJobHealthchecksPtrOutput {
	return o.ToGetJobHealthchecksPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksOutput) ToGetJobHealthchecksPtrOutputWithContext(ctx context.Context) GetJobHealthchecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecks) *GetJobHealthchecks {
		return &v
	}).(GetJobHealthchecksPtrOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o GetJobHealthchecksOutput) LivenessProbe() GetJobHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v GetJobHealthchecks) *GetJobHealthchecksLivenessProbe { return v.LivenessProbe }).(GetJobHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o GetJobHealthchecksOutput) ReadinessProbe() GetJobHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v GetJobHealthchecks) *GetJobHealthchecksReadinessProbe { return v.ReadinessProbe }).(GetJobHealthchecksReadinessProbePtrOutput)
}

type GetJobHealthchecksPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecks)(nil)).Elem()
}

func (o GetJobHealthchecksPtrOutput) ToGetJobHealthchecksPtrOutput() GetJobHealthchecksPtrOutput {
	return o
}

func (o GetJobHealthchecksPtrOutput) ToGetJobHealthchecksPtrOutputWithContext(ctx context.Context) GetJobHealthchecksPtrOutput {
	return o
}

func (o GetJobHealthchecksPtrOutput) Elem() GetJobHealthchecksOutput {
	return o.ApplyT(func(v *GetJobHealthchecks) GetJobHealthchecks {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecks
		return ret
	}).(GetJobHealthchecksOutput)
}

// Configuration for the liveness probe, in order to know when your service is working correctly. Failing the probe means your service being killed/ask to be restarted.
func (o GetJobHealthchecksPtrOutput) LivenessProbe() GetJobHealthchecksLivenessProbePtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecks) *GetJobHealthchecksLivenessProbe {
		if v == nil {
			return nil
		}
		return v.LivenessProbe
	}).(GetJobHealthchecksLivenessProbePtrOutput)
}

// Configuration for the readiness probe, in order to know when your service is ready to receive traffic. Failing the probe means your service will stop receiving traffic.
func (o GetJobHealthchecksPtrOutput) ReadinessProbe() GetJobHealthchecksReadinessProbePtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecks) *GetJobHealthchecksReadinessProbe {
		if v == nil {
			return nil
		}
		return v.ReadinessProbe
	}).(GetJobHealthchecksReadinessProbePtrOutput)
}

type GetJobHealthchecksLivenessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetJobHealthchecksLivenessProbeType `pulumi:"type"`
}

// GetJobHealthchecksLivenessProbeInput is an input type that accepts GetJobHealthchecksLivenessProbeArgs and GetJobHealthchecksLivenessProbeOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeInput` via:
//
//	GetJobHealthchecksLivenessProbeArgs{...}
type GetJobHealthchecksLivenessProbeInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeOutput() GetJobHealthchecksLivenessProbeOutput
	ToGetJobHealthchecksLivenessProbeOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeOutput
}

type GetJobHealthchecksLivenessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetJobHealthchecksLivenessProbeTypeInput `pulumi:"type"`
}

func (GetJobHealthchecksLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbe)(nil)).Elem()
}

func (i GetJobHealthchecksLivenessProbeArgs) ToGetJobHealthchecksLivenessProbeOutput() GetJobHealthchecksLivenessProbeOutput {
	return i.ToGetJobHealthchecksLivenessProbeOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeArgs) ToGetJobHealthchecksLivenessProbeOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeOutput)
}

func (i GetJobHealthchecksLivenessProbeArgs) ToGetJobHealthchecksLivenessProbePtrOutput() GetJobHealthchecksLivenessProbePtrOutput {
	return i.ToGetJobHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeArgs) ToGetJobHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeOutput).ToGetJobHealthchecksLivenessProbePtrOutputWithContext(ctx)
}

// GetJobHealthchecksLivenessProbePtrInput is an input type that accepts GetJobHealthchecksLivenessProbeArgs, GetJobHealthchecksLivenessProbePtr and GetJobHealthchecksLivenessProbePtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbePtrInput` via:
//
//	        GetJobHealthchecksLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksLivenessProbePtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbePtrOutput() GetJobHealthchecksLivenessProbePtrOutput
	ToGetJobHealthchecksLivenessProbePtrOutputWithContext(context.Context) GetJobHealthchecksLivenessProbePtrOutput
}

type getJobHealthchecksLivenessProbePtrType GetJobHealthchecksLivenessProbeArgs

func GetJobHealthchecksLivenessProbePtr(v *GetJobHealthchecksLivenessProbeArgs) GetJobHealthchecksLivenessProbePtrInput {
	return (*getJobHealthchecksLivenessProbePtrType)(v)
}

func (*getJobHealthchecksLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbe)(nil)).Elem()
}

func (i *getJobHealthchecksLivenessProbePtrType) ToGetJobHealthchecksLivenessProbePtrOutput() GetJobHealthchecksLivenessProbePtrOutput {
	return i.ToGetJobHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksLivenessProbePtrType) ToGetJobHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbePtrOutput)
}

type GetJobHealthchecksLivenessProbeOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbe)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeOutput) ToGetJobHealthchecksLivenessProbeOutput() GetJobHealthchecksLivenessProbeOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeOutput) ToGetJobHealthchecksLivenessProbeOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeOutput) ToGetJobHealthchecksLivenessProbePtrOutput() GetJobHealthchecksLivenessProbePtrOutput {
	return o.ToGetJobHealthchecksLivenessProbePtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksLivenessProbeOutput) ToGetJobHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksLivenessProbe) *GetJobHealthchecksLivenessProbe {
		return &v
	}).(GetJobHealthchecksLivenessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetJobHealthchecksLivenessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetJobHealthchecksLivenessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o GetJobHealthchecksLivenessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetJobHealthchecksLivenessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetJobHealthchecksLivenessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetJobHealthchecksLivenessProbeOutput) Type() GetJobHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbe) GetJobHealthchecksLivenessProbeType { return v.Type }).(GetJobHealthchecksLivenessProbeTypeOutput)
}

type GetJobHealthchecksLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbe)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbePtrOutput) ToGetJobHealthchecksLivenessProbePtrOutput() GetJobHealthchecksLivenessProbePtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbePtrOutput) ToGetJobHealthchecksLivenessProbePtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbePtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbePtrOutput) Elem() GetJobHealthchecksLivenessProbeOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbe) GetJobHealthchecksLivenessProbe {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksLivenessProbe
		return ret
	}).(GetJobHealthchecksLivenessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetJobHealthchecksLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetJobHealthchecksLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o GetJobHealthchecksLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetJobHealthchecksLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetJobHealthchecksLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetJobHealthchecksLivenessProbePtrOutput) Type() GetJobHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbe) *GetJobHealthchecksLivenessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(GetJobHealthchecksLivenessProbeTypePtrOutput)
}

type GetJobHealthchecksLivenessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *GetJobHealthchecksLivenessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *GetJobHealthchecksLivenessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *GetJobHealthchecksLivenessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *GetJobHealthchecksLivenessProbeTypeTcp `pulumi:"tcp"`
}

// GetJobHealthchecksLivenessProbeTypeInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeArgs and GetJobHealthchecksLivenessProbeTypeOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeInput` via:
//
//	GetJobHealthchecksLivenessProbeTypeArgs{...}
type GetJobHealthchecksLivenessProbeTypeInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeOutput() GetJobHealthchecksLivenessProbeTypeOutput
	ToGetJobHealthchecksLivenessProbeTypeOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeOutput
}

type GetJobHealthchecksLivenessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec GetJobHealthchecksLivenessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc GetJobHealthchecksLivenessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http GetJobHealthchecksLivenessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp GetJobHealthchecksLivenessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (GetJobHealthchecksLivenessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i GetJobHealthchecksLivenessProbeTypeArgs) ToGetJobHealthchecksLivenessProbeTypeOutput() GetJobHealthchecksLivenessProbeTypeOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeArgs) ToGetJobHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeOutput)
}

func (i GetJobHealthchecksLivenessProbeTypeArgs) ToGetJobHealthchecksLivenessProbeTypePtrOutput() GetJobHealthchecksLivenessProbeTypePtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeArgs) ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeOutput).ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx)
}

// GetJobHealthchecksLivenessProbeTypePtrInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeArgs, GetJobHealthchecksLivenessProbeTypePtr and GetJobHealthchecksLivenessProbeTypePtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypePtrInput` via:
//
//	        GetJobHealthchecksLivenessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksLivenessProbeTypePtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypePtrOutput() GetJobHealthchecksLivenessProbeTypePtrOutput
	ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypePtrOutput
}

type getJobHealthchecksLivenessProbeTypePtrType GetJobHealthchecksLivenessProbeTypeArgs

func GetJobHealthchecksLivenessProbeTypePtr(v *GetJobHealthchecksLivenessProbeTypeArgs) GetJobHealthchecksLivenessProbeTypePtrInput {
	return (*getJobHealthchecksLivenessProbeTypePtrType)(v)
}

func (*getJobHealthchecksLivenessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeType)(nil)).Elem()
}

func (i *getJobHealthchecksLivenessProbeTypePtrType) ToGetJobHealthchecksLivenessProbeTypePtrOutput() GetJobHealthchecksLivenessProbeTypePtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksLivenessProbeTypePtrType) ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypePtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeOutput) ToGetJobHealthchecksLivenessProbeTypeOutput() GetJobHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeOutput) ToGetJobHealthchecksLivenessProbeTypeOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeOutput) ToGetJobHealthchecksLivenessProbeTypePtrOutput() GetJobHealthchecksLivenessProbeTypePtrOutput {
	return o.ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksLivenessProbeTypeOutput) ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeType {
		return &v
	}).(GetJobHealthchecksLivenessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetJobHealthchecksLivenessProbeTypeOutput) Exec() GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeTypeExec { return v.Exec }).(GetJobHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetJobHealthchecksLivenessProbeTypeOutput) Grpc() GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeTypeGrpc { return v.Grpc }).(GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetJobHealthchecksLivenessProbeTypeOutput) Http() GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeTypeHttp { return v.Http }).(GetJobHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetJobHealthchecksLivenessProbeTypeOutput) Tcp() GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeTypeTcp { return v.Tcp }).(GetJobHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeType)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypePtrOutput) ToGetJobHealthchecksLivenessProbeTypePtrOutput() GetJobHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypePtrOutput) ToGetJobHealthchecksLivenessProbeTypePtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypePtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypePtrOutput) Elem() GetJobHealthchecksLivenessProbeTypeOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeType) GetJobHealthchecksLivenessProbeType {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksLivenessProbeType
		return ret
	}).(GetJobHealthchecksLivenessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetJobHealthchecksLivenessProbeTypePtrOutput) Exec() GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(GetJobHealthchecksLivenessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetJobHealthchecksLivenessProbeTypePtrOutput) Grpc() GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetJobHealthchecksLivenessProbeTypePtrOutput) Http() GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GetJobHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetJobHealthchecksLivenessProbeTypePtrOutput) Tcp() GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeType) *GetJobHealthchecksLivenessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(GetJobHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// GetJobHealthchecksLivenessProbeTypeExecInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeExecArgs and GetJobHealthchecksLivenessProbeTypeExecOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeExecInput` via:
//
//	GetJobHealthchecksLivenessProbeTypeExecArgs{...}
type GetJobHealthchecksLivenessProbeTypeExecInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeExecOutput() GetJobHealthchecksLivenessProbeTypeExecOutput
	ToGetJobHealthchecksLivenessProbeTypeExecOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeExecOutput
}

type GetJobHealthchecksLivenessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (GetJobHealthchecksLivenessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i GetJobHealthchecksLivenessProbeTypeExecArgs) ToGetJobHealthchecksLivenessProbeTypeExecOutput() GetJobHealthchecksLivenessProbeTypeExecOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeExecOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeExecArgs) ToGetJobHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeExecOutput)
}

func (i GetJobHealthchecksLivenessProbeTypeExecArgs) ToGetJobHealthchecksLivenessProbeTypeExecPtrOutput() GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeExecArgs) ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeExecOutput).ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx)
}

// GetJobHealthchecksLivenessProbeTypeExecPtrInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeExecArgs, GetJobHealthchecksLivenessProbeTypeExecPtr and GetJobHealthchecksLivenessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeExecPtrInput` via:
//
//	        GetJobHealthchecksLivenessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksLivenessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeExecPtrOutput() GetJobHealthchecksLivenessProbeTypeExecPtrOutput
	ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeExecPtrOutput
}

type getJobHealthchecksLivenessProbeTypeExecPtrType GetJobHealthchecksLivenessProbeTypeExecArgs

func GetJobHealthchecksLivenessProbeTypeExecPtr(v *GetJobHealthchecksLivenessProbeTypeExecArgs) GetJobHealthchecksLivenessProbeTypeExecPtrInput {
	return (*getJobHealthchecksLivenessProbeTypeExecPtrType)(v)
}

func (*getJobHealthchecksLivenessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (i *getJobHealthchecksLivenessProbeTypeExecPtrType) ToGetJobHealthchecksLivenessProbeTypeExecPtrOutput() GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksLivenessProbeTypeExecPtrType) ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeExecPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeExecOutput) ToGetJobHealthchecksLivenessProbeTypeExecOutput() GetJobHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeExecOutput) ToGetJobHealthchecksLivenessProbeTypeExecOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeExecOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeExecOutput) ToGetJobHealthchecksLivenessProbeTypeExecPtrOutput() GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksLivenessProbeTypeExecOutput) ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksLivenessProbeTypeExec) *GetJobHealthchecksLivenessProbeTypeExec {
		return &v
	}).(GetJobHealthchecksLivenessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o GetJobHealthchecksLivenessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type GetJobHealthchecksLivenessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeTypeExec)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeExecPtrOutput) ToGetJobHealthchecksLivenessProbeTypeExecPtrOutput() GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeExecPtrOutput) ToGetJobHealthchecksLivenessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeExecPtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeExecPtrOutput) Elem() GetJobHealthchecksLivenessProbeTypeExecOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeExec) GetJobHealthchecksLivenessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksLivenessProbeTypeExec
		return ret
	}).(GetJobHealthchecksLivenessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o GetJobHealthchecksLivenessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type GetJobHealthchecksLivenessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// GetJobHealthchecksLivenessProbeTypeGrpcInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeGrpcArgs and GetJobHealthchecksLivenessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeGrpcInput` via:
//
//	GetJobHealthchecksLivenessProbeTypeGrpcArgs{...}
type GetJobHealthchecksLivenessProbeTypeGrpcInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeGrpcOutput() GetJobHealthchecksLivenessProbeTypeGrpcOutput
	ToGetJobHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeGrpcOutput
}

type GetJobHealthchecksLivenessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GetJobHealthchecksLivenessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i GetJobHealthchecksLivenessProbeTypeGrpcArgs) ToGetJobHealthchecksLivenessProbeTypeGrpcOutput() GetJobHealthchecksLivenessProbeTypeGrpcOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeGrpcArgs) ToGetJobHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeGrpcOutput)
}

func (i GetJobHealthchecksLivenessProbeTypeGrpcArgs) ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutput() GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeGrpcArgs) ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeGrpcOutput).ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// GetJobHealthchecksLivenessProbeTypeGrpcPtrInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeGrpcArgs, GetJobHealthchecksLivenessProbeTypeGrpcPtr and GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeGrpcPtrInput` via:
//
//	        GetJobHealthchecksLivenessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksLivenessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutput() GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput
	ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput
}

type getJobHealthchecksLivenessProbeTypeGrpcPtrType GetJobHealthchecksLivenessProbeTypeGrpcArgs

func GetJobHealthchecksLivenessProbeTypeGrpcPtr(v *GetJobHealthchecksLivenessProbeTypeGrpcArgs) GetJobHealthchecksLivenessProbeTypeGrpcPtrInput {
	return (*getJobHealthchecksLivenessProbeTypeGrpcPtrType)(v)
}

func (*getJobHealthchecksLivenessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (i *getJobHealthchecksLivenessProbeTypeGrpcPtrType) ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutput() GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksLivenessProbeTypeGrpcPtrType) ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeGrpcOutput) ToGetJobHealthchecksLivenessProbeTypeGrpcOutput() GetJobHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeGrpcOutput) ToGetJobHealthchecksLivenessProbeTypeGrpcOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeGrpcOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeGrpcOutput) ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutput() GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksLivenessProbeTypeGrpcOutput) ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksLivenessProbeTypeGrpc) *GetJobHealthchecksLivenessProbeTypeGrpc {
		return &v
	}).(GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksLivenessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetJobHealthchecksLivenessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeTypeGrpc)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput) ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutput() GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput) ToGetJobHealthchecksLivenessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput) Elem() GetJobHealthchecksLivenessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeGrpc) GetJobHealthchecksLivenessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksLivenessProbeTypeGrpc
		return ret
	}).(GetJobHealthchecksLivenessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// GetJobHealthchecksLivenessProbeTypeHttpInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeHttpArgs and GetJobHealthchecksLivenessProbeTypeHttpOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeHttpInput` via:
//
//	GetJobHealthchecksLivenessProbeTypeHttpArgs{...}
type GetJobHealthchecksLivenessProbeTypeHttpInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeHttpOutput() GetJobHealthchecksLivenessProbeTypeHttpOutput
	ToGetJobHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeHttpOutput
}

type GetJobHealthchecksLivenessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (GetJobHealthchecksLivenessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i GetJobHealthchecksLivenessProbeTypeHttpArgs) ToGetJobHealthchecksLivenessProbeTypeHttpOutput() GetJobHealthchecksLivenessProbeTypeHttpOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeHttpOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeHttpArgs) ToGetJobHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeHttpOutput)
}

func (i GetJobHealthchecksLivenessProbeTypeHttpArgs) ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutput() GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeHttpArgs) ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeHttpOutput).ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx)
}

// GetJobHealthchecksLivenessProbeTypeHttpPtrInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeHttpArgs, GetJobHealthchecksLivenessProbeTypeHttpPtr and GetJobHealthchecksLivenessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeHttpPtrInput` via:
//
//	        GetJobHealthchecksLivenessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksLivenessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutput() GetJobHealthchecksLivenessProbeTypeHttpPtrOutput
	ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeHttpPtrOutput
}

type getJobHealthchecksLivenessProbeTypeHttpPtrType GetJobHealthchecksLivenessProbeTypeHttpArgs

func GetJobHealthchecksLivenessProbeTypeHttpPtr(v *GetJobHealthchecksLivenessProbeTypeHttpArgs) GetJobHealthchecksLivenessProbeTypeHttpPtrInput {
	return (*getJobHealthchecksLivenessProbeTypeHttpPtrType)(v)
}

func (*getJobHealthchecksLivenessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (i *getJobHealthchecksLivenessProbeTypeHttpPtrType) ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutput() GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksLivenessProbeTypeHttpPtrType) ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeHttpPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeHttpOutput) ToGetJobHealthchecksLivenessProbeTypeHttpOutput() GetJobHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeHttpOutput) ToGetJobHealthchecksLivenessProbeTypeHttpOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeHttpOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeHttpOutput) ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutput() GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksLivenessProbeTypeHttpOutput) ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksLivenessProbeTypeHttp) *GetJobHealthchecksLivenessProbeTypeHttp {
		return &v
	}).(GetJobHealthchecksLivenessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetJobHealthchecksLivenessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksLivenessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetJobHealthchecksLivenessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type GetJobHealthchecksLivenessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeTypeHttp)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeHttpPtrOutput) ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutput() GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeHttpPtrOutput) ToGetJobHealthchecksLivenessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeHttpPtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeHttpPtrOutput) Elem() GetJobHealthchecksLivenessProbeTypeHttpOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeHttp) GetJobHealthchecksLivenessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksLivenessProbeTypeHttp
		return ret
	}).(GetJobHealthchecksLivenessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetJobHealthchecksLivenessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksLivenessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetJobHealthchecksLivenessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// GetJobHealthchecksLivenessProbeTypeTcpInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeTcpArgs and GetJobHealthchecksLivenessProbeTypeTcpOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeTcpInput` via:
//
//	GetJobHealthchecksLivenessProbeTypeTcpArgs{...}
type GetJobHealthchecksLivenessProbeTypeTcpInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeTcpOutput() GetJobHealthchecksLivenessProbeTypeTcpOutput
	ToGetJobHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeTcpOutput
}

type GetJobHealthchecksLivenessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetJobHealthchecksLivenessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i GetJobHealthchecksLivenessProbeTypeTcpArgs) ToGetJobHealthchecksLivenessProbeTypeTcpOutput() GetJobHealthchecksLivenessProbeTypeTcpOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeTcpOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeTcpArgs) ToGetJobHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeTcpOutput)
}

func (i GetJobHealthchecksLivenessProbeTypeTcpArgs) ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutput() GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksLivenessProbeTypeTcpArgs) ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeTcpOutput).ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx)
}

// GetJobHealthchecksLivenessProbeTypeTcpPtrInput is an input type that accepts GetJobHealthchecksLivenessProbeTypeTcpArgs, GetJobHealthchecksLivenessProbeTypeTcpPtr and GetJobHealthchecksLivenessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksLivenessProbeTypeTcpPtrInput` via:
//
//	        GetJobHealthchecksLivenessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksLivenessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutput() GetJobHealthchecksLivenessProbeTypeTcpPtrOutput
	ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Context) GetJobHealthchecksLivenessProbeTypeTcpPtrOutput
}

type getJobHealthchecksLivenessProbeTypeTcpPtrType GetJobHealthchecksLivenessProbeTypeTcpArgs

func GetJobHealthchecksLivenessProbeTypeTcpPtr(v *GetJobHealthchecksLivenessProbeTypeTcpArgs) GetJobHealthchecksLivenessProbeTypeTcpPtrInput {
	return (*getJobHealthchecksLivenessProbeTypeTcpPtrType)(v)
}

func (*getJobHealthchecksLivenessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (i *getJobHealthchecksLivenessProbeTypeTcpPtrType) ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutput() GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return i.ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksLivenessProbeTypeTcpPtrType) ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksLivenessProbeTypeTcpPtrOutput)
}

type GetJobHealthchecksLivenessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeTcpOutput) ToGetJobHealthchecksLivenessProbeTypeTcpOutput() GetJobHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeTcpOutput) ToGetJobHealthchecksLivenessProbeTypeTcpOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeTcpOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeTcpOutput) ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutput() GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksLivenessProbeTypeTcpOutput) ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksLivenessProbeTypeTcp) *GetJobHealthchecksLivenessProbeTypeTcp {
		return &v
	}).(GetJobHealthchecksLivenessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetJobHealthchecksLivenessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksLivenessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksLivenessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type GetJobHealthchecksLivenessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksLivenessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksLivenessProbeTypeTcp)(nil)).Elem()
}

func (o GetJobHealthchecksLivenessProbeTypeTcpPtrOutput) ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutput() GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeTcpPtrOutput) ToGetJobHealthchecksLivenessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksLivenessProbeTypeTcpPtrOutput {
	return o
}

func (o GetJobHealthchecksLivenessProbeTypeTcpPtrOutput) Elem() GetJobHealthchecksLivenessProbeTypeTcpOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeTcp) GetJobHealthchecksLivenessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksLivenessProbeTypeTcp
		return ret
	}).(GetJobHealthchecksLivenessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetJobHealthchecksLivenessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksLivenessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksLivenessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type GetJobHealthchecksReadinessProbe struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold int `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds int `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds int `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold int `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds int `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetJobHealthchecksReadinessProbeType `pulumi:"type"`
}

// GetJobHealthchecksReadinessProbeInput is an input type that accepts GetJobHealthchecksReadinessProbeArgs and GetJobHealthchecksReadinessProbeOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeInput` via:
//
//	GetJobHealthchecksReadinessProbeArgs{...}
type GetJobHealthchecksReadinessProbeInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeOutput() GetJobHealthchecksReadinessProbeOutput
	ToGetJobHealthchecksReadinessProbeOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeOutput
}

type GetJobHealthchecksReadinessProbeArgs struct {
	// Number of time the an ok probe should fail before declaring it as failed
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Number of seconds to wait before the first execution of the probe to be trigerred
	InitialDelaySeconds pulumi.IntInput `pulumi:"initialDelaySeconds"`
	// Number of seconds before each execution of the probe
	PeriodSeconds pulumi.IntInput `pulumi:"periodSeconds"`
	// Number of time the probe should success before declaring a failed probe as ok again
	SuccessThreshold pulumi.IntInput `pulumi:"successThreshold"`
	// Number of seconds within which the check need to respond before declaring it as a failure
	TimeoutSeconds pulumi.IntInput `pulumi:"timeoutSeconds"`
	// Kind of check to run for this probe. There can only be one configured at a time
	Type GetJobHealthchecksReadinessProbeTypeInput `pulumi:"type"`
}

func (GetJobHealthchecksReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbe)(nil)).Elem()
}

func (i GetJobHealthchecksReadinessProbeArgs) ToGetJobHealthchecksReadinessProbeOutput() GetJobHealthchecksReadinessProbeOutput {
	return i.ToGetJobHealthchecksReadinessProbeOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeArgs) ToGetJobHealthchecksReadinessProbeOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeOutput)
}

func (i GetJobHealthchecksReadinessProbeArgs) ToGetJobHealthchecksReadinessProbePtrOutput() GetJobHealthchecksReadinessProbePtrOutput {
	return i.ToGetJobHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeArgs) ToGetJobHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeOutput).ToGetJobHealthchecksReadinessProbePtrOutputWithContext(ctx)
}

// GetJobHealthchecksReadinessProbePtrInput is an input type that accepts GetJobHealthchecksReadinessProbeArgs, GetJobHealthchecksReadinessProbePtr and GetJobHealthchecksReadinessProbePtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbePtrInput` via:
//
//	        GetJobHealthchecksReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksReadinessProbePtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbePtrOutput() GetJobHealthchecksReadinessProbePtrOutput
	ToGetJobHealthchecksReadinessProbePtrOutputWithContext(context.Context) GetJobHealthchecksReadinessProbePtrOutput
}

type getJobHealthchecksReadinessProbePtrType GetJobHealthchecksReadinessProbeArgs

func GetJobHealthchecksReadinessProbePtr(v *GetJobHealthchecksReadinessProbeArgs) GetJobHealthchecksReadinessProbePtrInput {
	return (*getJobHealthchecksReadinessProbePtrType)(v)
}

func (*getJobHealthchecksReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbe)(nil)).Elem()
}

func (i *getJobHealthchecksReadinessProbePtrType) ToGetJobHealthchecksReadinessProbePtrOutput() GetJobHealthchecksReadinessProbePtrOutput {
	return i.ToGetJobHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksReadinessProbePtrType) ToGetJobHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbePtrOutput)
}

type GetJobHealthchecksReadinessProbeOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbe)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeOutput) ToGetJobHealthchecksReadinessProbeOutput() GetJobHealthchecksReadinessProbeOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeOutput) ToGetJobHealthchecksReadinessProbeOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeOutput) ToGetJobHealthchecksReadinessProbePtrOutput() GetJobHealthchecksReadinessProbePtrOutput {
	return o.ToGetJobHealthchecksReadinessProbePtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksReadinessProbeOutput) ToGetJobHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksReadinessProbe) *GetJobHealthchecksReadinessProbe {
		return &v
	}).(GetJobHealthchecksReadinessProbePtrOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetJobHealthchecksReadinessProbeOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbe) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetJobHealthchecksReadinessProbeOutput) InitialDelaySeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbe) int { return v.InitialDelaySeconds }).(pulumi.IntOutput)
}

// Number of seconds before each execution of the probe
func (o GetJobHealthchecksReadinessProbeOutput) PeriodSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbe) int { return v.PeriodSeconds }).(pulumi.IntOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetJobHealthchecksReadinessProbeOutput) SuccessThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbe) int { return v.SuccessThreshold }).(pulumi.IntOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetJobHealthchecksReadinessProbeOutput) TimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbe) int { return v.TimeoutSeconds }).(pulumi.IntOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetJobHealthchecksReadinessProbeOutput) Type() GetJobHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbe) GetJobHealthchecksReadinessProbeType { return v.Type }).(GetJobHealthchecksReadinessProbeTypeOutput)
}

type GetJobHealthchecksReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbe)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbePtrOutput) ToGetJobHealthchecksReadinessProbePtrOutput() GetJobHealthchecksReadinessProbePtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbePtrOutput) ToGetJobHealthchecksReadinessProbePtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbePtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbePtrOutput) Elem() GetJobHealthchecksReadinessProbeOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbe) GetJobHealthchecksReadinessProbe {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksReadinessProbe
		return ret
	}).(GetJobHealthchecksReadinessProbeOutput)
}

// Number of time the an ok probe should fail before declaring it as failed
func (o GetJobHealthchecksReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds to wait before the first execution of the probe to be trigerred
func (o GetJobHealthchecksReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds before each execution of the probe
func (o GetJobHealthchecksReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of time the probe should success before declaring a failed probe as ok again
func (o GetJobHealthchecksReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds within which the check need to respond before declaring it as a failure
func (o GetJobHealthchecksReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Kind of check to run for this probe. There can only be one configured at a time
func (o GetJobHealthchecksReadinessProbePtrOutput) Type() GetJobHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbe) *GetJobHealthchecksReadinessProbeType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(GetJobHealthchecksReadinessProbeTypePtrOutput)
}

type GetJobHealthchecksReadinessProbeType struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec *GetJobHealthchecksReadinessProbeTypeExec `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc *GetJobHealthchecksReadinessProbeTypeGrpc `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http *GetJobHealthchecksReadinessProbeTypeHttp `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp *GetJobHealthchecksReadinessProbeTypeTcp `pulumi:"tcp"`
}

// GetJobHealthchecksReadinessProbeTypeInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeArgs and GetJobHealthchecksReadinessProbeTypeOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeInput` via:
//
//	GetJobHealthchecksReadinessProbeTypeArgs{...}
type GetJobHealthchecksReadinessProbeTypeInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeOutput() GetJobHealthchecksReadinessProbeTypeOutput
	ToGetJobHealthchecksReadinessProbeTypeOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeOutput
}

type GetJobHealthchecksReadinessProbeTypeArgs struct {
	// Check that the given command return an exit 0. Binary should be present in the image
	Exec GetJobHealthchecksReadinessProbeTypeExecPtrInput `pulumi:"exec"`
	// Check that the given port respond to GRPC call
	Grpc GetJobHealthchecksReadinessProbeTypeGrpcPtrInput `pulumi:"grpc"`
	// Check that the given port respond to HTTP call (should return a 2xx response code)
	Http GetJobHealthchecksReadinessProbeTypeHttpPtrInput `pulumi:"http"`
	// Check that the given port accepting connection
	Tcp GetJobHealthchecksReadinessProbeTypeTcpPtrInput `pulumi:"tcp"`
}

func (GetJobHealthchecksReadinessProbeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i GetJobHealthchecksReadinessProbeTypeArgs) ToGetJobHealthchecksReadinessProbeTypeOutput() GetJobHealthchecksReadinessProbeTypeOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeArgs) ToGetJobHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeOutput)
}

func (i GetJobHealthchecksReadinessProbeTypeArgs) ToGetJobHealthchecksReadinessProbeTypePtrOutput() GetJobHealthchecksReadinessProbeTypePtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeArgs) ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeOutput).ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx)
}

// GetJobHealthchecksReadinessProbeTypePtrInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeArgs, GetJobHealthchecksReadinessProbeTypePtr and GetJobHealthchecksReadinessProbeTypePtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypePtrInput` via:
//
//	        GetJobHealthchecksReadinessProbeTypeArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksReadinessProbeTypePtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypePtrOutput() GetJobHealthchecksReadinessProbeTypePtrOutput
	ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypePtrOutput
}

type getJobHealthchecksReadinessProbeTypePtrType GetJobHealthchecksReadinessProbeTypeArgs

func GetJobHealthchecksReadinessProbeTypePtr(v *GetJobHealthchecksReadinessProbeTypeArgs) GetJobHealthchecksReadinessProbeTypePtrInput {
	return (*getJobHealthchecksReadinessProbeTypePtrType)(v)
}

func (*getJobHealthchecksReadinessProbeTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeType)(nil)).Elem()
}

func (i *getJobHealthchecksReadinessProbeTypePtrType) ToGetJobHealthchecksReadinessProbeTypePtrOutput() GetJobHealthchecksReadinessProbeTypePtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksReadinessProbeTypePtrType) ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypePtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeOutput) ToGetJobHealthchecksReadinessProbeTypeOutput() GetJobHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeOutput) ToGetJobHealthchecksReadinessProbeTypeOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeOutput) ToGetJobHealthchecksReadinessProbeTypePtrOutput() GetJobHealthchecksReadinessProbeTypePtrOutput {
	return o.ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksReadinessProbeTypeOutput) ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeType {
		return &v
	}).(GetJobHealthchecksReadinessProbeTypePtrOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetJobHealthchecksReadinessProbeTypeOutput) Exec() GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeTypeExec { return v.Exec }).(GetJobHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetJobHealthchecksReadinessProbeTypeOutput) Grpc() GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeTypeGrpc { return v.Grpc }).(GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetJobHealthchecksReadinessProbeTypeOutput) Http() GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeTypeHttp { return v.Http }).(GetJobHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetJobHealthchecksReadinessProbeTypeOutput) Tcp() GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeTypeTcp { return v.Tcp }).(GetJobHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypePtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeType)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypePtrOutput) ToGetJobHealthchecksReadinessProbeTypePtrOutput() GetJobHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypePtrOutput) ToGetJobHealthchecksReadinessProbeTypePtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypePtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypePtrOutput) Elem() GetJobHealthchecksReadinessProbeTypeOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeType) GetJobHealthchecksReadinessProbeType {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksReadinessProbeType
		return ret
	}).(GetJobHealthchecksReadinessProbeTypeOutput)
}

// Check that the given command return an exit 0. Binary should be present in the image
func (o GetJobHealthchecksReadinessProbeTypePtrOutput) Exec() GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeTypeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(GetJobHealthchecksReadinessProbeTypeExecPtrOutput)
}

// Check that the given port respond to GRPC call
func (o GetJobHealthchecksReadinessProbeTypePtrOutput) Grpc() GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeTypeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// Check that the given port respond to HTTP call (should return a 2xx response code)
func (o GetJobHealthchecksReadinessProbeTypePtrOutput) Http() GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeTypeHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GetJobHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// Check that the given port accepting connection
func (o GetJobHealthchecksReadinessProbeTypePtrOutput) Tcp() GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeType) *GetJobHealthchecksReadinessProbeTypeTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(GetJobHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeExec struct {
	// The command and its arguments to exec
	Commands []string `pulumi:"commands"`
}

// GetJobHealthchecksReadinessProbeTypeExecInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeExecArgs and GetJobHealthchecksReadinessProbeTypeExecOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeExecInput` via:
//
//	GetJobHealthchecksReadinessProbeTypeExecArgs{...}
type GetJobHealthchecksReadinessProbeTypeExecInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeExecOutput() GetJobHealthchecksReadinessProbeTypeExecOutput
	ToGetJobHealthchecksReadinessProbeTypeExecOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeExecOutput
}

type GetJobHealthchecksReadinessProbeTypeExecArgs struct {
	// The command and its arguments to exec
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (GetJobHealthchecksReadinessProbeTypeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i GetJobHealthchecksReadinessProbeTypeExecArgs) ToGetJobHealthchecksReadinessProbeTypeExecOutput() GetJobHealthchecksReadinessProbeTypeExecOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeExecOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeExecArgs) ToGetJobHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeExecOutput)
}

func (i GetJobHealthchecksReadinessProbeTypeExecArgs) ToGetJobHealthchecksReadinessProbeTypeExecPtrOutput() GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeExecArgs) ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeExecOutput).ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx)
}

// GetJobHealthchecksReadinessProbeTypeExecPtrInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeExecArgs, GetJobHealthchecksReadinessProbeTypeExecPtr and GetJobHealthchecksReadinessProbeTypeExecPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeExecPtrInput` via:
//
//	        GetJobHealthchecksReadinessProbeTypeExecArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksReadinessProbeTypeExecPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeExecPtrOutput() GetJobHealthchecksReadinessProbeTypeExecPtrOutput
	ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeExecPtrOutput
}

type getJobHealthchecksReadinessProbeTypeExecPtrType GetJobHealthchecksReadinessProbeTypeExecArgs

func GetJobHealthchecksReadinessProbeTypeExecPtr(v *GetJobHealthchecksReadinessProbeTypeExecArgs) GetJobHealthchecksReadinessProbeTypeExecPtrInput {
	return (*getJobHealthchecksReadinessProbeTypeExecPtrType)(v)
}

func (*getJobHealthchecksReadinessProbeTypeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (i *getJobHealthchecksReadinessProbeTypeExecPtrType) ToGetJobHealthchecksReadinessProbeTypeExecPtrOutput() GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksReadinessProbeTypeExecPtrType) ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeExecPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeExecOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeExecOutput) ToGetJobHealthchecksReadinessProbeTypeExecOutput() GetJobHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeExecOutput) ToGetJobHealthchecksReadinessProbeTypeExecOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeExecOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeExecOutput) ToGetJobHealthchecksReadinessProbeTypeExecPtrOutput() GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksReadinessProbeTypeExecOutput) ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksReadinessProbeTypeExec) *GetJobHealthchecksReadinessProbeTypeExec {
		return &v
	}).(GetJobHealthchecksReadinessProbeTypeExecPtrOutput)
}

// The command and its arguments to exec
func (o GetJobHealthchecksReadinessProbeTypeExecOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeTypeExec) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type GetJobHealthchecksReadinessProbeTypeExecPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeTypeExec)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeExecPtrOutput) ToGetJobHealthchecksReadinessProbeTypeExecPtrOutput() GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeExecPtrOutput) ToGetJobHealthchecksReadinessProbeTypeExecPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeExecPtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeExecPtrOutput) Elem() GetJobHealthchecksReadinessProbeTypeExecOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeExec) GetJobHealthchecksReadinessProbeTypeExec {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksReadinessProbeTypeExec
		return ret
	}).(GetJobHealthchecksReadinessProbeTypeExecOutput)
}

// The command and its arguments to exec
func (o GetJobHealthchecksReadinessProbeTypeExecPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeExec) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type GetJobHealthchecksReadinessProbeTypeGrpc struct {
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service *string `pulumi:"service"`
}

// GetJobHealthchecksReadinessProbeTypeGrpcInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeGrpcArgs and GetJobHealthchecksReadinessProbeTypeGrpcOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeGrpcInput` via:
//
//	GetJobHealthchecksReadinessProbeTypeGrpcArgs{...}
type GetJobHealthchecksReadinessProbeTypeGrpcInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeGrpcOutput() GetJobHealthchecksReadinessProbeTypeGrpcOutput
	ToGetJobHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeGrpcOutput
}

type GetJobHealthchecksReadinessProbeTypeGrpcArgs struct {
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GetJobHealthchecksReadinessProbeTypeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i GetJobHealthchecksReadinessProbeTypeGrpcArgs) ToGetJobHealthchecksReadinessProbeTypeGrpcOutput() GetJobHealthchecksReadinessProbeTypeGrpcOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeGrpcOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeGrpcArgs) ToGetJobHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeGrpcOutput)
}

func (i GetJobHealthchecksReadinessProbeTypeGrpcArgs) ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutput() GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeGrpcArgs) ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeGrpcOutput).ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx)
}

// GetJobHealthchecksReadinessProbeTypeGrpcPtrInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeGrpcArgs, GetJobHealthchecksReadinessProbeTypeGrpcPtr and GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeGrpcPtrInput` via:
//
//	        GetJobHealthchecksReadinessProbeTypeGrpcArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksReadinessProbeTypeGrpcPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutput() GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput
	ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput
}

type getJobHealthchecksReadinessProbeTypeGrpcPtrType GetJobHealthchecksReadinessProbeTypeGrpcArgs

func GetJobHealthchecksReadinessProbeTypeGrpcPtr(v *GetJobHealthchecksReadinessProbeTypeGrpcArgs) GetJobHealthchecksReadinessProbeTypeGrpcPtrInput {
	return (*getJobHealthchecksReadinessProbeTypeGrpcPtrType)(v)
}

func (*getJobHealthchecksReadinessProbeTypeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (i *getJobHealthchecksReadinessProbeTypeGrpcPtrType) ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutput() GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksReadinessProbeTypeGrpcPtrType) ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeGrpcOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeGrpcOutput) ToGetJobHealthchecksReadinessProbeTypeGrpcOutput() GetJobHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeGrpcOutput) ToGetJobHealthchecksReadinessProbeTypeGrpcOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeGrpcOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeGrpcOutput) ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutput() GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksReadinessProbeTypeGrpcOutput) ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksReadinessProbeTypeGrpc) *GetJobHealthchecksReadinessProbeTypeGrpc {
		return &v
	}).(GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksReadinessProbeTypeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeTypeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetJobHealthchecksReadinessProbeTypeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeTypeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeTypeGrpc)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput) ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutput() GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput) ToGetJobHealthchecksReadinessProbeTypeGrpcPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput) Elem() GetJobHealthchecksReadinessProbeTypeGrpcOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeGrpc) GetJobHealthchecksReadinessProbeTypeGrpc {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksReadinessProbeTypeGrpc
		return ret
	}).(GetJobHealthchecksReadinessProbeTypeGrpcOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The grpc service to connect to. It needs to implement grpc health protocol. https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/#introducing-grpc-health-probe
func (o GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeHttp struct {
	// The path that the HTTP GET request. By default it is `/`
	Path *string `pulumi:"path"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme string `pulumi:"scheme"`
}

// GetJobHealthchecksReadinessProbeTypeHttpInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeHttpArgs and GetJobHealthchecksReadinessProbeTypeHttpOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeHttpInput` via:
//
//	GetJobHealthchecksReadinessProbeTypeHttpArgs{...}
type GetJobHealthchecksReadinessProbeTypeHttpInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeHttpOutput() GetJobHealthchecksReadinessProbeTypeHttpOutput
	ToGetJobHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeHttpOutput
}

type GetJobHealthchecksReadinessProbeTypeHttpArgs struct {
	// The path that the HTTP GET request. By default it is `/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
	// if the HTTP GET request should be done in HTTP or HTTPS.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (GetJobHealthchecksReadinessProbeTypeHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i GetJobHealthchecksReadinessProbeTypeHttpArgs) ToGetJobHealthchecksReadinessProbeTypeHttpOutput() GetJobHealthchecksReadinessProbeTypeHttpOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeHttpOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeHttpArgs) ToGetJobHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeHttpOutput)
}

func (i GetJobHealthchecksReadinessProbeTypeHttpArgs) ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutput() GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeHttpArgs) ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeHttpOutput).ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx)
}

// GetJobHealthchecksReadinessProbeTypeHttpPtrInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeHttpArgs, GetJobHealthchecksReadinessProbeTypeHttpPtr and GetJobHealthchecksReadinessProbeTypeHttpPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeHttpPtrInput` via:
//
//	        GetJobHealthchecksReadinessProbeTypeHttpArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksReadinessProbeTypeHttpPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutput() GetJobHealthchecksReadinessProbeTypeHttpPtrOutput
	ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeHttpPtrOutput
}

type getJobHealthchecksReadinessProbeTypeHttpPtrType GetJobHealthchecksReadinessProbeTypeHttpArgs

func GetJobHealthchecksReadinessProbeTypeHttpPtr(v *GetJobHealthchecksReadinessProbeTypeHttpArgs) GetJobHealthchecksReadinessProbeTypeHttpPtrInput {
	return (*getJobHealthchecksReadinessProbeTypeHttpPtrType)(v)
}

func (*getJobHealthchecksReadinessProbeTypeHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (i *getJobHealthchecksReadinessProbeTypeHttpPtrType) ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutput() GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksReadinessProbeTypeHttpPtrType) ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeHttpPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeHttpOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeHttpOutput) ToGetJobHealthchecksReadinessProbeTypeHttpOutput() GetJobHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeHttpOutput) ToGetJobHealthchecksReadinessProbeTypeHttpOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeHttpOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeHttpOutput) ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutput() GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksReadinessProbeTypeHttpOutput) ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksReadinessProbeTypeHttp) *GetJobHealthchecksReadinessProbeTypeHttp {
		return &v
	}).(GetJobHealthchecksReadinessProbeTypeHttpPtrOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetJobHealthchecksReadinessProbeTypeHttpOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeTypeHttp) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksReadinessProbeTypeHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeTypeHttp) int { return v.Port }).(pulumi.IntOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetJobHealthchecksReadinessProbeTypeHttpOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeTypeHttp) string { return v.Scheme }).(pulumi.StringOutput)
}

type GetJobHealthchecksReadinessProbeTypeHttpPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeTypeHttp)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeHttpPtrOutput) ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutput() GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeHttpPtrOutput) ToGetJobHealthchecksReadinessProbeTypeHttpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeHttpPtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeHttpPtrOutput) Elem() GetJobHealthchecksReadinessProbeTypeHttpOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeHttp) GetJobHealthchecksReadinessProbeTypeHttp {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksReadinessProbeTypeHttp
		return ret
	}).(GetJobHealthchecksReadinessProbeTypeHttpOutput)
}

// The path that the HTTP GET request. By default it is `/`
func (o GetJobHealthchecksReadinessProbeTypeHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksReadinessProbeTypeHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// if the HTTP GET request should be done in HTTP or HTTPS.
func (o GetJobHealthchecksReadinessProbeTypeHttpPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeTcp struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host *string `pulumi:"host"`
	// The port number to try to connect to
	Port int `pulumi:"port"`
}

// GetJobHealthchecksReadinessProbeTypeTcpInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeTcpArgs and GetJobHealthchecksReadinessProbeTypeTcpOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeTcpInput` via:
//
//	GetJobHealthchecksReadinessProbeTypeTcpArgs{...}
type GetJobHealthchecksReadinessProbeTypeTcpInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeTcpOutput() GetJobHealthchecksReadinessProbeTypeTcpOutput
	ToGetJobHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeTcpOutput
}

type GetJobHealthchecksReadinessProbeTypeTcpArgs struct {
	// Optional. If the host need to be different than localhost/pod ip
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The port number to try to connect to
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetJobHealthchecksReadinessProbeTypeTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i GetJobHealthchecksReadinessProbeTypeTcpArgs) ToGetJobHealthchecksReadinessProbeTypeTcpOutput() GetJobHealthchecksReadinessProbeTypeTcpOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeTcpOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeTcpArgs) ToGetJobHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeTcpOutput)
}

func (i GetJobHealthchecksReadinessProbeTypeTcpArgs) ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutput() GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i GetJobHealthchecksReadinessProbeTypeTcpArgs) ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeTcpOutput).ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx)
}

// GetJobHealthchecksReadinessProbeTypeTcpPtrInput is an input type that accepts GetJobHealthchecksReadinessProbeTypeTcpArgs, GetJobHealthchecksReadinessProbeTypeTcpPtr and GetJobHealthchecksReadinessProbeTypeTcpPtrOutput values.
// You can construct a concrete instance of `GetJobHealthchecksReadinessProbeTypeTcpPtrInput` via:
//
//	        GetJobHealthchecksReadinessProbeTypeTcpArgs{...}
//
//	or:
//
//	        nil
type GetJobHealthchecksReadinessProbeTypeTcpPtrInput interface {
	pulumi.Input

	ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutput() GetJobHealthchecksReadinessProbeTypeTcpPtrOutput
	ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Context) GetJobHealthchecksReadinessProbeTypeTcpPtrOutput
}

type getJobHealthchecksReadinessProbeTypeTcpPtrType GetJobHealthchecksReadinessProbeTypeTcpArgs

func GetJobHealthchecksReadinessProbeTypeTcpPtr(v *GetJobHealthchecksReadinessProbeTypeTcpArgs) GetJobHealthchecksReadinessProbeTypeTcpPtrInput {
	return (*getJobHealthchecksReadinessProbeTypeTcpPtrType)(v)
}

func (*getJobHealthchecksReadinessProbeTypeTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (i *getJobHealthchecksReadinessProbeTypeTcpPtrType) ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutput() GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return i.ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (i *getJobHealthchecksReadinessProbeTypeTcpPtrType) ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobHealthchecksReadinessProbeTypeTcpPtrOutput)
}

type GetJobHealthchecksReadinessProbeTypeTcpOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeTcpOutput) ToGetJobHealthchecksReadinessProbeTypeTcpOutput() GetJobHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeTcpOutput) ToGetJobHealthchecksReadinessProbeTypeTcpOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeTcpOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeTcpOutput) ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutput() GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(context.Background())
}

func (o GetJobHealthchecksReadinessProbeTypeTcpOutput) ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobHealthchecksReadinessProbeTypeTcp) *GetJobHealthchecksReadinessProbeTypeTcp {
		return &v
	}).(GetJobHealthchecksReadinessProbeTypeTcpPtrOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetJobHealthchecksReadinessProbeTypeTcpOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeTypeTcp) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksReadinessProbeTypeTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetJobHealthchecksReadinessProbeTypeTcp) int { return v.Port }).(pulumi.IntOutput)
}

type GetJobHealthchecksReadinessProbeTypeTcpPtrOutput struct{ *pulumi.OutputState }

func (GetJobHealthchecksReadinessProbeTypeTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobHealthchecksReadinessProbeTypeTcp)(nil)).Elem()
}

func (o GetJobHealthchecksReadinessProbeTypeTcpPtrOutput) ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutput() GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeTcpPtrOutput) ToGetJobHealthchecksReadinessProbeTypeTcpPtrOutputWithContext(ctx context.Context) GetJobHealthchecksReadinessProbeTypeTcpPtrOutput {
	return o
}

func (o GetJobHealthchecksReadinessProbeTypeTcpPtrOutput) Elem() GetJobHealthchecksReadinessProbeTypeTcpOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeTcp) GetJobHealthchecksReadinessProbeTypeTcp {
		if v != nil {
			return *v
		}
		var ret GetJobHealthchecksReadinessProbeTypeTcp
		return ret
	}).(GetJobHealthchecksReadinessProbeTypeTcpOutput)
}

// Optional. If the host need to be different than localhost/pod ip
func (o GetJobHealthchecksReadinessProbeTypeTcpPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeTcp) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The port number to try to connect to
func (o GetJobHealthchecksReadinessProbeTypeTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetJobHealthchecksReadinessProbeTypeTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type GetJobSchedule struct {
	// Job's cron.
	Cronjob GetJobScheduleCronjob `pulumi:"cronjob"`
	// Job's schedule on delete.
	OnDelete GetJobScheduleOnDelete `pulumi:"onDelete"`
	// Job's schedule on start.
	OnStart GetJobScheduleOnStart `pulumi:"onStart"`
	// Job's schedule on stop.
	OnStop GetJobScheduleOnStop `pulumi:"onStop"`
}

// GetJobScheduleInput is an input type that accepts GetJobScheduleArgs and GetJobScheduleOutput values.
// You can construct a concrete instance of `GetJobScheduleInput` via:
//
//	GetJobScheduleArgs{...}
type GetJobScheduleInput interface {
	pulumi.Input

	ToGetJobScheduleOutput() GetJobScheduleOutput
	ToGetJobScheduleOutputWithContext(context.Context) GetJobScheduleOutput
}

type GetJobScheduleArgs struct {
	// Job's cron.
	Cronjob GetJobScheduleCronjobInput `pulumi:"cronjob"`
	// Job's schedule on delete.
	OnDelete GetJobScheduleOnDeleteInput `pulumi:"onDelete"`
	// Job's schedule on start.
	OnStart GetJobScheduleOnStartInput `pulumi:"onStart"`
	// Job's schedule on stop.
	OnStop GetJobScheduleOnStopInput `pulumi:"onStop"`
}

func (GetJobScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSchedule)(nil)).Elem()
}

func (i GetJobScheduleArgs) ToGetJobScheduleOutput() GetJobScheduleOutput {
	return i.ToGetJobScheduleOutputWithContext(context.Background())
}

func (i GetJobScheduleArgs) ToGetJobScheduleOutputWithContext(ctx context.Context) GetJobScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobScheduleOutput)
}

type GetJobScheduleOutput struct{ *pulumi.OutputState }

func (GetJobScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSchedule)(nil)).Elem()
}

func (o GetJobScheduleOutput) ToGetJobScheduleOutput() GetJobScheduleOutput {
	return o
}

func (o GetJobScheduleOutput) ToGetJobScheduleOutputWithContext(ctx context.Context) GetJobScheduleOutput {
	return o
}

// Job's cron.
func (o GetJobScheduleOutput) Cronjob() GetJobScheduleCronjobOutput {
	return o.ApplyT(func(v GetJobSchedule) GetJobScheduleCronjob { return v.Cronjob }).(GetJobScheduleCronjobOutput)
}

// Job's schedule on delete.
func (o GetJobScheduleOutput) OnDelete() GetJobScheduleOnDeleteOutput {
	return o.ApplyT(func(v GetJobSchedule) GetJobScheduleOnDelete { return v.OnDelete }).(GetJobScheduleOnDeleteOutput)
}

// Job's schedule on start.
func (o GetJobScheduleOutput) OnStart() GetJobScheduleOnStartOutput {
	return o.ApplyT(func(v GetJobSchedule) GetJobScheduleOnStart { return v.OnStart }).(GetJobScheduleOnStartOutput)
}

// Job's schedule on stop.
func (o GetJobScheduleOutput) OnStop() GetJobScheduleOnStopOutput {
	return o.ApplyT(func(v GetJobSchedule) GetJobScheduleOnStop { return v.OnStop }).(GetJobScheduleOnStopOutput)
}

type GetJobScheduleCronjob struct {
	// Job's cron command.
	Command GetJobScheduleCronjobCommand `pulumi:"command"`
	// Job's cron string.
	Schedule string `pulumi:"schedule"`
}

// GetJobScheduleCronjobInput is an input type that accepts GetJobScheduleCronjobArgs and GetJobScheduleCronjobOutput values.
// You can construct a concrete instance of `GetJobScheduleCronjobInput` via:
//
//	GetJobScheduleCronjobArgs{...}
type GetJobScheduleCronjobInput interface {
	pulumi.Input

	ToGetJobScheduleCronjobOutput() GetJobScheduleCronjobOutput
	ToGetJobScheduleCronjobOutputWithContext(context.Context) GetJobScheduleCronjobOutput
}

type GetJobScheduleCronjobArgs struct {
	// Job's cron command.
	Command GetJobScheduleCronjobCommandInput `pulumi:"command"`
	// Job's cron string.
	Schedule pulumi.StringInput `pulumi:"schedule"`
}

func (GetJobScheduleCronjobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleCronjob)(nil)).Elem()
}

func (i GetJobScheduleCronjobArgs) ToGetJobScheduleCronjobOutput() GetJobScheduleCronjobOutput {
	return i.ToGetJobScheduleCronjobOutputWithContext(context.Background())
}

func (i GetJobScheduleCronjobArgs) ToGetJobScheduleCronjobOutputWithContext(ctx context.Context) GetJobScheduleCronjobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobScheduleCronjobOutput)
}

type GetJobScheduleCronjobOutput struct{ *pulumi.OutputState }

func (GetJobScheduleCronjobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleCronjob)(nil)).Elem()
}

func (o GetJobScheduleCronjobOutput) ToGetJobScheduleCronjobOutput() GetJobScheduleCronjobOutput {
	return o
}

func (o GetJobScheduleCronjobOutput) ToGetJobScheduleCronjobOutputWithContext(ctx context.Context) GetJobScheduleCronjobOutput {
	return o
}

// Job's cron command.
func (o GetJobScheduleCronjobOutput) Command() GetJobScheduleCronjobCommandOutput {
	return o.ApplyT(func(v GetJobScheduleCronjob) GetJobScheduleCronjobCommand { return v.Command }).(GetJobScheduleCronjobCommandOutput)
}

// Job's cron string.
func (o GetJobScheduleCronjobOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobScheduleCronjob) string { return v.Schedule }).(pulumi.StringOutput)
}

type GetJobScheduleCronjobCommand struct {
	// List of arguments of this job.
	Arguments []string `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint string `pulumi:"entrypoint"`
}

// GetJobScheduleCronjobCommandInput is an input type that accepts GetJobScheduleCronjobCommandArgs and GetJobScheduleCronjobCommandOutput values.
// You can construct a concrete instance of `GetJobScheduleCronjobCommandInput` via:
//
//	GetJobScheduleCronjobCommandArgs{...}
type GetJobScheduleCronjobCommandInput interface {
	pulumi.Input

	ToGetJobScheduleCronjobCommandOutput() GetJobScheduleCronjobCommandOutput
	ToGetJobScheduleCronjobCommandOutputWithContext(context.Context) GetJobScheduleCronjobCommandOutput
}

type GetJobScheduleCronjobCommandArgs struct {
	// List of arguments of this job.
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint pulumi.StringInput `pulumi:"entrypoint"`
}

func (GetJobScheduleCronjobCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleCronjobCommand)(nil)).Elem()
}

func (i GetJobScheduleCronjobCommandArgs) ToGetJobScheduleCronjobCommandOutput() GetJobScheduleCronjobCommandOutput {
	return i.ToGetJobScheduleCronjobCommandOutputWithContext(context.Background())
}

func (i GetJobScheduleCronjobCommandArgs) ToGetJobScheduleCronjobCommandOutputWithContext(ctx context.Context) GetJobScheduleCronjobCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobScheduleCronjobCommandOutput)
}

type GetJobScheduleCronjobCommandOutput struct{ *pulumi.OutputState }

func (GetJobScheduleCronjobCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleCronjobCommand)(nil)).Elem()
}

func (o GetJobScheduleCronjobCommandOutput) ToGetJobScheduleCronjobCommandOutput() GetJobScheduleCronjobCommandOutput {
	return o
}

func (o GetJobScheduleCronjobCommandOutput) ToGetJobScheduleCronjobCommandOutputWithContext(ctx context.Context) GetJobScheduleCronjobCommandOutput {
	return o
}

// List of arguments of this job.
func (o GetJobScheduleCronjobCommandOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetJobScheduleCronjobCommand) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o GetJobScheduleCronjobCommandOutput) Entrypoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobScheduleCronjobCommand) string { return v.Entrypoint }).(pulumi.StringOutput)
}

type GetJobScheduleOnDelete struct {
	// List of arguments of this job.
	Arguments []string `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint string `pulumi:"entrypoint"`
}

// GetJobScheduleOnDeleteInput is an input type that accepts GetJobScheduleOnDeleteArgs and GetJobScheduleOnDeleteOutput values.
// You can construct a concrete instance of `GetJobScheduleOnDeleteInput` via:
//
//	GetJobScheduleOnDeleteArgs{...}
type GetJobScheduleOnDeleteInput interface {
	pulumi.Input

	ToGetJobScheduleOnDeleteOutput() GetJobScheduleOnDeleteOutput
	ToGetJobScheduleOnDeleteOutputWithContext(context.Context) GetJobScheduleOnDeleteOutput
}

type GetJobScheduleOnDeleteArgs struct {
	// List of arguments of this job.
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint pulumi.StringInput `pulumi:"entrypoint"`
}

func (GetJobScheduleOnDeleteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleOnDelete)(nil)).Elem()
}

func (i GetJobScheduleOnDeleteArgs) ToGetJobScheduleOnDeleteOutput() GetJobScheduleOnDeleteOutput {
	return i.ToGetJobScheduleOnDeleteOutputWithContext(context.Background())
}

func (i GetJobScheduleOnDeleteArgs) ToGetJobScheduleOnDeleteOutputWithContext(ctx context.Context) GetJobScheduleOnDeleteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobScheduleOnDeleteOutput)
}

type GetJobScheduleOnDeleteOutput struct{ *pulumi.OutputState }

func (GetJobScheduleOnDeleteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleOnDelete)(nil)).Elem()
}

func (o GetJobScheduleOnDeleteOutput) ToGetJobScheduleOnDeleteOutput() GetJobScheduleOnDeleteOutput {
	return o
}

func (o GetJobScheduleOnDeleteOutput) ToGetJobScheduleOnDeleteOutputWithContext(ctx context.Context) GetJobScheduleOnDeleteOutput {
	return o
}

// List of arguments of this job.
func (o GetJobScheduleOnDeleteOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetJobScheduleOnDelete) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o GetJobScheduleOnDeleteOutput) Entrypoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobScheduleOnDelete) string { return v.Entrypoint }).(pulumi.StringOutput)
}

type GetJobScheduleOnStart struct {
	// List of arguments of this job.
	Arguments []string `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint string `pulumi:"entrypoint"`
}

// GetJobScheduleOnStartInput is an input type that accepts GetJobScheduleOnStartArgs and GetJobScheduleOnStartOutput values.
// You can construct a concrete instance of `GetJobScheduleOnStartInput` via:
//
//	GetJobScheduleOnStartArgs{...}
type GetJobScheduleOnStartInput interface {
	pulumi.Input

	ToGetJobScheduleOnStartOutput() GetJobScheduleOnStartOutput
	ToGetJobScheduleOnStartOutputWithContext(context.Context) GetJobScheduleOnStartOutput
}

type GetJobScheduleOnStartArgs struct {
	// List of arguments of this job.
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint pulumi.StringInput `pulumi:"entrypoint"`
}

func (GetJobScheduleOnStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleOnStart)(nil)).Elem()
}

func (i GetJobScheduleOnStartArgs) ToGetJobScheduleOnStartOutput() GetJobScheduleOnStartOutput {
	return i.ToGetJobScheduleOnStartOutputWithContext(context.Background())
}

func (i GetJobScheduleOnStartArgs) ToGetJobScheduleOnStartOutputWithContext(ctx context.Context) GetJobScheduleOnStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobScheduleOnStartOutput)
}

type GetJobScheduleOnStartOutput struct{ *pulumi.OutputState }

func (GetJobScheduleOnStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleOnStart)(nil)).Elem()
}

func (o GetJobScheduleOnStartOutput) ToGetJobScheduleOnStartOutput() GetJobScheduleOnStartOutput {
	return o
}

func (o GetJobScheduleOnStartOutput) ToGetJobScheduleOnStartOutputWithContext(ctx context.Context) GetJobScheduleOnStartOutput {
	return o
}

// List of arguments of this job.
func (o GetJobScheduleOnStartOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetJobScheduleOnStart) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o GetJobScheduleOnStartOutput) Entrypoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobScheduleOnStart) string { return v.Entrypoint }).(pulumi.StringOutput)
}

type GetJobScheduleOnStop struct {
	// List of arguments of this job.
	Arguments []string `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint string `pulumi:"entrypoint"`
}

// GetJobScheduleOnStopInput is an input type that accepts GetJobScheduleOnStopArgs and GetJobScheduleOnStopOutput values.
// You can construct a concrete instance of `GetJobScheduleOnStopInput` via:
//
//	GetJobScheduleOnStopArgs{...}
type GetJobScheduleOnStopInput interface {
	pulumi.Input

	ToGetJobScheduleOnStopOutput() GetJobScheduleOnStopOutput
	ToGetJobScheduleOnStopOutputWithContext(context.Context) GetJobScheduleOnStopOutput
}

type GetJobScheduleOnStopArgs struct {
	// List of arguments of this job.
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// Entrypoint of the job.
	Entrypoint pulumi.StringInput `pulumi:"entrypoint"`
}

func (GetJobScheduleOnStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleOnStop)(nil)).Elem()
}

func (i GetJobScheduleOnStopArgs) ToGetJobScheduleOnStopOutput() GetJobScheduleOnStopOutput {
	return i.ToGetJobScheduleOnStopOutputWithContext(context.Background())
}

func (i GetJobScheduleOnStopArgs) ToGetJobScheduleOnStopOutputWithContext(ctx context.Context) GetJobScheduleOnStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobScheduleOnStopOutput)
}

type GetJobScheduleOnStopOutput struct{ *pulumi.OutputState }

func (GetJobScheduleOnStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobScheduleOnStop)(nil)).Elem()
}

func (o GetJobScheduleOnStopOutput) ToGetJobScheduleOnStopOutput() GetJobScheduleOnStopOutput {
	return o
}

func (o GetJobScheduleOnStopOutput) ToGetJobScheduleOnStopOutputWithContext(ctx context.Context) GetJobScheduleOnStopOutput {
	return o
}

// List of arguments of this job.
func (o GetJobScheduleOnStopOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetJobScheduleOnStop) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Entrypoint of the job.
func (o GetJobScheduleOnStopOutput) Entrypoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobScheduleOnStop) string { return v.Entrypoint }).(pulumi.StringOutput)
}

type GetJobSecret struct {
	// Id of the secret.
	Id string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// GetJobSecretInput is an input type that accepts GetJobSecretArgs and GetJobSecretOutput values.
// You can construct a concrete instance of `GetJobSecretInput` via:
//
//	GetJobSecretArgs{...}
type GetJobSecretInput interface {
	pulumi.Input

	ToGetJobSecretOutput() GetJobSecretOutput
	ToGetJobSecretOutputWithContext(context.Context) GetJobSecretOutput
}

type GetJobSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetJobSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSecret)(nil)).Elem()
}

func (i GetJobSecretArgs) ToGetJobSecretOutput() GetJobSecretOutput {
	return i.ToGetJobSecretOutputWithContext(context.Background())
}

func (i GetJobSecretArgs) ToGetJobSecretOutputWithContext(ctx context.Context) GetJobSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSecretOutput)
}

// GetJobSecretArrayInput is an input type that accepts GetJobSecretArray and GetJobSecretArrayOutput values.
// You can construct a concrete instance of `GetJobSecretArrayInput` via:
//
//	GetJobSecretArray{ GetJobSecretArgs{...} }
type GetJobSecretArrayInput interface {
	pulumi.Input

	ToGetJobSecretArrayOutput() GetJobSecretArrayOutput
	ToGetJobSecretArrayOutputWithContext(context.Context) GetJobSecretArrayOutput
}

type GetJobSecretArray []GetJobSecretInput

func (GetJobSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobSecret)(nil)).Elem()
}

func (i GetJobSecretArray) ToGetJobSecretArrayOutput() GetJobSecretArrayOutput {
	return i.ToGetJobSecretArrayOutputWithContext(context.Background())
}

func (i GetJobSecretArray) ToGetJobSecretArrayOutputWithContext(ctx context.Context) GetJobSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSecretArrayOutput)
}

type GetJobSecretOutput struct{ *pulumi.OutputState }

func (GetJobSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSecret)(nil)).Elem()
}

func (o GetJobSecretOutput) ToGetJobSecretOutput() GetJobSecretOutput {
	return o
}

func (o GetJobSecretOutput) ToGetJobSecretOutputWithContext(ctx context.Context) GetJobSecretOutput {
	return o
}

// Id of the secret.
func (o GetJobSecretOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecret) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the secret.
func (o GetJobSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o GetJobSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecret) string { return v.Value }).(pulumi.StringOutput)
}

type GetJobSecretArrayOutput struct{ *pulumi.OutputState }

func (GetJobSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobSecret)(nil)).Elem()
}

func (o GetJobSecretArrayOutput) ToGetJobSecretArrayOutput() GetJobSecretArrayOutput {
	return o
}

func (o GetJobSecretArrayOutput) ToGetJobSecretArrayOutputWithContext(ctx context.Context) GetJobSecretArrayOutput {
	return o
}

func (o GetJobSecretArrayOutput) Index(i pulumi.IntInput) GetJobSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobSecret {
		return vs[0].([]GetJobSecret)[vs[1].(int)]
	}).(GetJobSecretOutput)
}

type GetJobSecretAlias struct {
	// Id of the secret alias.
	Id string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// GetJobSecretAliasInput is an input type that accepts GetJobSecretAliasArgs and GetJobSecretAliasOutput values.
// You can construct a concrete instance of `GetJobSecretAliasInput` via:
//
//	GetJobSecretAliasArgs{...}
type GetJobSecretAliasInput interface {
	pulumi.Input

	ToGetJobSecretAliasOutput() GetJobSecretAliasOutput
	ToGetJobSecretAliasOutputWithContext(context.Context) GetJobSecretAliasOutput
}

type GetJobSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetJobSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSecretAlias)(nil)).Elem()
}

func (i GetJobSecretAliasArgs) ToGetJobSecretAliasOutput() GetJobSecretAliasOutput {
	return i.ToGetJobSecretAliasOutputWithContext(context.Background())
}

func (i GetJobSecretAliasArgs) ToGetJobSecretAliasOutputWithContext(ctx context.Context) GetJobSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSecretAliasOutput)
}

// GetJobSecretAliasArrayInput is an input type that accepts GetJobSecretAliasArray and GetJobSecretAliasArrayOutput values.
// You can construct a concrete instance of `GetJobSecretAliasArrayInput` via:
//
//	GetJobSecretAliasArray{ GetJobSecretAliasArgs{...} }
type GetJobSecretAliasArrayInput interface {
	pulumi.Input

	ToGetJobSecretAliasArrayOutput() GetJobSecretAliasArrayOutput
	ToGetJobSecretAliasArrayOutputWithContext(context.Context) GetJobSecretAliasArrayOutput
}

type GetJobSecretAliasArray []GetJobSecretAliasInput

func (GetJobSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobSecretAlias)(nil)).Elem()
}

func (i GetJobSecretAliasArray) ToGetJobSecretAliasArrayOutput() GetJobSecretAliasArrayOutput {
	return i.ToGetJobSecretAliasArrayOutputWithContext(context.Background())
}

func (i GetJobSecretAliasArray) ToGetJobSecretAliasArrayOutputWithContext(ctx context.Context) GetJobSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSecretAliasArrayOutput)
}

type GetJobSecretAliasOutput struct{ *pulumi.OutputState }

func (GetJobSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSecretAlias)(nil)).Elem()
}

func (o GetJobSecretAliasOutput) ToGetJobSecretAliasOutput() GetJobSecretAliasOutput {
	return o
}

func (o GetJobSecretAliasOutput) ToGetJobSecretAliasOutputWithContext(ctx context.Context) GetJobSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o GetJobSecretAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecretAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret alias.
func (o GetJobSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o GetJobSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetJobSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (GetJobSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobSecretAlias)(nil)).Elem()
}

func (o GetJobSecretAliasArrayOutput) ToGetJobSecretAliasArrayOutput() GetJobSecretAliasArrayOutput {
	return o
}

func (o GetJobSecretAliasArrayOutput) ToGetJobSecretAliasArrayOutputWithContext(ctx context.Context) GetJobSecretAliasArrayOutput {
	return o
}

func (o GetJobSecretAliasArrayOutput) Index(i pulumi.IntInput) GetJobSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobSecretAlias {
		return vs[0].([]GetJobSecretAlias)[vs[1].(int)]
	}).(GetJobSecretAliasOutput)
}

type GetJobSecretOverride struct {
	// Id of the secret override.
	Id string `pulumi:"id"`
	// Name of the secret override.
	Key string `pulumi:"key"`
	// Value of the secret override.
	Value string `pulumi:"value"`
}

// GetJobSecretOverrideInput is an input type that accepts GetJobSecretOverrideArgs and GetJobSecretOverrideOutput values.
// You can construct a concrete instance of `GetJobSecretOverrideInput` via:
//
//	GetJobSecretOverrideArgs{...}
type GetJobSecretOverrideInput interface {
	pulumi.Input

	ToGetJobSecretOverrideOutput() GetJobSecretOverrideOutput
	ToGetJobSecretOverrideOutputWithContext(context.Context) GetJobSecretOverrideOutput
}

type GetJobSecretOverrideArgs struct {
	// Id of the secret override.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret override.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret override.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetJobSecretOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSecretOverride)(nil)).Elem()
}

func (i GetJobSecretOverrideArgs) ToGetJobSecretOverrideOutput() GetJobSecretOverrideOutput {
	return i.ToGetJobSecretOverrideOutputWithContext(context.Background())
}

func (i GetJobSecretOverrideArgs) ToGetJobSecretOverrideOutputWithContext(ctx context.Context) GetJobSecretOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSecretOverrideOutput)
}

// GetJobSecretOverrideArrayInput is an input type that accepts GetJobSecretOverrideArray and GetJobSecretOverrideArrayOutput values.
// You can construct a concrete instance of `GetJobSecretOverrideArrayInput` via:
//
//	GetJobSecretOverrideArray{ GetJobSecretOverrideArgs{...} }
type GetJobSecretOverrideArrayInput interface {
	pulumi.Input

	ToGetJobSecretOverrideArrayOutput() GetJobSecretOverrideArrayOutput
	ToGetJobSecretOverrideArrayOutputWithContext(context.Context) GetJobSecretOverrideArrayOutput
}

type GetJobSecretOverrideArray []GetJobSecretOverrideInput

func (GetJobSecretOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobSecretOverride)(nil)).Elem()
}

func (i GetJobSecretOverrideArray) ToGetJobSecretOverrideArrayOutput() GetJobSecretOverrideArrayOutput {
	return i.ToGetJobSecretOverrideArrayOutputWithContext(context.Background())
}

func (i GetJobSecretOverrideArray) ToGetJobSecretOverrideArrayOutputWithContext(ctx context.Context) GetJobSecretOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSecretOverrideArrayOutput)
}

type GetJobSecretOverrideOutput struct{ *pulumi.OutputState }

func (GetJobSecretOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSecretOverride)(nil)).Elem()
}

func (o GetJobSecretOverrideOutput) ToGetJobSecretOverrideOutput() GetJobSecretOverrideOutput {
	return o
}

func (o GetJobSecretOverrideOutput) ToGetJobSecretOverrideOutputWithContext(ctx context.Context) GetJobSecretOverrideOutput {
	return o
}

// Id of the secret override.
func (o GetJobSecretOverrideOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecretOverride) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret override.
func (o GetJobSecretOverrideOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecretOverride) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret override.
func (o GetJobSecretOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSecretOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GetJobSecretOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetJobSecretOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJobSecretOverride)(nil)).Elem()
}

func (o GetJobSecretOverrideArrayOutput) ToGetJobSecretOverrideArrayOutput() GetJobSecretOverrideArrayOutput {
	return o
}

func (o GetJobSecretOverrideArrayOutput) ToGetJobSecretOverrideArrayOutputWithContext(ctx context.Context) GetJobSecretOverrideArrayOutput {
	return o
}

func (o GetJobSecretOverrideArrayOutput) Index(i pulumi.IntInput) GetJobSecretOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJobSecretOverride {
		return vs[0].([]GetJobSecretOverride)[vs[1].(int)]
	}).(GetJobSecretOverrideOutput)
}

type GetJobSource struct {
	// Job's docker source.
	Docker GetJobSourceDocker `pulumi:"docker"`
	// Job's image source.
	Image GetJobSourceImage `pulumi:"image"`
}

// GetJobSourceInput is an input type that accepts GetJobSourceArgs and GetJobSourceOutput values.
// You can construct a concrete instance of `GetJobSourceInput` via:
//
//	GetJobSourceArgs{...}
type GetJobSourceInput interface {
	pulumi.Input

	ToGetJobSourceOutput() GetJobSourceOutput
	ToGetJobSourceOutputWithContext(context.Context) GetJobSourceOutput
}

type GetJobSourceArgs struct {
	// Job's docker source.
	Docker GetJobSourceDockerInput `pulumi:"docker"`
	// Job's image source.
	Image GetJobSourceImageInput `pulumi:"image"`
}

func (GetJobSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSource)(nil)).Elem()
}

func (i GetJobSourceArgs) ToGetJobSourceOutput() GetJobSourceOutput {
	return i.ToGetJobSourceOutputWithContext(context.Background())
}

func (i GetJobSourceArgs) ToGetJobSourceOutputWithContext(ctx context.Context) GetJobSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceOutput)
}

func (i GetJobSourceArgs) ToGetJobSourcePtrOutput() GetJobSourcePtrOutput {
	return i.ToGetJobSourcePtrOutputWithContext(context.Background())
}

func (i GetJobSourceArgs) ToGetJobSourcePtrOutputWithContext(ctx context.Context) GetJobSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceOutput).ToGetJobSourcePtrOutputWithContext(ctx)
}

// GetJobSourcePtrInput is an input type that accepts GetJobSourceArgs, GetJobSourcePtr and GetJobSourcePtrOutput values.
// You can construct a concrete instance of `GetJobSourcePtrInput` via:
//
//	        GetJobSourceArgs{...}
//
//	or:
//
//	        nil
type GetJobSourcePtrInput interface {
	pulumi.Input

	ToGetJobSourcePtrOutput() GetJobSourcePtrOutput
	ToGetJobSourcePtrOutputWithContext(context.Context) GetJobSourcePtrOutput
}

type getJobSourcePtrType GetJobSourceArgs

func GetJobSourcePtr(v *GetJobSourceArgs) GetJobSourcePtrInput {
	return (*getJobSourcePtrType)(v)
}

func (*getJobSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobSource)(nil)).Elem()
}

func (i *getJobSourcePtrType) ToGetJobSourcePtrOutput() GetJobSourcePtrOutput {
	return i.ToGetJobSourcePtrOutputWithContext(context.Background())
}

func (i *getJobSourcePtrType) ToGetJobSourcePtrOutputWithContext(ctx context.Context) GetJobSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourcePtrOutput)
}

type GetJobSourceOutput struct{ *pulumi.OutputState }

func (GetJobSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSource)(nil)).Elem()
}

func (o GetJobSourceOutput) ToGetJobSourceOutput() GetJobSourceOutput {
	return o
}

func (o GetJobSourceOutput) ToGetJobSourceOutputWithContext(ctx context.Context) GetJobSourceOutput {
	return o
}

func (o GetJobSourceOutput) ToGetJobSourcePtrOutput() GetJobSourcePtrOutput {
	return o.ToGetJobSourcePtrOutputWithContext(context.Background())
}

func (o GetJobSourceOutput) ToGetJobSourcePtrOutputWithContext(ctx context.Context) GetJobSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobSource) *GetJobSource {
		return &v
	}).(GetJobSourcePtrOutput)
}

// Job's docker source.
func (o GetJobSourceOutput) Docker() GetJobSourceDockerOutput {
	return o.ApplyT(func(v GetJobSource) GetJobSourceDocker { return v.Docker }).(GetJobSourceDockerOutput)
}

// Job's image source.
func (o GetJobSourceOutput) Image() GetJobSourceImageOutput {
	return o.ApplyT(func(v GetJobSource) GetJobSourceImage { return v.Image }).(GetJobSourceImageOutput)
}

type GetJobSourcePtrOutput struct{ *pulumi.OutputState }

func (GetJobSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobSource)(nil)).Elem()
}

func (o GetJobSourcePtrOutput) ToGetJobSourcePtrOutput() GetJobSourcePtrOutput {
	return o
}

func (o GetJobSourcePtrOutput) ToGetJobSourcePtrOutputWithContext(ctx context.Context) GetJobSourcePtrOutput {
	return o
}

func (o GetJobSourcePtrOutput) Elem() GetJobSourceOutput {
	return o.ApplyT(func(v *GetJobSource) GetJobSource {
		if v != nil {
			return *v
		}
		var ret GetJobSource
		return ret
	}).(GetJobSourceOutput)
}

// Job's docker source.
func (o GetJobSourcePtrOutput) Docker() GetJobSourceDockerPtrOutput {
	return o.ApplyT(func(v *GetJobSource) *GetJobSourceDocker {
		if v == nil {
			return nil
		}
		return &v.Docker
	}).(GetJobSourceDockerPtrOutput)
}

// Job's image source.
func (o GetJobSourcePtrOutput) Image() GetJobSourceImagePtrOutput {
	return o.ApplyT(func(v *GetJobSource) *GetJobSourceImage {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(GetJobSourceImagePtrOutput)
}

type GetJobSourceDocker struct {
	// Job's docker source dockerfile path.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// Job's docker source git repository.
	GitRepository GetJobSourceDockerGitRepository `pulumi:"gitRepository"`
}

// GetJobSourceDockerInput is an input type that accepts GetJobSourceDockerArgs and GetJobSourceDockerOutput values.
// You can construct a concrete instance of `GetJobSourceDockerInput` via:
//
//	GetJobSourceDockerArgs{...}
type GetJobSourceDockerInput interface {
	pulumi.Input

	ToGetJobSourceDockerOutput() GetJobSourceDockerOutput
	ToGetJobSourceDockerOutputWithContext(context.Context) GetJobSourceDockerOutput
}

type GetJobSourceDockerArgs struct {
	// Job's docker source dockerfile path.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// Job's docker source git repository.
	GitRepository GetJobSourceDockerGitRepositoryInput `pulumi:"gitRepository"`
}

func (GetJobSourceDockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSourceDocker)(nil)).Elem()
}

func (i GetJobSourceDockerArgs) ToGetJobSourceDockerOutput() GetJobSourceDockerOutput {
	return i.ToGetJobSourceDockerOutputWithContext(context.Background())
}

func (i GetJobSourceDockerArgs) ToGetJobSourceDockerOutputWithContext(ctx context.Context) GetJobSourceDockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceDockerOutput)
}

func (i GetJobSourceDockerArgs) ToGetJobSourceDockerPtrOutput() GetJobSourceDockerPtrOutput {
	return i.ToGetJobSourceDockerPtrOutputWithContext(context.Background())
}

func (i GetJobSourceDockerArgs) ToGetJobSourceDockerPtrOutputWithContext(ctx context.Context) GetJobSourceDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceDockerOutput).ToGetJobSourceDockerPtrOutputWithContext(ctx)
}

// GetJobSourceDockerPtrInput is an input type that accepts GetJobSourceDockerArgs, GetJobSourceDockerPtr and GetJobSourceDockerPtrOutput values.
// You can construct a concrete instance of `GetJobSourceDockerPtrInput` via:
//
//	        GetJobSourceDockerArgs{...}
//
//	or:
//
//	        nil
type GetJobSourceDockerPtrInput interface {
	pulumi.Input

	ToGetJobSourceDockerPtrOutput() GetJobSourceDockerPtrOutput
	ToGetJobSourceDockerPtrOutputWithContext(context.Context) GetJobSourceDockerPtrOutput
}

type getJobSourceDockerPtrType GetJobSourceDockerArgs

func GetJobSourceDockerPtr(v *GetJobSourceDockerArgs) GetJobSourceDockerPtrInput {
	return (*getJobSourceDockerPtrType)(v)
}

func (*getJobSourceDockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobSourceDocker)(nil)).Elem()
}

func (i *getJobSourceDockerPtrType) ToGetJobSourceDockerPtrOutput() GetJobSourceDockerPtrOutput {
	return i.ToGetJobSourceDockerPtrOutputWithContext(context.Background())
}

func (i *getJobSourceDockerPtrType) ToGetJobSourceDockerPtrOutputWithContext(ctx context.Context) GetJobSourceDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceDockerPtrOutput)
}

type GetJobSourceDockerOutput struct{ *pulumi.OutputState }

func (GetJobSourceDockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSourceDocker)(nil)).Elem()
}

func (o GetJobSourceDockerOutput) ToGetJobSourceDockerOutput() GetJobSourceDockerOutput {
	return o
}

func (o GetJobSourceDockerOutput) ToGetJobSourceDockerOutputWithContext(ctx context.Context) GetJobSourceDockerOutput {
	return o
}

func (o GetJobSourceDockerOutput) ToGetJobSourceDockerPtrOutput() GetJobSourceDockerPtrOutput {
	return o.ToGetJobSourceDockerPtrOutputWithContext(context.Background())
}

func (o GetJobSourceDockerOutput) ToGetJobSourceDockerPtrOutputWithContext(ctx context.Context) GetJobSourceDockerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobSourceDocker) *GetJobSourceDocker {
		return &v
	}).(GetJobSourceDockerPtrOutput)
}

// Job's docker source dockerfile path.
func (o GetJobSourceDockerOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobSourceDocker) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// Job's docker source git repository.
func (o GetJobSourceDockerOutput) GitRepository() GetJobSourceDockerGitRepositoryOutput {
	return o.ApplyT(func(v GetJobSourceDocker) GetJobSourceDockerGitRepository { return v.GitRepository }).(GetJobSourceDockerGitRepositoryOutput)
}

type GetJobSourceDockerPtrOutput struct{ *pulumi.OutputState }

func (GetJobSourceDockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobSourceDocker)(nil)).Elem()
}

func (o GetJobSourceDockerPtrOutput) ToGetJobSourceDockerPtrOutput() GetJobSourceDockerPtrOutput {
	return o
}

func (o GetJobSourceDockerPtrOutput) ToGetJobSourceDockerPtrOutputWithContext(ctx context.Context) GetJobSourceDockerPtrOutput {
	return o
}

func (o GetJobSourceDockerPtrOutput) Elem() GetJobSourceDockerOutput {
	return o.ApplyT(func(v *GetJobSourceDocker) GetJobSourceDocker {
		if v != nil {
			return *v
		}
		var ret GetJobSourceDocker
		return ret
	}).(GetJobSourceDockerOutput)
}

// Job's docker source dockerfile path.
func (o GetJobSourceDockerPtrOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobSourceDocker) *string {
		if v == nil {
			return nil
		}
		return v.DockerfilePath
	}).(pulumi.StringPtrOutput)
}

// Job's docker source git repository.
func (o GetJobSourceDockerPtrOutput) GitRepository() GetJobSourceDockerGitRepositoryPtrOutput {
	return o.ApplyT(func(v *GetJobSourceDocker) *GetJobSourceDockerGitRepository {
		if v == nil {
			return nil
		}
		return &v.GitRepository
	}).(GetJobSourceDockerGitRepositoryPtrOutput)
}

type GetJobSourceDockerGitRepository struct {
	// Job's docker source git repository branch.
	Branch string `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId *string `pulumi:"gitTokenId"`
	// Job's docker source git repository root path.
	RootPath string `pulumi:"rootPath"`
	// Job's docker source git repository URL.
	Url string `pulumi:"url"`
}

// GetJobSourceDockerGitRepositoryInput is an input type that accepts GetJobSourceDockerGitRepositoryArgs and GetJobSourceDockerGitRepositoryOutput values.
// You can construct a concrete instance of `GetJobSourceDockerGitRepositoryInput` via:
//
//	GetJobSourceDockerGitRepositoryArgs{...}
type GetJobSourceDockerGitRepositoryInput interface {
	pulumi.Input

	ToGetJobSourceDockerGitRepositoryOutput() GetJobSourceDockerGitRepositoryOutput
	ToGetJobSourceDockerGitRepositoryOutputWithContext(context.Context) GetJobSourceDockerGitRepositoryOutput
}

type GetJobSourceDockerGitRepositoryArgs struct {
	// Job's docker source git repository branch.
	Branch pulumi.StringInput `pulumi:"branch"`
	// The git token ID to be used
	GitTokenId pulumi.StringPtrInput `pulumi:"gitTokenId"`
	// Job's docker source git repository root path.
	RootPath pulumi.StringInput `pulumi:"rootPath"`
	// Job's docker source git repository URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetJobSourceDockerGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSourceDockerGitRepository)(nil)).Elem()
}

func (i GetJobSourceDockerGitRepositoryArgs) ToGetJobSourceDockerGitRepositoryOutput() GetJobSourceDockerGitRepositoryOutput {
	return i.ToGetJobSourceDockerGitRepositoryOutputWithContext(context.Background())
}

func (i GetJobSourceDockerGitRepositoryArgs) ToGetJobSourceDockerGitRepositoryOutputWithContext(ctx context.Context) GetJobSourceDockerGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceDockerGitRepositoryOutput)
}

func (i GetJobSourceDockerGitRepositoryArgs) ToGetJobSourceDockerGitRepositoryPtrOutput() GetJobSourceDockerGitRepositoryPtrOutput {
	return i.ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(context.Background())
}

func (i GetJobSourceDockerGitRepositoryArgs) ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(ctx context.Context) GetJobSourceDockerGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceDockerGitRepositoryOutput).ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(ctx)
}

// GetJobSourceDockerGitRepositoryPtrInput is an input type that accepts GetJobSourceDockerGitRepositoryArgs, GetJobSourceDockerGitRepositoryPtr and GetJobSourceDockerGitRepositoryPtrOutput values.
// You can construct a concrete instance of `GetJobSourceDockerGitRepositoryPtrInput` via:
//
//	        GetJobSourceDockerGitRepositoryArgs{...}
//
//	or:
//
//	        nil
type GetJobSourceDockerGitRepositoryPtrInput interface {
	pulumi.Input

	ToGetJobSourceDockerGitRepositoryPtrOutput() GetJobSourceDockerGitRepositoryPtrOutput
	ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(context.Context) GetJobSourceDockerGitRepositoryPtrOutput
}

type getJobSourceDockerGitRepositoryPtrType GetJobSourceDockerGitRepositoryArgs

func GetJobSourceDockerGitRepositoryPtr(v *GetJobSourceDockerGitRepositoryArgs) GetJobSourceDockerGitRepositoryPtrInput {
	return (*getJobSourceDockerGitRepositoryPtrType)(v)
}

func (*getJobSourceDockerGitRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobSourceDockerGitRepository)(nil)).Elem()
}

func (i *getJobSourceDockerGitRepositoryPtrType) ToGetJobSourceDockerGitRepositoryPtrOutput() GetJobSourceDockerGitRepositoryPtrOutput {
	return i.ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(context.Background())
}

func (i *getJobSourceDockerGitRepositoryPtrType) ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(ctx context.Context) GetJobSourceDockerGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceDockerGitRepositoryPtrOutput)
}

type GetJobSourceDockerGitRepositoryOutput struct{ *pulumi.OutputState }

func (GetJobSourceDockerGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSourceDockerGitRepository)(nil)).Elem()
}

func (o GetJobSourceDockerGitRepositoryOutput) ToGetJobSourceDockerGitRepositoryOutput() GetJobSourceDockerGitRepositoryOutput {
	return o
}

func (o GetJobSourceDockerGitRepositoryOutput) ToGetJobSourceDockerGitRepositoryOutputWithContext(ctx context.Context) GetJobSourceDockerGitRepositoryOutput {
	return o
}

func (o GetJobSourceDockerGitRepositoryOutput) ToGetJobSourceDockerGitRepositoryPtrOutput() GetJobSourceDockerGitRepositoryPtrOutput {
	return o.ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(context.Background())
}

func (o GetJobSourceDockerGitRepositoryOutput) ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(ctx context.Context) GetJobSourceDockerGitRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobSourceDockerGitRepository) *GetJobSourceDockerGitRepository {
		return &v
	}).(GetJobSourceDockerGitRepositoryPtrOutput)
}

// Job's docker source git repository branch.
func (o GetJobSourceDockerGitRepositoryOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSourceDockerGitRepository) string { return v.Branch }).(pulumi.StringOutput)
}

// The git token ID to be used
func (o GetJobSourceDockerGitRepositoryOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetJobSourceDockerGitRepository) *string { return v.GitTokenId }).(pulumi.StringPtrOutput)
}

// Job's docker source git repository root path.
func (o GetJobSourceDockerGitRepositoryOutput) RootPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSourceDockerGitRepository) string { return v.RootPath }).(pulumi.StringOutput)
}

// Job's docker source git repository URL.
func (o GetJobSourceDockerGitRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSourceDockerGitRepository) string { return v.Url }).(pulumi.StringOutput)
}

type GetJobSourceDockerGitRepositoryPtrOutput struct{ *pulumi.OutputState }

func (GetJobSourceDockerGitRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobSourceDockerGitRepository)(nil)).Elem()
}

func (o GetJobSourceDockerGitRepositoryPtrOutput) ToGetJobSourceDockerGitRepositoryPtrOutput() GetJobSourceDockerGitRepositoryPtrOutput {
	return o
}

func (o GetJobSourceDockerGitRepositoryPtrOutput) ToGetJobSourceDockerGitRepositoryPtrOutputWithContext(ctx context.Context) GetJobSourceDockerGitRepositoryPtrOutput {
	return o
}

func (o GetJobSourceDockerGitRepositoryPtrOutput) Elem() GetJobSourceDockerGitRepositoryOutput {
	return o.ApplyT(func(v *GetJobSourceDockerGitRepository) GetJobSourceDockerGitRepository {
		if v != nil {
			return *v
		}
		var ret GetJobSourceDockerGitRepository
		return ret
	}).(GetJobSourceDockerGitRepositoryOutput)
}

// Job's docker source git repository branch.
func (o GetJobSourceDockerGitRepositoryPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobSourceDockerGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

// The git token ID to be used
func (o GetJobSourceDockerGitRepositoryPtrOutput) GitTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobSourceDockerGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.GitTokenId
	}).(pulumi.StringPtrOutput)
}

// Job's docker source git repository root path.
func (o GetJobSourceDockerGitRepositoryPtrOutput) RootPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobSourceDockerGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.RootPath
	}).(pulumi.StringPtrOutput)
}

// Job's docker source git repository URL.
func (o GetJobSourceDockerGitRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobSourceDockerGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetJobSourceImage struct {
	// Job's image source name.
	Name string `pulumi:"name"`
	// Job's image source registry ID.
	RegistryId string `pulumi:"registryId"`
	// Job's image source tag.
	Tag string `pulumi:"tag"`
}

// GetJobSourceImageInput is an input type that accepts GetJobSourceImageArgs and GetJobSourceImageOutput values.
// You can construct a concrete instance of `GetJobSourceImageInput` via:
//
//	GetJobSourceImageArgs{...}
type GetJobSourceImageInput interface {
	pulumi.Input

	ToGetJobSourceImageOutput() GetJobSourceImageOutput
	ToGetJobSourceImageOutputWithContext(context.Context) GetJobSourceImageOutput
}

type GetJobSourceImageArgs struct {
	// Job's image source name.
	Name pulumi.StringInput `pulumi:"name"`
	// Job's image source registry ID.
	RegistryId pulumi.StringInput `pulumi:"registryId"`
	// Job's image source tag.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetJobSourceImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSourceImage)(nil)).Elem()
}

func (i GetJobSourceImageArgs) ToGetJobSourceImageOutput() GetJobSourceImageOutput {
	return i.ToGetJobSourceImageOutputWithContext(context.Background())
}

func (i GetJobSourceImageArgs) ToGetJobSourceImageOutputWithContext(ctx context.Context) GetJobSourceImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceImageOutput)
}

func (i GetJobSourceImageArgs) ToGetJobSourceImagePtrOutput() GetJobSourceImagePtrOutput {
	return i.ToGetJobSourceImagePtrOutputWithContext(context.Background())
}

func (i GetJobSourceImageArgs) ToGetJobSourceImagePtrOutputWithContext(ctx context.Context) GetJobSourceImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceImageOutput).ToGetJobSourceImagePtrOutputWithContext(ctx)
}

// GetJobSourceImagePtrInput is an input type that accepts GetJobSourceImageArgs, GetJobSourceImagePtr and GetJobSourceImagePtrOutput values.
// You can construct a concrete instance of `GetJobSourceImagePtrInput` via:
//
//	        GetJobSourceImageArgs{...}
//
//	or:
//
//	        nil
type GetJobSourceImagePtrInput interface {
	pulumi.Input

	ToGetJobSourceImagePtrOutput() GetJobSourceImagePtrOutput
	ToGetJobSourceImagePtrOutputWithContext(context.Context) GetJobSourceImagePtrOutput
}

type getJobSourceImagePtrType GetJobSourceImageArgs

func GetJobSourceImagePtr(v *GetJobSourceImageArgs) GetJobSourceImagePtrInput {
	return (*getJobSourceImagePtrType)(v)
}

func (*getJobSourceImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobSourceImage)(nil)).Elem()
}

func (i *getJobSourceImagePtrType) ToGetJobSourceImagePtrOutput() GetJobSourceImagePtrOutput {
	return i.ToGetJobSourceImagePtrOutputWithContext(context.Background())
}

func (i *getJobSourceImagePtrType) ToGetJobSourceImagePtrOutputWithContext(ctx context.Context) GetJobSourceImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJobSourceImagePtrOutput)
}

type GetJobSourceImageOutput struct{ *pulumi.OutputState }

func (GetJobSourceImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobSourceImage)(nil)).Elem()
}

func (o GetJobSourceImageOutput) ToGetJobSourceImageOutput() GetJobSourceImageOutput {
	return o
}

func (o GetJobSourceImageOutput) ToGetJobSourceImageOutputWithContext(ctx context.Context) GetJobSourceImageOutput {
	return o
}

func (o GetJobSourceImageOutput) ToGetJobSourceImagePtrOutput() GetJobSourceImagePtrOutput {
	return o.ToGetJobSourceImagePtrOutputWithContext(context.Background())
}

func (o GetJobSourceImageOutput) ToGetJobSourceImagePtrOutputWithContext(ctx context.Context) GetJobSourceImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetJobSourceImage) *GetJobSourceImage {
		return &v
	}).(GetJobSourceImagePtrOutput)
}

// Job's image source name.
func (o GetJobSourceImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSourceImage) string { return v.Name }).(pulumi.StringOutput)
}

// Job's image source registry ID.
func (o GetJobSourceImageOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSourceImage) string { return v.RegistryId }).(pulumi.StringOutput)
}

// Job's image source tag.
func (o GetJobSourceImageOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobSourceImage) string { return v.Tag }).(pulumi.StringOutput)
}

type GetJobSourceImagePtrOutput struct{ *pulumi.OutputState }

func (GetJobSourceImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetJobSourceImage)(nil)).Elem()
}

func (o GetJobSourceImagePtrOutput) ToGetJobSourceImagePtrOutput() GetJobSourceImagePtrOutput {
	return o
}

func (o GetJobSourceImagePtrOutput) ToGetJobSourceImagePtrOutputWithContext(ctx context.Context) GetJobSourceImagePtrOutput {
	return o
}

func (o GetJobSourceImagePtrOutput) Elem() GetJobSourceImageOutput {
	return o.ApplyT(func(v *GetJobSourceImage) GetJobSourceImage {
		if v != nil {
			return *v
		}
		var ret GetJobSourceImage
		return ret
	}).(GetJobSourceImageOutput)
}

// Job's image source name.
func (o GetJobSourceImagePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobSourceImage) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Job's image source registry ID.
func (o GetJobSourceImagePtrOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobSourceImage) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryId
	}).(pulumi.StringPtrOutput)
}

// Job's image source tag.
func (o GetJobSourceImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetJobSourceImage) *string {
		if v == nil {
			return nil
		}
		return &v.Tag
	}).(pulumi.StringPtrOutput)
}

type GetProjectBuiltInEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetProjectBuiltInEnvironmentVariableInput is an input type that accepts GetProjectBuiltInEnvironmentVariableArgs and GetProjectBuiltInEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetProjectBuiltInEnvironmentVariableInput` via:
//
//	GetProjectBuiltInEnvironmentVariableArgs{...}
type GetProjectBuiltInEnvironmentVariableInput interface {
	pulumi.Input

	ToGetProjectBuiltInEnvironmentVariableOutput() GetProjectBuiltInEnvironmentVariableOutput
	ToGetProjectBuiltInEnvironmentVariableOutputWithContext(context.Context) GetProjectBuiltInEnvironmentVariableOutput
}

type GetProjectBuiltInEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectBuiltInEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetProjectBuiltInEnvironmentVariableArgs) ToGetProjectBuiltInEnvironmentVariableOutput() GetProjectBuiltInEnvironmentVariableOutput {
	return i.ToGetProjectBuiltInEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetProjectBuiltInEnvironmentVariableArgs) ToGetProjectBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetProjectBuiltInEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectBuiltInEnvironmentVariableOutput)
}

// GetProjectBuiltInEnvironmentVariableArrayInput is an input type that accepts GetProjectBuiltInEnvironmentVariableArray and GetProjectBuiltInEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetProjectBuiltInEnvironmentVariableArrayInput` via:
//
//	GetProjectBuiltInEnvironmentVariableArray{ GetProjectBuiltInEnvironmentVariableArgs{...} }
type GetProjectBuiltInEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetProjectBuiltInEnvironmentVariableArrayOutput() GetProjectBuiltInEnvironmentVariableArrayOutput
	ToGetProjectBuiltInEnvironmentVariableArrayOutputWithContext(context.Context) GetProjectBuiltInEnvironmentVariableArrayOutput
}

type GetProjectBuiltInEnvironmentVariableArray []GetProjectBuiltInEnvironmentVariableInput

func (GetProjectBuiltInEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectBuiltInEnvironmentVariable)(nil)).Elem()
}

func (i GetProjectBuiltInEnvironmentVariableArray) ToGetProjectBuiltInEnvironmentVariableArrayOutput() GetProjectBuiltInEnvironmentVariableArrayOutput {
	return i.ToGetProjectBuiltInEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetProjectBuiltInEnvironmentVariableArray) ToGetProjectBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetProjectBuiltInEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectBuiltInEnvironmentVariableArrayOutput)
}

type GetProjectBuiltInEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetProjectBuiltInEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetProjectBuiltInEnvironmentVariableOutput) ToGetProjectBuiltInEnvironmentVariableOutput() GetProjectBuiltInEnvironmentVariableOutput {
	return o
}

func (o GetProjectBuiltInEnvironmentVariableOutput) ToGetProjectBuiltInEnvironmentVariableOutputWithContext(ctx context.Context) GetProjectBuiltInEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetProjectBuiltInEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectBuiltInEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetProjectBuiltInEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectBuiltInEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetProjectBuiltInEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectBuiltInEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectBuiltInEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetProjectBuiltInEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectBuiltInEnvironmentVariable)(nil)).Elem()
}

func (o GetProjectBuiltInEnvironmentVariableArrayOutput) ToGetProjectBuiltInEnvironmentVariableArrayOutput() GetProjectBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetProjectBuiltInEnvironmentVariableArrayOutput) ToGetProjectBuiltInEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetProjectBuiltInEnvironmentVariableArrayOutput {
	return o
}

func (o GetProjectBuiltInEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetProjectBuiltInEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectBuiltInEnvironmentVariable {
		return vs[0].([]GetProjectBuiltInEnvironmentVariable)[vs[1].(int)]
	}).(GetProjectBuiltInEnvironmentVariableOutput)
}

type GetProjectEnvironmentVariable struct {
	// Id of the environment variable.
	Id string `pulumi:"id"`
	// Key of the environment variable.
	Key string `pulumi:"key"`
	// Value of the environment variable.
	Value string `pulumi:"value"`
}

// GetProjectEnvironmentVariableInput is an input type that accepts GetProjectEnvironmentVariableArgs and GetProjectEnvironmentVariableOutput values.
// You can construct a concrete instance of `GetProjectEnvironmentVariableInput` via:
//
//	GetProjectEnvironmentVariableArgs{...}
type GetProjectEnvironmentVariableInput interface {
	pulumi.Input

	ToGetProjectEnvironmentVariableOutput() GetProjectEnvironmentVariableOutput
	ToGetProjectEnvironmentVariableOutputWithContext(context.Context) GetProjectEnvironmentVariableOutput
}

type GetProjectEnvironmentVariableArgs struct {
	// Id of the environment variable.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectEnvironmentVariable)(nil)).Elem()
}

func (i GetProjectEnvironmentVariableArgs) ToGetProjectEnvironmentVariableOutput() GetProjectEnvironmentVariableOutput {
	return i.ToGetProjectEnvironmentVariableOutputWithContext(context.Background())
}

func (i GetProjectEnvironmentVariableArgs) ToGetProjectEnvironmentVariableOutputWithContext(ctx context.Context) GetProjectEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectEnvironmentVariableOutput)
}

// GetProjectEnvironmentVariableArrayInput is an input type that accepts GetProjectEnvironmentVariableArray and GetProjectEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `GetProjectEnvironmentVariableArrayInput` via:
//
//	GetProjectEnvironmentVariableArray{ GetProjectEnvironmentVariableArgs{...} }
type GetProjectEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToGetProjectEnvironmentVariableArrayOutput() GetProjectEnvironmentVariableArrayOutput
	ToGetProjectEnvironmentVariableArrayOutputWithContext(context.Context) GetProjectEnvironmentVariableArrayOutput
}

type GetProjectEnvironmentVariableArray []GetProjectEnvironmentVariableInput

func (GetProjectEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectEnvironmentVariable)(nil)).Elem()
}

func (i GetProjectEnvironmentVariableArray) ToGetProjectEnvironmentVariableArrayOutput() GetProjectEnvironmentVariableArrayOutput {
	return i.ToGetProjectEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i GetProjectEnvironmentVariableArray) ToGetProjectEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetProjectEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectEnvironmentVariableArrayOutput)
}

type GetProjectEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (GetProjectEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectEnvironmentVariable)(nil)).Elem()
}

func (o GetProjectEnvironmentVariableOutput) ToGetProjectEnvironmentVariableOutput() GetProjectEnvironmentVariableOutput {
	return o
}

func (o GetProjectEnvironmentVariableOutput) ToGetProjectEnvironmentVariableOutputWithContext(ctx context.Context) GetProjectEnvironmentVariableOutput {
	return o
}

// Id of the environment variable.
func (o GetProjectEnvironmentVariableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironmentVariable) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the environment variable.
func (o GetProjectEnvironmentVariableOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironmentVariable) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the environment variable.
func (o GetProjectEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (GetProjectEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectEnvironmentVariable)(nil)).Elem()
}

func (o GetProjectEnvironmentVariableArrayOutput) ToGetProjectEnvironmentVariableArrayOutput() GetProjectEnvironmentVariableArrayOutput {
	return o
}

func (o GetProjectEnvironmentVariableArrayOutput) ToGetProjectEnvironmentVariableArrayOutputWithContext(ctx context.Context) GetProjectEnvironmentVariableArrayOutput {
	return o
}

func (o GetProjectEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) GetProjectEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectEnvironmentVariable {
		return vs[0].([]GetProjectEnvironmentVariable)[vs[1].(int)]
	}).(GetProjectEnvironmentVariableOutput)
}

type GetProjectEnvironmentVariableAlias struct {
	// Id of the environment variable alias.
	Id string `pulumi:"id"`
	// Name of the environment variable alias.
	Key string `pulumi:"key"`
	// Name of the variable to alias.
	Value string `pulumi:"value"`
}

// GetProjectEnvironmentVariableAliasInput is an input type that accepts GetProjectEnvironmentVariableAliasArgs and GetProjectEnvironmentVariableAliasOutput values.
// You can construct a concrete instance of `GetProjectEnvironmentVariableAliasInput` via:
//
//	GetProjectEnvironmentVariableAliasArgs{...}
type GetProjectEnvironmentVariableAliasInput interface {
	pulumi.Input

	ToGetProjectEnvironmentVariableAliasOutput() GetProjectEnvironmentVariableAliasOutput
	ToGetProjectEnvironmentVariableAliasOutputWithContext(context.Context) GetProjectEnvironmentVariableAliasOutput
}

type GetProjectEnvironmentVariableAliasArgs struct {
	// Id of the environment variable alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the environment variable alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the variable to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectEnvironmentVariableAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetProjectEnvironmentVariableAliasArgs) ToGetProjectEnvironmentVariableAliasOutput() GetProjectEnvironmentVariableAliasOutput {
	return i.ToGetProjectEnvironmentVariableAliasOutputWithContext(context.Background())
}

func (i GetProjectEnvironmentVariableAliasArgs) ToGetProjectEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetProjectEnvironmentVariableAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectEnvironmentVariableAliasOutput)
}

// GetProjectEnvironmentVariableAliasArrayInput is an input type that accepts GetProjectEnvironmentVariableAliasArray and GetProjectEnvironmentVariableAliasArrayOutput values.
// You can construct a concrete instance of `GetProjectEnvironmentVariableAliasArrayInput` via:
//
//	GetProjectEnvironmentVariableAliasArray{ GetProjectEnvironmentVariableAliasArgs{...} }
type GetProjectEnvironmentVariableAliasArrayInput interface {
	pulumi.Input

	ToGetProjectEnvironmentVariableAliasArrayOutput() GetProjectEnvironmentVariableAliasArrayOutput
	ToGetProjectEnvironmentVariableAliasArrayOutputWithContext(context.Context) GetProjectEnvironmentVariableAliasArrayOutput
}

type GetProjectEnvironmentVariableAliasArray []GetProjectEnvironmentVariableAliasInput

func (GetProjectEnvironmentVariableAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectEnvironmentVariableAlias)(nil)).Elem()
}

func (i GetProjectEnvironmentVariableAliasArray) ToGetProjectEnvironmentVariableAliasArrayOutput() GetProjectEnvironmentVariableAliasArrayOutput {
	return i.ToGetProjectEnvironmentVariableAliasArrayOutputWithContext(context.Background())
}

func (i GetProjectEnvironmentVariableAliasArray) ToGetProjectEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetProjectEnvironmentVariableAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectEnvironmentVariableAliasArrayOutput)
}

type GetProjectEnvironmentVariableAliasOutput struct{ *pulumi.OutputState }

func (GetProjectEnvironmentVariableAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetProjectEnvironmentVariableAliasOutput) ToGetProjectEnvironmentVariableAliasOutput() GetProjectEnvironmentVariableAliasOutput {
	return o
}

func (o GetProjectEnvironmentVariableAliasOutput) ToGetProjectEnvironmentVariableAliasOutputWithContext(ctx context.Context) GetProjectEnvironmentVariableAliasOutput {
	return o
}

// Id of the environment variable alias.
func (o GetProjectEnvironmentVariableAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironmentVariableAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the environment variable alias.
func (o GetProjectEnvironmentVariableAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironmentVariableAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the variable to alias.
func (o GetProjectEnvironmentVariableAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectEnvironmentVariableAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectEnvironmentVariableAliasArrayOutput struct{ *pulumi.OutputState }

func (GetProjectEnvironmentVariableAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectEnvironmentVariableAlias)(nil)).Elem()
}

func (o GetProjectEnvironmentVariableAliasArrayOutput) ToGetProjectEnvironmentVariableAliasArrayOutput() GetProjectEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetProjectEnvironmentVariableAliasArrayOutput) ToGetProjectEnvironmentVariableAliasArrayOutputWithContext(ctx context.Context) GetProjectEnvironmentVariableAliasArrayOutput {
	return o
}

func (o GetProjectEnvironmentVariableAliasArrayOutput) Index(i pulumi.IntInput) GetProjectEnvironmentVariableAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectEnvironmentVariableAlias {
		return vs[0].([]GetProjectEnvironmentVariableAlias)[vs[1].(int)]
	}).(GetProjectEnvironmentVariableAliasOutput)
}

type GetProjectSecret struct {
	// Id of the secret.
	Id string `pulumi:"id"`
	// Key of the secret.
	Key string `pulumi:"key"`
	// Value of the secret.
	Value string `pulumi:"value"`
}

// GetProjectSecretInput is an input type that accepts GetProjectSecretArgs and GetProjectSecretOutput values.
// You can construct a concrete instance of `GetProjectSecretInput` via:
//
//	GetProjectSecretArgs{...}
type GetProjectSecretInput interface {
	pulumi.Input

	ToGetProjectSecretOutput() GetProjectSecretOutput
	ToGetProjectSecretOutputWithContext(context.Context) GetProjectSecretOutput
}

type GetProjectSecretArgs struct {
	// Id of the secret.
	Id pulumi.StringInput `pulumi:"id"`
	// Key of the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of the secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecret)(nil)).Elem()
}

func (i GetProjectSecretArgs) ToGetProjectSecretOutput() GetProjectSecretOutput {
	return i.ToGetProjectSecretOutputWithContext(context.Background())
}

func (i GetProjectSecretArgs) ToGetProjectSecretOutputWithContext(ctx context.Context) GetProjectSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecretOutput)
}

// GetProjectSecretArrayInput is an input type that accepts GetProjectSecretArray and GetProjectSecretArrayOutput values.
// You can construct a concrete instance of `GetProjectSecretArrayInput` via:
//
//	GetProjectSecretArray{ GetProjectSecretArgs{...} }
type GetProjectSecretArrayInput interface {
	pulumi.Input

	ToGetProjectSecretArrayOutput() GetProjectSecretArrayOutput
	ToGetProjectSecretArrayOutputWithContext(context.Context) GetProjectSecretArrayOutput
}

type GetProjectSecretArray []GetProjectSecretInput

func (GetProjectSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecret)(nil)).Elem()
}

func (i GetProjectSecretArray) ToGetProjectSecretArrayOutput() GetProjectSecretArrayOutput {
	return i.ToGetProjectSecretArrayOutputWithContext(context.Background())
}

func (i GetProjectSecretArray) ToGetProjectSecretArrayOutputWithContext(ctx context.Context) GetProjectSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecretArrayOutput)
}

type GetProjectSecretOutput struct{ *pulumi.OutputState }

func (GetProjectSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecret)(nil)).Elem()
}

func (o GetProjectSecretOutput) ToGetProjectSecretOutput() GetProjectSecretOutput {
	return o
}

func (o GetProjectSecretOutput) ToGetProjectSecretOutputWithContext(ctx context.Context) GetProjectSecretOutput {
	return o
}

// Id of the secret.
func (o GetProjectSecretOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecret) string { return v.Id }).(pulumi.StringOutput)
}

// Key of the secret.
func (o GetProjectSecretOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecret) string { return v.Key }).(pulumi.StringOutput)
}

// Value of the secret.
func (o GetProjectSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecret) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectSecretArrayOutput struct{ *pulumi.OutputState }

func (GetProjectSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecret)(nil)).Elem()
}

func (o GetProjectSecretArrayOutput) ToGetProjectSecretArrayOutput() GetProjectSecretArrayOutput {
	return o
}

func (o GetProjectSecretArrayOutput) ToGetProjectSecretArrayOutputWithContext(ctx context.Context) GetProjectSecretArrayOutput {
	return o
}

func (o GetProjectSecretArrayOutput) Index(i pulumi.IntInput) GetProjectSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectSecret {
		return vs[0].([]GetProjectSecret)[vs[1].(int)]
	}).(GetProjectSecretOutput)
}

type GetProjectSecretAlias struct {
	// Id of the secret alias.
	Id string `pulumi:"id"`
	// Name of the secret alias.
	Key string `pulumi:"key"`
	// Name of the secret to alias.
	Value string `pulumi:"value"`
}

// GetProjectSecretAliasInput is an input type that accepts GetProjectSecretAliasArgs and GetProjectSecretAliasOutput values.
// You can construct a concrete instance of `GetProjectSecretAliasInput` via:
//
//	GetProjectSecretAliasArgs{...}
type GetProjectSecretAliasInput interface {
	pulumi.Input

	ToGetProjectSecretAliasOutput() GetProjectSecretAliasOutput
	ToGetProjectSecretAliasOutputWithContext(context.Context) GetProjectSecretAliasOutput
}

type GetProjectSecretAliasArgs struct {
	// Id of the secret alias.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the secret alias.
	Key pulumi.StringInput `pulumi:"key"`
	// Name of the secret to alias.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProjectSecretAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecretAlias)(nil)).Elem()
}

func (i GetProjectSecretAliasArgs) ToGetProjectSecretAliasOutput() GetProjectSecretAliasOutput {
	return i.ToGetProjectSecretAliasOutputWithContext(context.Background())
}

func (i GetProjectSecretAliasArgs) ToGetProjectSecretAliasOutputWithContext(ctx context.Context) GetProjectSecretAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecretAliasOutput)
}

// GetProjectSecretAliasArrayInput is an input type that accepts GetProjectSecretAliasArray and GetProjectSecretAliasArrayOutput values.
// You can construct a concrete instance of `GetProjectSecretAliasArrayInput` via:
//
//	GetProjectSecretAliasArray{ GetProjectSecretAliasArgs{...} }
type GetProjectSecretAliasArrayInput interface {
	pulumi.Input

	ToGetProjectSecretAliasArrayOutput() GetProjectSecretAliasArrayOutput
	ToGetProjectSecretAliasArrayOutputWithContext(context.Context) GetProjectSecretAliasArrayOutput
}

type GetProjectSecretAliasArray []GetProjectSecretAliasInput

func (GetProjectSecretAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecretAlias)(nil)).Elem()
}

func (i GetProjectSecretAliasArray) ToGetProjectSecretAliasArrayOutput() GetProjectSecretAliasArrayOutput {
	return i.ToGetProjectSecretAliasArrayOutputWithContext(context.Background())
}

func (i GetProjectSecretAliasArray) ToGetProjectSecretAliasArrayOutputWithContext(ctx context.Context) GetProjectSecretAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectSecretAliasArrayOutput)
}

type GetProjectSecretAliasOutput struct{ *pulumi.OutputState }

func (GetProjectSecretAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectSecretAlias)(nil)).Elem()
}

func (o GetProjectSecretAliasOutput) ToGetProjectSecretAliasOutput() GetProjectSecretAliasOutput {
	return o
}

func (o GetProjectSecretAliasOutput) ToGetProjectSecretAliasOutputWithContext(ctx context.Context) GetProjectSecretAliasOutput {
	return o
}

// Id of the secret alias.
func (o GetProjectSecretAliasOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecretAlias) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the secret alias.
func (o GetProjectSecretAliasOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecretAlias) string { return v.Key }).(pulumi.StringOutput)
}

// Name of the secret to alias.
func (o GetProjectSecretAliasOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectSecretAlias) string { return v.Value }).(pulumi.StringOutput)
}

type GetProjectSecretAliasArrayOutput struct{ *pulumi.OutputState }

func (GetProjectSecretAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectSecretAlias)(nil)).Elem()
}

func (o GetProjectSecretAliasArrayOutput) ToGetProjectSecretAliasArrayOutput() GetProjectSecretAliasArrayOutput {
	return o
}

func (o GetProjectSecretAliasArrayOutput) ToGetProjectSecretAliasArrayOutputWithContext(ctx context.Context) GetProjectSecretAliasArrayOutput {
	return o
}

func (o GetProjectSecretAliasArrayOutput) Index(i pulumi.IntInput) GetProjectSecretAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectSecretAlias {
		return vs[0].([]GetProjectSecretAlias)[vs[1].(int)]
	}).(GetProjectSecretAliasOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationBuiltInEnvironmentVariableInput)(nil)).Elem(), ApplicationBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), ApplicationBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationCustomDomainInput)(nil)).Elem(), ApplicationCustomDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationCustomDomainArrayInput)(nil)).Elem(), ApplicationCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationDeploymentRestrictionInput)(nil)).Elem(), ApplicationDeploymentRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationDeploymentRestrictionArrayInput)(nil)).Elem(), ApplicationDeploymentRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentVariableInput)(nil)).Elem(), ApplicationEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentVariableArrayInput)(nil)).Elem(), ApplicationEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentVariableAliasInput)(nil)).Elem(), ApplicationEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentVariableAliasArrayInput)(nil)).Elem(), ApplicationEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentVariableOverrideInput)(nil)).Elem(), ApplicationEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentVariableOverrideArrayInput)(nil)).Elem(), ApplicationEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGitRepositoryInput)(nil)).Elem(), ApplicationGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGitRepositoryPtrInput)(nil)).Elem(), ApplicationGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksInput)(nil)).Elem(), ApplicationHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksPtrInput)(nil)).Elem(), ApplicationHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbePtrInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypePtrInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeExecInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeExecPtrInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeGrpcInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeGrpcPtrInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeHttpInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeHttpPtrInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeTcpInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksLivenessProbeTypeTcpPtrInput)(nil)).Elem(), ApplicationHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbePtrInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypePtrInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeExecInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeExecPtrInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeGrpcInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeGrpcPtrInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeHttpInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeHttpPtrInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeTcpInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationHealthchecksReadinessProbeTypeTcpPtrInput)(nil)).Elem(), ApplicationHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPortInput)(nil)).Elem(), ApplicationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPortArrayInput)(nil)).Elem(), ApplicationPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSecretInput)(nil)).Elem(), ApplicationSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSecretArrayInput)(nil)).Elem(), ApplicationSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSecretAliasInput)(nil)).Elem(), ApplicationSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSecretAliasArrayInput)(nil)).Elem(), ApplicationSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSecretOverrideInput)(nil)).Elem(), ApplicationSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSecretOverrideArrayInput)(nil)).Elem(), ApplicationSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStorageInput)(nil)).Elem(), ApplicationStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStorageArrayInput)(nil)).Elem(), ApplicationStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFeaturesInput)(nil)).Elem(), ClusterFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFeaturesPtrInput)(nil)).Elem(), ClusterFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFeaturesExistingVpcInput)(nil)).Elem(), ClusterFeaturesExistingVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFeaturesExistingVpcPtrInput)(nil)).Elem(), ClusterFeaturesExistingVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRoutingTableInput)(nil)).Elem(), ClusterRoutingTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRoutingTableArrayInput)(nil)).Elem(), ClusterRoutingTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerBuiltInEnvironmentVariableInput)(nil)).Elem(), ContainerBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), ContainerBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerCustomDomainInput)(nil)).Elem(), ContainerCustomDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerCustomDomainArrayInput)(nil)).Elem(), ContainerCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerEnvironmentVariableInput)(nil)).Elem(), ContainerEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerEnvironmentVariableArrayInput)(nil)).Elem(), ContainerEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerEnvironmentVariableAliasInput)(nil)).Elem(), ContainerEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerEnvironmentVariableAliasArrayInput)(nil)).Elem(), ContainerEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerEnvironmentVariableOverrideInput)(nil)).Elem(), ContainerEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerEnvironmentVariableOverrideArrayInput)(nil)).Elem(), ContainerEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksInput)(nil)).Elem(), ContainerHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksPtrInput)(nil)).Elem(), ContainerHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbePtrInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypePtrInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeExecInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeExecPtrInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeGrpcInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeGrpcPtrInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeHttpInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeHttpPtrInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeTcpInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksLivenessProbeTypeTcpPtrInput)(nil)).Elem(), ContainerHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbePtrInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypePtrInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeExecInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeExecPtrInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeGrpcInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeGrpcPtrInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeHttpInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeHttpPtrInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeTcpInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthchecksReadinessProbeTypeTcpPtrInput)(nil)).Elem(), ContainerHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPortInput)(nil)).Elem(), ContainerPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPortArrayInput)(nil)).Elem(), ContainerPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRegistryConfigInput)(nil)).Elem(), ContainerRegistryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerRegistryConfigPtrInput)(nil)).Elem(), ContainerRegistryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerSecretInput)(nil)).Elem(), ContainerSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerSecretArrayInput)(nil)).Elem(), ContainerSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerSecretAliasInput)(nil)).Elem(), ContainerSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerSecretAliasArrayInput)(nil)).Elem(), ContainerSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerSecretOverrideInput)(nil)).Elem(), ContainerSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerSecretOverrideArrayInput)(nil)).Elem(), ContainerSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerStorageInput)(nil)).Elem(), ContainerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerStorageArrayInput)(nil)).Elem(), ContainerStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBuiltInEnvironmentVariableInput)(nil)).Elem(), EnvironmentBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), EnvironmentBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentEnvironmentVariableInput)(nil)).Elem(), EnvironmentEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentEnvironmentVariableArrayInput)(nil)).Elem(), EnvironmentEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentEnvironmentVariableAliasInput)(nil)).Elem(), EnvironmentEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentEnvironmentVariableAliasArrayInput)(nil)).Elem(), EnvironmentEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentEnvironmentVariableOverrideInput)(nil)).Elem(), EnvironmentEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentEnvironmentVariableOverrideArrayInput)(nil)).Elem(), EnvironmentEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSecretInput)(nil)).Elem(), EnvironmentSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSecretArrayInput)(nil)).Elem(), EnvironmentSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSecretAliasInput)(nil)).Elem(), EnvironmentSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSecretAliasArrayInput)(nil)).Elem(), EnvironmentSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSecretOverrideInput)(nil)).Elem(), EnvironmentSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentSecretOverrideArrayInput)(nil)).Elem(), EnvironmentSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmBuiltInEnvironmentVariableInput)(nil)).Elem(), HelmBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), HelmBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmDeploymentRestrictionInput)(nil)).Elem(), HelmDeploymentRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmDeploymentRestrictionArrayInput)(nil)).Elem(), HelmDeploymentRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmEnvironmentVariableInput)(nil)).Elem(), HelmEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmEnvironmentVariableArrayInput)(nil)).Elem(), HelmEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmEnvironmentVariableAliasInput)(nil)).Elem(), HelmEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmEnvironmentVariableAliasArrayInput)(nil)).Elem(), HelmEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmEnvironmentVariableOverrideInput)(nil)).Elem(), HelmEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmEnvironmentVariableOverrideArrayInput)(nil)).Elem(), HelmEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmPortsInput)(nil)).Elem(), HelmPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmPortsMapInput)(nil)).Elem(), HelmPortsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmRepositoryConfigInput)(nil)).Elem(), HelmRepositoryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmRepositoryConfigPtrInput)(nil)).Elem(), HelmRepositoryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSecretInput)(nil)).Elem(), HelmSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSecretArrayInput)(nil)).Elem(), HelmSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSecretAliasInput)(nil)).Elem(), HelmSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSecretAliasArrayInput)(nil)).Elem(), HelmSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSecretOverrideInput)(nil)).Elem(), HelmSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSecretOverrideArrayInput)(nil)).Elem(), HelmSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSourceInput)(nil)).Elem(), HelmSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSourcePtrInput)(nil)).Elem(), HelmSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSourceGitRepositoryInput)(nil)).Elem(), HelmSourceGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSourceGitRepositoryPtrInput)(nil)).Elem(), HelmSourceGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSourceHelmRepositoryInput)(nil)).Elem(), HelmSourceHelmRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmSourceHelmRepositoryPtrInput)(nil)).Elem(), HelmSourceHelmRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmValuesOverrideInput)(nil)).Elem(), HelmValuesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmValuesOverridePtrInput)(nil)).Elem(), HelmValuesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmValuesOverrideFileInput)(nil)).Elem(), HelmValuesOverrideFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmValuesOverrideFilePtrInput)(nil)).Elem(), HelmValuesOverrideFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmValuesOverrideFileGitRepositoryInput)(nil)).Elem(), HelmValuesOverrideFileGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmValuesOverrideFileGitRepositoryPtrInput)(nil)).Elem(), HelmValuesOverrideFileGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmValuesOverrideFileRawInput)(nil)).Elem(), HelmValuesOverrideFileRawArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmValuesOverrideFileRawMapInput)(nil)).Elem(), HelmValuesOverrideFileRawMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobBuiltInEnvironmentVariableInput)(nil)).Elem(), JobBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), JobBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDeploymentRestrictionInput)(nil)).Elem(), JobDeploymentRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDeploymentRestrictionArrayInput)(nil)).Elem(), JobDeploymentRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobEnvironmentVariableInput)(nil)).Elem(), JobEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobEnvironmentVariableArrayInput)(nil)).Elem(), JobEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobEnvironmentVariableAliasInput)(nil)).Elem(), JobEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobEnvironmentVariableAliasArrayInput)(nil)).Elem(), JobEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobEnvironmentVariableOverrideInput)(nil)).Elem(), JobEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobEnvironmentVariableOverrideArrayInput)(nil)).Elem(), JobEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksInput)(nil)).Elem(), JobHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksPtrInput)(nil)).Elem(), JobHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeInput)(nil)).Elem(), JobHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbePtrInput)(nil)).Elem(), JobHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypePtrInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeExecInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeExecPtrInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeGrpcInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeGrpcPtrInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeHttpInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeHttpPtrInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeTcpInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksLivenessProbeTypeTcpPtrInput)(nil)).Elem(), JobHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeInput)(nil)).Elem(), JobHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbePtrInput)(nil)).Elem(), JobHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypePtrInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeExecInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeExecPtrInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeGrpcInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeGrpcPtrInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeHttpInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeHttpPtrInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeTcpInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobHealthchecksReadinessProbeTypeTcpPtrInput)(nil)).Elem(), JobHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleInput)(nil)).Elem(), JobScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSchedulePtrInput)(nil)).Elem(), JobScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleCronjobInput)(nil)).Elem(), JobScheduleCronjobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleCronjobPtrInput)(nil)).Elem(), JobScheduleCronjobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleCronjobCommandInput)(nil)).Elem(), JobScheduleCronjobCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleCronjobCommandPtrInput)(nil)).Elem(), JobScheduleCronjobCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleOnDeleteInput)(nil)).Elem(), JobScheduleOnDeleteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleOnDeletePtrInput)(nil)).Elem(), JobScheduleOnDeleteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleOnStartInput)(nil)).Elem(), JobScheduleOnStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleOnStartPtrInput)(nil)).Elem(), JobScheduleOnStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleOnStopInput)(nil)).Elem(), JobScheduleOnStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleOnStopPtrInput)(nil)).Elem(), JobScheduleOnStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSecretInput)(nil)).Elem(), JobSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSecretArrayInput)(nil)).Elem(), JobSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSecretAliasInput)(nil)).Elem(), JobSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSecretAliasArrayInput)(nil)).Elem(), JobSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSecretOverrideInput)(nil)).Elem(), JobSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSecretOverrideArrayInput)(nil)).Elem(), JobSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceInput)(nil)).Elem(), JobSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourcePtrInput)(nil)).Elem(), JobSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceDockerInput)(nil)).Elem(), JobSourceDockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceDockerPtrInput)(nil)).Elem(), JobSourceDockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceDockerGitRepositoryInput)(nil)).Elem(), JobSourceDockerGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceDockerGitRepositoryPtrInput)(nil)).Elem(), JobSourceDockerGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceImageInput)(nil)).Elem(), JobSourceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceImagePtrInput)(nil)).Elem(), JobSourceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBuiltInEnvironmentVariableInput)(nil)).Elem(), ProjectBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), ProjectBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentVariableInput)(nil)).Elem(), ProjectEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentVariableArrayInput)(nil)).Elem(), ProjectEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentVariableAliasInput)(nil)).Elem(), ProjectEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentVariableAliasArrayInput)(nil)).Elem(), ProjectEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecretInput)(nil)).Elem(), ProjectSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecretArrayInput)(nil)).Elem(), ProjectSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecretAliasInput)(nil)).Elem(), ProjectSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecretAliasArrayInput)(nil)).Elem(), ProjectSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationBuiltInEnvironmentVariableInput)(nil)).Elem(), GetApplicationBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), GetApplicationBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationCustomDomainInput)(nil)).Elem(), GetApplicationCustomDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationCustomDomainArrayInput)(nil)).Elem(), GetApplicationCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationDeploymentRestrictionInput)(nil)).Elem(), GetApplicationDeploymentRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationDeploymentRestrictionArrayInput)(nil)).Elem(), GetApplicationDeploymentRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationEnvironmentVariableInput)(nil)).Elem(), GetApplicationEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationEnvironmentVariableArrayInput)(nil)).Elem(), GetApplicationEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationEnvironmentVariableAliasInput)(nil)).Elem(), GetApplicationEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationEnvironmentVariableAliasArrayInput)(nil)).Elem(), GetApplicationEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationEnvironmentVariableOverrideInput)(nil)).Elem(), GetApplicationEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationEnvironmentVariableOverrideArrayInput)(nil)).Elem(), GetApplicationEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGitRepositoryInput)(nil)).Elem(), GetApplicationGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksInput)(nil)).Elem(), GetApplicationHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksPtrInput)(nil)).Elem(), GetApplicationHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbePtrInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypePtrInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeExecInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeExecPtrInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeGrpcInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeGrpcPtrInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeHttpInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeHttpPtrInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeTcpInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksLivenessProbeTypeTcpPtrInput)(nil)).Elem(), GetApplicationHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbePtrInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypePtrInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeExecInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeExecPtrInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeGrpcInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeGrpcPtrInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeHttpInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeHttpPtrInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeTcpInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationHealthchecksReadinessProbeTypeTcpPtrInput)(nil)).Elem(), GetApplicationHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationPortInput)(nil)).Elem(), GetApplicationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationPortArrayInput)(nil)).Elem(), GetApplicationPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSecretInput)(nil)).Elem(), GetApplicationSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSecretArrayInput)(nil)).Elem(), GetApplicationSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSecretAliasInput)(nil)).Elem(), GetApplicationSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSecretAliasArrayInput)(nil)).Elem(), GetApplicationSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSecretOverrideInput)(nil)).Elem(), GetApplicationSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationSecretOverrideArrayInput)(nil)).Elem(), GetApplicationSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStorageInput)(nil)).Elem(), GetApplicationStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationStorageArrayInput)(nil)).Elem(), GetApplicationStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterFeaturesInput)(nil)).Elem(), GetClusterFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterFeaturesPtrInput)(nil)).Elem(), GetClusterFeaturesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterFeaturesExistingVpcInput)(nil)).Elem(), GetClusterFeaturesExistingVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterFeaturesExistingVpcPtrInput)(nil)).Elem(), GetClusterFeaturesExistingVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterRoutingTableInput)(nil)).Elem(), GetClusterRoutingTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterRoutingTableArrayInput)(nil)).Elem(), GetClusterRoutingTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerBuiltInEnvironmentVariableInput)(nil)).Elem(), GetContainerBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), GetContainerBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerCustomDomainInput)(nil)).Elem(), GetContainerCustomDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerCustomDomainArrayInput)(nil)).Elem(), GetContainerCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerEnvironmentVariableInput)(nil)).Elem(), GetContainerEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerEnvironmentVariableArrayInput)(nil)).Elem(), GetContainerEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerEnvironmentVariableAliasInput)(nil)).Elem(), GetContainerEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerEnvironmentVariableAliasArrayInput)(nil)).Elem(), GetContainerEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerEnvironmentVariableOverrideInput)(nil)).Elem(), GetContainerEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerEnvironmentVariableOverrideArrayInput)(nil)).Elem(), GetContainerEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksInput)(nil)).Elem(), GetContainerHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksPtrInput)(nil)).Elem(), GetContainerHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbePtrInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypePtrInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeExecInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeExecPtrInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeGrpcInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeGrpcPtrInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeHttpInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeHttpPtrInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeTcpInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksLivenessProbeTypeTcpPtrInput)(nil)).Elem(), GetContainerHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbePtrInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypePtrInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeExecInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeExecPtrInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeGrpcInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeGrpcPtrInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeHttpInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeHttpPtrInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeTcpInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerHealthchecksReadinessProbeTypeTcpPtrInput)(nil)).Elem(), GetContainerHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerPortInput)(nil)).Elem(), GetContainerPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerPortArrayInput)(nil)).Elem(), GetContainerPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerSecretInput)(nil)).Elem(), GetContainerSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerSecretArrayInput)(nil)).Elem(), GetContainerSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerSecretAliasInput)(nil)).Elem(), GetContainerSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerSecretAliasArrayInput)(nil)).Elem(), GetContainerSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerSecretOverrideInput)(nil)).Elem(), GetContainerSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerSecretOverrideArrayInput)(nil)).Elem(), GetContainerSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerStorageInput)(nil)).Elem(), GetContainerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContainerStorageArrayInput)(nil)).Elem(), GetContainerStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentBuiltInEnvironmentVariableInput)(nil)).Elem(), GetEnvironmentBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), GetEnvironmentBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentEnvironmentVariableInput)(nil)).Elem(), GetEnvironmentEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentEnvironmentVariableArrayInput)(nil)).Elem(), GetEnvironmentEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentEnvironmentVariableAliasInput)(nil)).Elem(), GetEnvironmentEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentEnvironmentVariableAliasArrayInput)(nil)).Elem(), GetEnvironmentEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentEnvironmentVariableOverrideInput)(nil)).Elem(), GetEnvironmentEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentEnvironmentVariableOverrideArrayInput)(nil)).Elem(), GetEnvironmentEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentSecretInput)(nil)).Elem(), GetEnvironmentSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentSecretArrayInput)(nil)).Elem(), GetEnvironmentSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentSecretAliasInput)(nil)).Elem(), GetEnvironmentSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentSecretAliasArrayInput)(nil)).Elem(), GetEnvironmentSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentSecretOverrideInput)(nil)).Elem(), GetEnvironmentSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentSecretOverrideArrayInput)(nil)).Elem(), GetEnvironmentSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmBuiltInEnvironmentVariableInput)(nil)).Elem(), GetHelmBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), GetHelmBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmDeploymentRestrictionInput)(nil)).Elem(), GetHelmDeploymentRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmDeploymentRestrictionArrayInput)(nil)).Elem(), GetHelmDeploymentRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmEnvironmentVariableInput)(nil)).Elem(), GetHelmEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmEnvironmentVariableArrayInput)(nil)).Elem(), GetHelmEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmEnvironmentVariableAliasInput)(nil)).Elem(), GetHelmEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmEnvironmentVariableAliasArrayInput)(nil)).Elem(), GetHelmEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmEnvironmentVariableOverrideInput)(nil)).Elem(), GetHelmEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmEnvironmentVariableOverrideArrayInput)(nil)).Elem(), GetHelmEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmSecretInput)(nil)).Elem(), GetHelmSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmSecretArrayInput)(nil)).Elem(), GetHelmSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmSecretAliasInput)(nil)).Elem(), GetHelmSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmSecretAliasArrayInput)(nil)).Elem(), GetHelmSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmSecretOverrideInput)(nil)).Elem(), GetHelmSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmSecretOverrideArrayInput)(nil)).Elem(), GetHelmSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobBuiltInEnvironmentVariableInput)(nil)).Elem(), GetJobBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), GetJobBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDeploymentRestrictionInput)(nil)).Elem(), GetJobDeploymentRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobDeploymentRestrictionArrayInput)(nil)).Elem(), GetJobDeploymentRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobEnvironmentVariableInput)(nil)).Elem(), GetJobEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobEnvironmentVariableArrayInput)(nil)).Elem(), GetJobEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobEnvironmentVariableAliasInput)(nil)).Elem(), GetJobEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobEnvironmentVariableAliasArrayInput)(nil)).Elem(), GetJobEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobEnvironmentVariableOverrideInput)(nil)).Elem(), GetJobEnvironmentVariableOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobEnvironmentVariableOverrideArrayInput)(nil)).Elem(), GetJobEnvironmentVariableOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksInput)(nil)).Elem(), GetJobHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksPtrInput)(nil)).Elem(), GetJobHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbePtrInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypePtrInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeExecInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeExecPtrInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeGrpcInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeGrpcPtrInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeHttpInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeHttpPtrInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeTcpInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksLivenessProbeTypeTcpPtrInput)(nil)).Elem(), GetJobHealthchecksLivenessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbePtrInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypePtrInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeExecInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeExecPtrInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeGrpcInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeGrpcPtrInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeHttpInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeHttpPtrInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeTcpInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobHealthchecksReadinessProbeTypeTcpPtrInput)(nil)).Elem(), GetJobHealthchecksReadinessProbeTypeTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobScheduleInput)(nil)).Elem(), GetJobScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobScheduleCronjobInput)(nil)).Elem(), GetJobScheduleCronjobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobScheduleCronjobCommandInput)(nil)).Elem(), GetJobScheduleCronjobCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobScheduleOnDeleteInput)(nil)).Elem(), GetJobScheduleOnDeleteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobScheduleOnStartInput)(nil)).Elem(), GetJobScheduleOnStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobScheduleOnStopInput)(nil)).Elem(), GetJobScheduleOnStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSecretInput)(nil)).Elem(), GetJobSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSecretArrayInput)(nil)).Elem(), GetJobSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSecretAliasInput)(nil)).Elem(), GetJobSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSecretAliasArrayInput)(nil)).Elem(), GetJobSecretAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSecretOverrideInput)(nil)).Elem(), GetJobSecretOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSecretOverrideArrayInput)(nil)).Elem(), GetJobSecretOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSourceInput)(nil)).Elem(), GetJobSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSourcePtrInput)(nil)).Elem(), GetJobSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSourceDockerInput)(nil)).Elem(), GetJobSourceDockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSourceDockerPtrInput)(nil)).Elem(), GetJobSourceDockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSourceDockerGitRepositoryInput)(nil)).Elem(), GetJobSourceDockerGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSourceDockerGitRepositoryPtrInput)(nil)).Elem(), GetJobSourceDockerGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSourceImageInput)(nil)).Elem(), GetJobSourceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJobSourceImagePtrInput)(nil)).Elem(), GetJobSourceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectBuiltInEnvironmentVariableInput)(nil)).Elem(), GetProjectBuiltInEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectBuiltInEnvironmentVariableArrayInput)(nil)).Elem(), GetProjectBuiltInEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectEnvironmentVariableInput)(nil)).Elem(), GetProjectEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectEnvironmentVariableArrayInput)(nil)).Elem(), GetProjectEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectEnvironmentVariableAliasInput)(nil)).Elem(), GetProjectEnvironmentVariableAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectEnvironmentVariableAliasArrayInput)(nil)).Elem(), GetProjectEnvironmentVariableAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecretInput)(nil)).Elem(), GetProjectSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecretArrayInput)(nil)).Elem(), GetProjectSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecretAliasInput)(nil)).Elem(), GetProjectSecretAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectSecretAliasArrayInput)(nil)).Elem(), GetProjectSecretAliasArray{})
	pulumi.RegisterOutputType(ApplicationBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ApplicationBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ApplicationCustomDomainOutput{})
	pulumi.RegisterOutputType(ApplicationCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(ApplicationDeploymentRestrictionOutput{})
	pulumi.RegisterOutputType(ApplicationDeploymentRestrictionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGitRepositoryOutput{})
	pulumi.RegisterOutputType(ApplicationGitRepositoryPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksLivenessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(ApplicationHealthchecksReadinessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(ApplicationPortOutput{})
	pulumi.RegisterOutputType(ApplicationPortArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecretOutput{})
	pulumi.RegisterOutputType(ApplicationSecretArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecretAliasOutput{})
	pulumi.RegisterOutputType(ApplicationSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecretOverrideOutput{})
	pulumi.RegisterOutputType(ApplicationSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStorageOutput{})
	pulumi.RegisterOutputType(ApplicationStorageArrayOutput{})
	pulumi.RegisterOutputType(ClusterFeaturesOutput{})
	pulumi.RegisterOutputType(ClusterFeaturesPtrOutput{})
	pulumi.RegisterOutputType(ClusterFeaturesExistingVpcOutput{})
	pulumi.RegisterOutputType(ClusterFeaturesExistingVpcPtrOutput{})
	pulumi.RegisterOutputType(ClusterRoutingTableOutput{})
	pulumi.RegisterOutputType(ClusterRoutingTableArrayOutput{})
	pulumi.RegisterOutputType(ContainerBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ContainerBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ContainerCustomDomainOutput{})
	pulumi.RegisterOutputType(ContainerCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(ContainerEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ContainerEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ContainerEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(ContainerEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(ContainerEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(ContainerEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksPtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksLivenessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(ContainerHealthchecksReadinessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(ContainerPortOutput{})
	pulumi.RegisterOutputType(ContainerPortArrayOutput{})
	pulumi.RegisterOutputType(ContainerRegistryConfigOutput{})
	pulumi.RegisterOutputType(ContainerRegistryConfigPtrOutput{})
	pulumi.RegisterOutputType(ContainerSecretOutput{})
	pulumi.RegisterOutputType(ContainerSecretArrayOutput{})
	pulumi.RegisterOutputType(ContainerSecretAliasOutput{})
	pulumi.RegisterOutputType(ContainerSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(ContainerSecretOverrideOutput{})
	pulumi.RegisterOutputType(ContainerSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(ContainerStorageOutput{})
	pulumi.RegisterOutputType(ContainerStorageArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(EnvironmentBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(EnvironmentEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(EnvironmentEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(EnvironmentEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentSecretOutput{})
	pulumi.RegisterOutputType(EnvironmentSecretArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentSecretAliasOutput{})
	pulumi.RegisterOutputType(EnvironmentSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentSecretOverrideOutput{})
	pulumi.RegisterOutputType(EnvironmentSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(HelmBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(HelmBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(HelmDeploymentRestrictionOutput{})
	pulumi.RegisterOutputType(HelmDeploymentRestrictionArrayOutput{})
	pulumi.RegisterOutputType(HelmEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(HelmEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(HelmEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(HelmEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(HelmEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(HelmEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(HelmPortsOutput{})
	pulumi.RegisterOutputType(HelmPortsMapOutput{})
	pulumi.RegisterOutputType(HelmRepositoryConfigOutput{})
	pulumi.RegisterOutputType(HelmRepositoryConfigPtrOutput{})
	pulumi.RegisterOutputType(HelmSecretOutput{})
	pulumi.RegisterOutputType(HelmSecretArrayOutput{})
	pulumi.RegisterOutputType(HelmSecretAliasOutput{})
	pulumi.RegisterOutputType(HelmSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(HelmSecretOverrideOutput{})
	pulumi.RegisterOutputType(HelmSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(HelmSourceOutput{})
	pulumi.RegisterOutputType(HelmSourcePtrOutput{})
	pulumi.RegisterOutputType(HelmSourceGitRepositoryOutput{})
	pulumi.RegisterOutputType(HelmSourceGitRepositoryPtrOutput{})
	pulumi.RegisterOutputType(HelmSourceHelmRepositoryOutput{})
	pulumi.RegisterOutputType(HelmSourceHelmRepositoryPtrOutput{})
	pulumi.RegisterOutputType(HelmValuesOverrideOutput{})
	pulumi.RegisterOutputType(HelmValuesOverridePtrOutput{})
	pulumi.RegisterOutputType(HelmValuesOverrideFileOutput{})
	pulumi.RegisterOutputType(HelmValuesOverrideFilePtrOutput{})
	pulumi.RegisterOutputType(HelmValuesOverrideFileGitRepositoryOutput{})
	pulumi.RegisterOutputType(HelmValuesOverrideFileGitRepositoryPtrOutput{})
	pulumi.RegisterOutputType(HelmValuesOverrideFileRawOutput{})
	pulumi.RegisterOutputType(HelmValuesOverrideFileRawMapOutput{})
	pulumi.RegisterOutputType(JobBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(JobBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(JobDeploymentRestrictionOutput{})
	pulumi.RegisterOutputType(JobDeploymentRestrictionArrayOutput{})
	pulumi.RegisterOutputType(JobEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(JobEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(JobEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(JobEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(JobEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(JobEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(JobHealthchecksOutput{})
	pulumi.RegisterOutputType(JobHealthchecksPtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(JobHealthchecksLivenessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(JobHealthchecksReadinessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(JobScheduleOutput{})
	pulumi.RegisterOutputType(JobSchedulePtrOutput{})
	pulumi.RegisterOutputType(JobScheduleCronjobOutput{})
	pulumi.RegisterOutputType(JobScheduleCronjobPtrOutput{})
	pulumi.RegisterOutputType(JobScheduleCronjobCommandOutput{})
	pulumi.RegisterOutputType(JobScheduleCronjobCommandPtrOutput{})
	pulumi.RegisterOutputType(JobScheduleOnDeleteOutput{})
	pulumi.RegisterOutputType(JobScheduleOnDeletePtrOutput{})
	pulumi.RegisterOutputType(JobScheduleOnStartOutput{})
	pulumi.RegisterOutputType(JobScheduleOnStartPtrOutput{})
	pulumi.RegisterOutputType(JobScheduleOnStopOutput{})
	pulumi.RegisterOutputType(JobScheduleOnStopPtrOutput{})
	pulumi.RegisterOutputType(JobSecretOutput{})
	pulumi.RegisterOutputType(JobSecretArrayOutput{})
	pulumi.RegisterOutputType(JobSecretAliasOutput{})
	pulumi.RegisterOutputType(JobSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(JobSecretOverrideOutput{})
	pulumi.RegisterOutputType(JobSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(JobSourceOutput{})
	pulumi.RegisterOutputType(JobSourcePtrOutput{})
	pulumi.RegisterOutputType(JobSourceDockerOutput{})
	pulumi.RegisterOutputType(JobSourceDockerPtrOutput{})
	pulumi.RegisterOutputType(JobSourceDockerGitRepositoryOutput{})
	pulumi.RegisterOutputType(JobSourceDockerGitRepositoryPtrOutput{})
	pulumi.RegisterOutputType(JobSourceImageOutput{})
	pulumi.RegisterOutputType(JobSourceImagePtrOutput{})
	pulumi.RegisterOutputType(ProjectBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ProjectBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(ProjectSecretOutput{})
	pulumi.RegisterOutputType(ProjectSecretArrayOutput{})
	pulumi.RegisterOutputType(ProjectSecretAliasOutput{})
	pulumi.RegisterOutputType(ProjectSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetApplicationBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationCustomDomainOutput{})
	pulumi.RegisterOutputType(GetApplicationCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationDeploymentRestrictionOutput{})
	pulumi.RegisterOutputType(GetApplicationDeploymentRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetApplicationEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(GetApplicationEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(GetApplicationEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGitRepositoryOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksLivenessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(GetApplicationHealthchecksReadinessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationPortOutput{})
	pulumi.RegisterOutputType(GetApplicationPortArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSecretOutput{})
	pulumi.RegisterOutputType(GetApplicationSecretArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSecretAliasOutput{})
	pulumi.RegisterOutputType(GetApplicationSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationSecretOverrideOutput{})
	pulumi.RegisterOutputType(GetApplicationSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationStorageOutput{})
	pulumi.RegisterOutputType(GetApplicationStorageArrayOutput{})
	pulumi.RegisterOutputType(GetClusterFeaturesOutput{})
	pulumi.RegisterOutputType(GetClusterFeaturesPtrOutput{})
	pulumi.RegisterOutputType(GetClusterFeaturesExistingVpcOutput{})
	pulumi.RegisterOutputType(GetClusterFeaturesExistingVpcPtrOutput{})
	pulumi.RegisterOutputType(GetClusterRoutingTableOutput{})
	pulumi.RegisterOutputType(GetClusterRoutingTableArrayOutput{})
	pulumi.RegisterOutputType(GetContainerBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetContainerBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetContainerCustomDomainOutput{})
	pulumi.RegisterOutputType(GetContainerCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(GetContainerEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetContainerEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetContainerEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(GetContainerEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(GetContainerEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(GetContainerEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksPtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksLivenessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(GetContainerHealthchecksReadinessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(GetContainerPortOutput{})
	pulumi.RegisterOutputType(GetContainerPortArrayOutput{})
	pulumi.RegisterOutputType(GetContainerSecretOutput{})
	pulumi.RegisterOutputType(GetContainerSecretArrayOutput{})
	pulumi.RegisterOutputType(GetContainerSecretAliasOutput{})
	pulumi.RegisterOutputType(GetContainerSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(GetContainerSecretOverrideOutput{})
	pulumi.RegisterOutputType(GetContainerSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetContainerStorageOutput{})
	pulumi.RegisterOutputType(GetContainerStorageArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetEnvironmentBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetEnvironmentEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(GetEnvironmentEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(GetEnvironmentEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentSecretOutput{})
	pulumi.RegisterOutputType(GetEnvironmentSecretArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentSecretAliasOutput{})
	pulumi.RegisterOutputType(GetEnvironmentSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentSecretOverrideOutput{})
	pulumi.RegisterOutputType(GetEnvironmentSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetHelmBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetHelmBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetHelmDeploymentRestrictionOutput{})
	pulumi.RegisterOutputType(GetHelmDeploymentRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetHelmEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetHelmEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetHelmEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(GetHelmEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(GetHelmEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(GetHelmEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetHelmSecretOutput{})
	pulumi.RegisterOutputType(GetHelmSecretArrayOutput{})
	pulumi.RegisterOutputType(GetHelmSecretAliasOutput{})
	pulumi.RegisterOutputType(GetHelmSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(GetHelmSecretOverrideOutput{})
	pulumi.RegisterOutputType(GetHelmSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetJobBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetJobBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetJobDeploymentRestrictionOutput{})
	pulumi.RegisterOutputType(GetJobDeploymentRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetJobEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetJobEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetJobEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(GetJobEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(GetJobEnvironmentVariableOverrideOutput{})
	pulumi.RegisterOutputType(GetJobEnvironmentVariableOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksPtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksLivenessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypePtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeExecOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeExecPtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeGrpcOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeGrpcPtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeHttpOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeHttpPtrOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeTcpOutput{})
	pulumi.RegisterOutputType(GetJobHealthchecksReadinessProbeTypeTcpPtrOutput{})
	pulumi.RegisterOutputType(GetJobScheduleOutput{})
	pulumi.RegisterOutputType(GetJobScheduleCronjobOutput{})
	pulumi.RegisterOutputType(GetJobScheduleCronjobCommandOutput{})
	pulumi.RegisterOutputType(GetJobScheduleOnDeleteOutput{})
	pulumi.RegisterOutputType(GetJobScheduleOnStartOutput{})
	pulumi.RegisterOutputType(GetJobScheduleOnStopOutput{})
	pulumi.RegisterOutputType(GetJobSecretOutput{})
	pulumi.RegisterOutputType(GetJobSecretArrayOutput{})
	pulumi.RegisterOutputType(GetJobSecretAliasOutput{})
	pulumi.RegisterOutputType(GetJobSecretAliasArrayOutput{})
	pulumi.RegisterOutputType(GetJobSecretOverrideOutput{})
	pulumi.RegisterOutputType(GetJobSecretOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetJobSourceOutput{})
	pulumi.RegisterOutputType(GetJobSourcePtrOutput{})
	pulumi.RegisterOutputType(GetJobSourceDockerOutput{})
	pulumi.RegisterOutputType(GetJobSourceDockerPtrOutput{})
	pulumi.RegisterOutputType(GetJobSourceDockerGitRepositoryOutput{})
	pulumi.RegisterOutputType(GetJobSourceDockerGitRepositoryPtrOutput{})
	pulumi.RegisterOutputType(GetJobSourceImageOutput{})
	pulumi.RegisterOutputType(GetJobSourceImagePtrOutput{})
	pulumi.RegisterOutputType(GetProjectBuiltInEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetProjectBuiltInEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetProjectEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(GetProjectEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(GetProjectEnvironmentVariableAliasOutput{})
	pulumi.RegisterOutputType(GetProjectEnvironmentVariableAliasArrayOutput{})
	pulumi.RegisterOutputType(GetProjectSecretOutput{})
	pulumi.RegisterOutputType(GetProjectSecretArrayOutput{})
	pulumi.RegisterOutputType(GetProjectSecretAliasOutput{})
	pulumi.RegisterOutputType(GetProjectSecretAliasArrayOutput{})
}
