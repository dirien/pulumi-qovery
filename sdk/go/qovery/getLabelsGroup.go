// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # LabelsGroup (Data Source)
//
// Provides a Qovery labels group resource
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-qovery/sdk/go/qovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qovery.LookupLabelsGroup(ctx, &qovery.LookupLabelsGroupArgs{
//				Id:             "<labels_group_id>",
//				OrganizationId: "<organization_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLabelsGroup(ctx *pulumi.Context, args *LookupLabelsGroupArgs, opts ...pulumi.InvokeOption) (*LookupLabelsGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLabelsGroupResult
	err := ctx.Invoke("qovery:index/getLabelsGroup:getLabelsGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLabelsGroup.
type LookupLabelsGroupArgs struct {
	// Id of the labels group
	Id string `pulumi:"id"`
	// labels
	Labels []GetLabelsGroupLabel `pulumi:"labels"`
	// name of the labels group
	Name *string `pulumi:"name"`
	// Id of the organization.
	OrganizationId string `pulumi:"organizationId"`
}

// A collection of values returned by getLabelsGroup.
type LookupLabelsGroupResult struct {
	// Id of the labels group
	Id string `pulumi:"id"`
	// labels
	Labels []GetLabelsGroupLabel `pulumi:"labels"`
	// name of the labels group
	Name *string `pulumi:"name"`
	// Id of the organization.
	OrganizationId string `pulumi:"organizationId"`
}

func LookupLabelsGroupOutput(ctx *pulumi.Context, args LookupLabelsGroupOutputArgs, opts ...pulumi.InvokeOption) LookupLabelsGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLabelsGroupResultOutput, error) {
			args := v.(LookupLabelsGroupArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupLabelsGroupResult
			secret, err := ctx.InvokePackageRaw("qovery:index/getLabelsGroup:getLabelsGroup", args, &rv, "", opts...)
			if err != nil {
				return LookupLabelsGroupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupLabelsGroupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupLabelsGroupResultOutput), nil
			}
			return output, nil
		}).(LookupLabelsGroupResultOutput)
}

// A collection of arguments for invoking getLabelsGroup.
type LookupLabelsGroupOutputArgs struct {
	// Id of the labels group
	Id pulumi.StringInput `pulumi:"id"`
	// labels
	Labels GetLabelsGroupLabelArrayInput `pulumi:"labels"`
	// name of the labels group
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Id of the organization.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (LookupLabelsGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLabelsGroupArgs)(nil)).Elem()
}

// A collection of values returned by getLabelsGroup.
type LookupLabelsGroupResultOutput struct{ *pulumi.OutputState }

func (LookupLabelsGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLabelsGroupResult)(nil)).Elem()
}

func (o LookupLabelsGroupResultOutput) ToLookupLabelsGroupResultOutput() LookupLabelsGroupResultOutput {
	return o
}

func (o LookupLabelsGroupResultOutput) ToLookupLabelsGroupResultOutputWithContext(ctx context.Context) LookupLabelsGroupResultOutput {
	return o
}

// Id of the labels group
func (o LookupLabelsGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelsGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// labels
func (o LookupLabelsGroupResultOutput) Labels() GetLabelsGroupLabelArrayOutput {
	return o.ApplyT(func(v LookupLabelsGroupResult) []GetLabelsGroupLabel { return v.Labels }).(GetLabelsGroupLabelArrayOutput)
}

// name of the labels group
func (o LookupLabelsGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLabelsGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Id of the organization.
func (o LookupLabelsGroupResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabelsGroupResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLabelsGroupResultOutput{})
}
