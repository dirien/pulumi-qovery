// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Environment (Data Source)
//
// Provides a Qovery environment resource. This can be used to create and manage Qovery environments.
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-qovery/sdk/go/qovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qovery.LookupEnvironment(ctx, &qovery.LookupEnvironmentArgs{
//				Id: "<environment_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEnvironment(ctx *pulumi.Context, args *LookupEnvironmentArgs, opts ...pulumi.InvokeOption) (*LookupEnvironmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEnvironmentResult
	err := ctx.Invoke("qovery:index/getEnvironment:getEnvironment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEnvironment.
type LookupEnvironmentArgs struct {
	EnvironmentVariableAliases   []GetEnvironmentEnvironmentVariableAlias    `pulumi:"environmentVariableAliases"`
	EnvironmentVariableOverrides []GetEnvironmentEnvironmentVariableOverride `pulumi:"environmentVariableOverrides"`
	EnvironmentVariables         []GetEnvironmentEnvironmentVariable         `pulumi:"environmentVariables"`
	Id                           string                                      `pulumi:"id"`
	Mode                         *string                                     `pulumi:"mode"`
	SecretAliases                []GetEnvironmentSecretAlias                 `pulumi:"secretAliases"`
	SecretOverrides              []GetEnvironmentSecretOverride              `pulumi:"secretOverrides"`
	Secrets                      []GetEnvironmentSecret                      `pulumi:"secrets"`
}

// A collection of values returned by getEnvironment.
type LookupEnvironmentResult struct {
	BuiltInEnvironmentVariables  []GetEnvironmentBuiltInEnvironmentVariable  `pulumi:"builtInEnvironmentVariables"`
	ClusterId                    string                                      `pulumi:"clusterId"`
	EnvironmentVariableAliases   []GetEnvironmentEnvironmentVariableAlias    `pulumi:"environmentVariableAliases"`
	EnvironmentVariableOverrides []GetEnvironmentEnvironmentVariableOverride `pulumi:"environmentVariableOverrides"`
	EnvironmentVariables         []GetEnvironmentEnvironmentVariable         `pulumi:"environmentVariables"`
	Id                           string                                      `pulumi:"id"`
	Mode                         string                                      `pulumi:"mode"`
	Name                         string                                      `pulumi:"name"`
	ProjectId                    string                                      `pulumi:"projectId"`
	SecretAliases                []GetEnvironmentSecretAlias                 `pulumi:"secretAliases"`
	SecretOverrides              []GetEnvironmentSecretOverride              `pulumi:"secretOverrides"`
	Secrets                      []GetEnvironmentSecret                      `pulumi:"secrets"`
}

func LookupEnvironmentOutput(ctx *pulumi.Context, args LookupEnvironmentOutputArgs, opts ...pulumi.InvokeOption) LookupEnvironmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEnvironmentResult, error) {
			args := v.(LookupEnvironmentArgs)
			r, err := LookupEnvironment(ctx, &args, opts...)
			var s LookupEnvironmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEnvironmentResultOutput)
}

// A collection of arguments for invoking getEnvironment.
type LookupEnvironmentOutputArgs struct {
	EnvironmentVariableAliases   GetEnvironmentEnvironmentVariableAliasArrayInput    `pulumi:"environmentVariableAliases"`
	EnvironmentVariableOverrides GetEnvironmentEnvironmentVariableOverrideArrayInput `pulumi:"environmentVariableOverrides"`
	EnvironmentVariables         GetEnvironmentEnvironmentVariableArrayInput         `pulumi:"environmentVariables"`
	Id                           pulumi.StringInput                                  `pulumi:"id"`
	Mode                         pulumi.StringPtrInput                               `pulumi:"mode"`
	SecretAliases                GetEnvironmentSecretAliasArrayInput                 `pulumi:"secretAliases"`
	SecretOverrides              GetEnvironmentSecretOverrideArrayInput              `pulumi:"secretOverrides"`
	Secrets                      GetEnvironmentSecretArrayInput                      `pulumi:"secrets"`
}

func (LookupEnvironmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvironmentArgs)(nil)).Elem()
}

// A collection of values returned by getEnvironment.
type LookupEnvironmentResultOutput struct{ *pulumi.OutputState }

func (LookupEnvironmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvironmentResult)(nil)).Elem()
}

func (o LookupEnvironmentResultOutput) ToLookupEnvironmentResultOutput() LookupEnvironmentResultOutput {
	return o
}

func (o LookupEnvironmentResultOutput) ToLookupEnvironmentResultOutputWithContext(ctx context.Context) LookupEnvironmentResultOutput {
	return o
}

func (o LookupEnvironmentResultOutput) BuiltInEnvironmentVariables() GetEnvironmentBuiltInEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) []GetEnvironmentBuiltInEnvironmentVariable {
		return v.BuiltInEnvironmentVariables
	}).(GetEnvironmentBuiltInEnvironmentVariableArrayOutput)
}

func (o LookupEnvironmentResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupEnvironmentResultOutput) EnvironmentVariableAliases() GetEnvironmentEnvironmentVariableAliasArrayOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) []GetEnvironmentEnvironmentVariableAlias {
		return v.EnvironmentVariableAliases
	}).(GetEnvironmentEnvironmentVariableAliasArrayOutput)
}

func (o LookupEnvironmentResultOutput) EnvironmentVariableOverrides() GetEnvironmentEnvironmentVariableOverrideArrayOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) []GetEnvironmentEnvironmentVariableOverride {
		return v.EnvironmentVariableOverrides
	}).(GetEnvironmentEnvironmentVariableOverrideArrayOutput)
}

func (o LookupEnvironmentResultOutput) EnvironmentVariables() GetEnvironmentEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) []GetEnvironmentEnvironmentVariable { return v.EnvironmentVariables }).(GetEnvironmentEnvironmentVariableArrayOutput)
}

func (o LookupEnvironmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEnvironmentResultOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) string { return v.Mode }).(pulumi.StringOutput)
}

func (o LookupEnvironmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupEnvironmentResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupEnvironmentResultOutput) SecretAliases() GetEnvironmentSecretAliasArrayOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) []GetEnvironmentSecretAlias { return v.SecretAliases }).(GetEnvironmentSecretAliasArrayOutput)
}

func (o LookupEnvironmentResultOutput) SecretOverrides() GetEnvironmentSecretOverrideArrayOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) []GetEnvironmentSecretOverride { return v.SecretOverrides }).(GetEnvironmentSecretOverrideArrayOutput)
}

func (o LookupEnvironmentResultOutput) Secrets() GetEnvironmentSecretArrayOutput {
	return o.ApplyT(func(v LookupEnvironmentResult) []GetEnvironmentSecret { return v.Secrets }).(GetEnvironmentSecretArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnvironmentResultOutput{})
}
