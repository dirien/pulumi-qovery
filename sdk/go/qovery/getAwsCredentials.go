// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # AwsCredentials (Data Source)
//
// Provides a Qovery AWS credentials resource. This can be used to create and manage Qovery AWS credentials.
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-qovery/sdk/go/qovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qovery.LookupAwsCredentials(ctx, &qovery.LookupAwsCredentialsArgs{
//				Id:             "<credentials_id>",
//				OrganizationId: "<organization_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAwsCredentials(ctx *pulumi.Context, args *LookupAwsCredentialsArgs, opts ...pulumi.InvokeOption) (*LookupAwsCredentialsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAwsCredentialsResult
	err := ctx.Invoke("qovery:index/getAwsCredentials:getAwsCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsCredentials.
type LookupAwsCredentialsArgs struct {
	// Id of the AWS credentials.
	Id string `pulumi:"id"`
	// Id of the organization.
	OrganizationId string `pulumi:"organizationId"`
}

// A collection of values returned by getAwsCredentials.
type LookupAwsCredentialsResult struct {
	// Id of the AWS credentials.
	Id string `pulumi:"id"`
	// Name of the aws credentials.
	Name string `pulumi:"name"`
	// Id of the organization.
	OrganizationId string `pulumi:"organizationId"`
}

func LookupAwsCredentialsOutput(ctx *pulumi.Context, args LookupAwsCredentialsOutputArgs, opts ...pulumi.InvokeOption) LookupAwsCredentialsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAwsCredentialsResultOutput, error) {
			args := v.(LookupAwsCredentialsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAwsCredentialsResult
			secret, err := ctx.InvokePackageRaw("qovery:index/getAwsCredentials:getAwsCredentials", args, &rv, "", opts...)
			if err != nil {
				return LookupAwsCredentialsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAwsCredentialsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAwsCredentialsResultOutput), nil
			}
			return output, nil
		}).(LookupAwsCredentialsResultOutput)
}

// A collection of arguments for invoking getAwsCredentials.
type LookupAwsCredentialsOutputArgs struct {
	// Id of the AWS credentials.
	Id pulumi.StringInput `pulumi:"id"`
	// Id of the organization.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (LookupAwsCredentialsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsCredentialsArgs)(nil)).Elem()
}

// A collection of values returned by getAwsCredentials.
type LookupAwsCredentialsResultOutput struct{ *pulumi.OutputState }

func (LookupAwsCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsCredentialsResult)(nil)).Elem()
}

func (o LookupAwsCredentialsResultOutput) ToLookupAwsCredentialsResultOutput() LookupAwsCredentialsResultOutput {
	return o
}

func (o LookupAwsCredentialsResultOutput) ToLookupAwsCredentialsResultOutputWithContext(ctx context.Context) LookupAwsCredentialsResultOutput {
	return o
}

// Id of the AWS credentials.
func (o LookupAwsCredentialsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCredentialsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the aws credentials.
func (o LookupAwsCredentialsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCredentialsResult) string { return v.Name }).(pulumi.StringOutput)
}

// Id of the organization.
func (o LookupAwsCredentialsResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCredentialsResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsCredentialsResultOutput{})
}
