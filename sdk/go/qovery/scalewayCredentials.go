// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # ScalewayCredentials (Resource)
//
// Provides a Qovery SCALEWAY credentials resource. This can be used to create and manage Qovery SCALEWAY credentials.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-qovery/sdk/go/qovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qovery.NewScalewayCredentials(ctx, "myScalewayCreds", &qovery.ScalewayCredentialsArgs{
//				OrganizationId:    pulumi.Any(qovery_organization.My_organization.Id),
//				ScalewayAccessKey: pulumi.String("<your-scaleway-access-key>"),
//				ScalewaySecretKey: pulumi.String("<your-scaleway-secret-key>"),
//				ScalewayProjectId: pulumi.String("<your-scaleway-project-id>"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				qovery_organization.My_organization,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import qovery:index/scalewayCredentials:ScalewayCredentials my_scaleway_creds "<organization_id>,<scaleway_credentials_id>"
//
// ```
type ScalewayCredentials struct {
	pulumi.CustomResourceState

	// Name of the scaleway credentials.
	Name pulumi.StringOutput `pulumi:"name"`
	// Id of the organization.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Your SCALEWAY access key id.
	ScalewayAccessKey pulumi.StringOutput `pulumi:"scalewayAccessKey"`
	// Your SCALEWAY project ID.
	ScalewayProjectId pulumi.StringOutput `pulumi:"scalewayProjectId"`
	// Your SCALEWAY secret key.
	ScalewaySecretKey pulumi.StringOutput `pulumi:"scalewaySecretKey"`
}

// NewScalewayCredentials registers a new resource with the given unique name, arguments, and options.
func NewScalewayCredentials(ctx *pulumi.Context,
	name string, args *ScalewayCredentialsArgs, opts ...pulumi.ResourceOption) (*ScalewayCredentials, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.ScalewayAccessKey == nil {
		return nil, errors.New("invalid value for required argument 'ScalewayAccessKey'")
	}
	if args.ScalewayProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ScalewayProjectId'")
	}
	if args.ScalewaySecretKey == nil {
		return nil, errors.New("invalid value for required argument 'ScalewaySecretKey'")
	}
	if args.ScalewayAccessKey != nil {
		args.ScalewayAccessKey = pulumi.ToSecret(args.ScalewayAccessKey).(pulumi.StringInput)
	}
	if args.ScalewayProjectId != nil {
		args.ScalewayProjectId = pulumi.ToSecret(args.ScalewayProjectId).(pulumi.StringInput)
	}
	if args.ScalewaySecretKey != nil {
		args.ScalewaySecretKey = pulumi.ToSecret(args.ScalewaySecretKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"scalewayAccessKey",
		"scalewayProjectId",
		"scalewaySecretKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ScalewayCredentials
	err := ctx.RegisterResource("qovery:index/scalewayCredentials:ScalewayCredentials", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScalewayCredentials gets an existing ScalewayCredentials resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScalewayCredentials(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScalewayCredentialsState, opts ...pulumi.ResourceOption) (*ScalewayCredentials, error) {
	var resource ScalewayCredentials
	err := ctx.ReadResource("qovery:index/scalewayCredentials:ScalewayCredentials", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScalewayCredentials resources.
type scalewayCredentialsState struct {
	// Name of the scaleway credentials.
	Name *string `pulumi:"name"`
	// Id of the organization.
	OrganizationId *string `pulumi:"organizationId"`
	// Your SCALEWAY access key id.
	ScalewayAccessKey *string `pulumi:"scalewayAccessKey"`
	// Your SCALEWAY project ID.
	ScalewayProjectId *string `pulumi:"scalewayProjectId"`
	// Your SCALEWAY secret key.
	ScalewaySecretKey *string `pulumi:"scalewaySecretKey"`
}

type ScalewayCredentialsState struct {
	// Name of the scaleway credentials.
	Name pulumi.StringPtrInput
	// Id of the organization.
	OrganizationId pulumi.StringPtrInput
	// Your SCALEWAY access key id.
	ScalewayAccessKey pulumi.StringPtrInput
	// Your SCALEWAY project ID.
	ScalewayProjectId pulumi.StringPtrInput
	// Your SCALEWAY secret key.
	ScalewaySecretKey pulumi.StringPtrInput
}

func (ScalewayCredentialsState) ElementType() reflect.Type {
	return reflect.TypeOf((*scalewayCredentialsState)(nil)).Elem()
}

type scalewayCredentialsArgs struct {
	// Name of the scaleway credentials.
	Name *string `pulumi:"name"`
	// Id of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// Your SCALEWAY access key id.
	ScalewayAccessKey string `pulumi:"scalewayAccessKey"`
	// Your SCALEWAY project ID.
	ScalewayProjectId string `pulumi:"scalewayProjectId"`
	// Your SCALEWAY secret key.
	ScalewaySecretKey string `pulumi:"scalewaySecretKey"`
}

// The set of arguments for constructing a ScalewayCredentials resource.
type ScalewayCredentialsArgs struct {
	// Name of the scaleway credentials.
	Name pulumi.StringPtrInput
	// Id of the organization.
	OrganizationId pulumi.StringInput
	// Your SCALEWAY access key id.
	ScalewayAccessKey pulumi.StringInput
	// Your SCALEWAY project ID.
	ScalewayProjectId pulumi.StringInput
	// Your SCALEWAY secret key.
	ScalewaySecretKey pulumi.StringInput
}

func (ScalewayCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scalewayCredentialsArgs)(nil)).Elem()
}

type ScalewayCredentialsInput interface {
	pulumi.Input

	ToScalewayCredentialsOutput() ScalewayCredentialsOutput
	ToScalewayCredentialsOutputWithContext(ctx context.Context) ScalewayCredentialsOutput
}

func (*ScalewayCredentials) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayCredentials)(nil)).Elem()
}

func (i *ScalewayCredentials) ToScalewayCredentialsOutput() ScalewayCredentialsOutput {
	return i.ToScalewayCredentialsOutputWithContext(context.Background())
}

func (i *ScalewayCredentials) ToScalewayCredentialsOutputWithContext(ctx context.Context) ScalewayCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayCredentialsOutput)
}

// ScalewayCredentialsArrayInput is an input type that accepts ScalewayCredentialsArray and ScalewayCredentialsArrayOutput values.
// You can construct a concrete instance of `ScalewayCredentialsArrayInput` via:
//
//	ScalewayCredentialsArray{ ScalewayCredentialsArgs{...} }
type ScalewayCredentialsArrayInput interface {
	pulumi.Input

	ToScalewayCredentialsArrayOutput() ScalewayCredentialsArrayOutput
	ToScalewayCredentialsArrayOutputWithContext(context.Context) ScalewayCredentialsArrayOutput
}

type ScalewayCredentialsArray []ScalewayCredentialsInput

func (ScalewayCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalewayCredentials)(nil)).Elem()
}

func (i ScalewayCredentialsArray) ToScalewayCredentialsArrayOutput() ScalewayCredentialsArrayOutput {
	return i.ToScalewayCredentialsArrayOutputWithContext(context.Background())
}

func (i ScalewayCredentialsArray) ToScalewayCredentialsArrayOutputWithContext(ctx context.Context) ScalewayCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayCredentialsArrayOutput)
}

// ScalewayCredentialsMapInput is an input type that accepts ScalewayCredentialsMap and ScalewayCredentialsMapOutput values.
// You can construct a concrete instance of `ScalewayCredentialsMapInput` via:
//
//	ScalewayCredentialsMap{ "key": ScalewayCredentialsArgs{...} }
type ScalewayCredentialsMapInput interface {
	pulumi.Input

	ToScalewayCredentialsMapOutput() ScalewayCredentialsMapOutput
	ToScalewayCredentialsMapOutputWithContext(context.Context) ScalewayCredentialsMapOutput
}

type ScalewayCredentialsMap map[string]ScalewayCredentialsInput

func (ScalewayCredentialsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalewayCredentials)(nil)).Elem()
}

func (i ScalewayCredentialsMap) ToScalewayCredentialsMapOutput() ScalewayCredentialsMapOutput {
	return i.ToScalewayCredentialsMapOutputWithContext(context.Background())
}

func (i ScalewayCredentialsMap) ToScalewayCredentialsMapOutputWithContext(ctx context.Context) ScalewayCredentialsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalewayCredentialsMapOutput)
}

type ScalewayCredentialsOutput struct{ *pulumi.OutputState }

func (ScalewayCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalewayCredentials)(nil)).Elem()
}

func (o ScalewayCredentialsOutput) ToScalewayCredentialsOutput() ScalewayCredentialsOutput {
	return o
}

func (o ScalewayCredentialsOutput) ToScalewayCredentialsOutputWithContext(ctx context.Context) ScalewayCredentialsOutput {
	return o
}

// Name of the scaleway credentials.
func (o ScalewayCredentialsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalewayCredentials) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Id of the organization.
func (o ScalewayCredentialsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalewayCredentials) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Your SCALEWAY access key id.
func (o ScalewayCredentialsOutput) ScalewayAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalewayCredentials) pulumi.StringOutput { return v.ScalewayAccessKey }).(pulumi.StringOutput)
}

// Your SCALEWAY project ID.
func (o ScalewayCredentialsOutput) ScalewayProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalewayCredentials) pulumi.StringOutput { return v.ScalewayProjectId }).(pulumi.StringOutput)
}

// Your SCALEWAY secret key.
func (o ScalewayCredentialsOutput) ScalewaySecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalewayCredentials) pulumi.StringOutput { return v.ScalewaySecretKey }).(pulumi.StringOutput)
}

type ScalewayCredentialsArrayOutput struct{ *pulumi.OutputState }

func (ScalewayCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalewayCredentials)(nil)).Elem()
}

func (o ScalewayCredentialsArrayOutput) ToScalewayCredentialsArrayOutput() ScalewayCredentialsArrayOutput {
	return o
}

func (o ScalewayCredentialsArrayOutput) ToScalewayCredentialsArrayOutputWithContext(ctx context.Context) ScalewayCredentialsArrayOutput {
	return o
}

func (o ScalewayCredentialsArrayOutput) Index(i pulumi.IntInput) ScalewayCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScalewayCredentials {
		return vs[0].([]*ScalewayCredentials)[vs[1].(int)]
	}).(ScalewayCredentialsOutput)
}

type ScalewayCredentialsMapOutput struct{ *pulumi.OutputState }

func (ScalewayCredentialsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalewayCredentials)(nil)).Elem()
}

func (o ScalewayCredentialsMapOutput) ToScalewayCredentialsMapOutput() ScalewayCredentialsMapOutput {
	return o
}

func (o ScalewayCredentialsMapOutput) ToScalewayCredentialsMapOutputWithContext(ctx context.Context) ScalewayCredentialsMapOutput {
	return o
}

func (o ScalewayCredentialsMapOutput) MapIndex(k pulumi.StringInput) ScalewayCredentialsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScalewayCredentials {
		return vs[0].(map[string]*ScalewayCredentials)[vs[1].(string)]
	}).(ScalewayCredentialsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayCredentialsInput)(nil)).Elem(), &ScalewayCredentials{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayCredentialsArrayInput)(nil)).Elem(), ScalewayCredentialsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalewayCredentialsMapInput)(nil)).Elem(), ScalewayCredentialsMap{})
	pulumi.RegisterOutputType(ScalewayCredentialsOutput{})
	pulumi.RegisterOutputType(ScalewayCredentialsArrayOutput{})
	pulumi.RegisterOutputType(ScalewayCredentialsMapOutput{})
}
