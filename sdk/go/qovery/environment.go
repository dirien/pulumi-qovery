// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// ```sh
//
//	$ pulumi import qovery:index/environment:Environment my_environment "<environment_id>"
//
// ```
type Environment struct {
	pulumi.CustomResourceState

	// List of built-in environment variables linked to this environment.
	BuiltInEnvironmentVariables EnvironmentBuiltInEnvironmentVariableArrayOutput `pulumi:"builtInEnvironmentVariables"`
	// Id of the cluster [NOTE: can't be updated after creation].
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// List of environment variable aliases linked to this environment.
	EnvironmentVariableAliases EnvironmentEnvironmentVariableAliasArrayOutput `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this environment.
	EnvironmentVariableOverrides EnvironmentEnvironmentVariableOverrideArrayOutput `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this environment.
	EnvironmentVariables EnvironmentEnvironmentVariableArrayOutput `pulumi:"environmentVariables"`
	// Mode of the environment [NOTE: can't be updated after creation]. - Can be: `DEVELOPMENT`, `PREVIEW`, `PRODUCTION`,
	// `STAGING`. - Default: `DEVELOPMENT`.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Name of the environment.
	Name pulumi.StringOutput `pulumi:"name"`
	// Id of the project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// List of secret aliases linked to this environment.
	SecretAliases EnvironmentSecretAliasArrayOutput `pulumi:"secretAliases"`
	// List of secret overrides linked to this environment.
	SecretOverrides EnvironmentSecretOverrideArrayOutput `pulumi:"secretOverrides"`
	// List of secrets linked to this environment.
	Secrets EnvironmentSecretArrayOutput `pulumi:"secrets"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Environment
	err := ctx.RegisterResource("qovery:index/environment:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("qovery:index/environment:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
	// List of built-in environment variables linked to this environment.
	BuiltInEnvironmentVariables []EnvironmentBuiltInEnvironmentVariable `pulumi:"builtInEnvironmentVariables"`
	// Id of the cluster [NOTE: can't be updated after creation].
	ClusterId *string `pulumi:"clusterId"`
	// List of environment variable aliases linked to this environment.
	EnvironmentVariableAliases []EnvironmentEnvironmentVariableAlias `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this environment.
	EnvironmentVariableOverrides []EnvironmentEnvironmentVariableOverride `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this environment.
	EnvironmentVariables []EnvironmentEnvironmentVariable `pulumi:"environmentVariables"`
	// Mode of the environment [NOTE: can't be updated after creation]. - Can be: `DEVELOPMENT`, `PREVIEW`, `PRODUCTION`,
	// `STAGING`. - Default: `DEVELOPMENT`.
	Mode *string `pulumi:"mode"`
	// Name of the environment.
	Name *string `pulumi:"name"`
	// Id of the project.
	ProjectId *string `pulumi:"projectId"`
	// List of secret aliases linked to this environment.
	SecretAliases []EnvironmentSecretAlias `pulumi:"secretAliases"`
	// List of secret overrides linked to this environment.
	SecretOverrides []EnvironmentSecretOverride `pulumi:"secretOverrides"`
	// List of secrets linked to this environment.
	Secrets []EnvironmentSecret `pulumi:"secrets"`
}

type EnvironmentState struct {
	// List of built-in environment variables linked to this environment.
	BuiltInEnvironmentVariables EnvironmentBuiltInEnvironmentVariableArrayInput
	// Id of the cluster [NOTE: can't be updated after creation].
	ClusterId pulumi.StringPtrInput
	// List of environment variable aliases linked to this environment.
	EnvironmentVariableAliases EnvironmentEnvironmentVariableAliasArrayInput
	// List of environment variable overrides linked to this environment.
	EnvironmentVariableOverrides EnvironmentEnvironmentVariableOverrideArrayInput
	// List of environment variables linked to this environment.
	EnvironmentVariables EnvironmentEnvironmentVariableArrayInput
	// Mode of the environment [NOTE: can't be updated after creation]. - Can be: `DEVELOPMENT`, `PREVIEW`, `PRODUCTION`,
	// `STAGING`. - Default: `DEVELOPMENT`.
	Mode pulumi.StringPtrInput
	// Name of the environment.
	Name pulumi.StringPtrInput
	// Id of the project.
	ProjectId pulumi.StringPtrInput
	// List of secret aliases linked to this environment.
	SecretAliases EnvironmentSecretAliasArrayInput
	// List of secret overrides linked to this environment.
	SecretOverrides EnvironmentSecretOverrideArrayInput
	// List of secrets linked to this environment.
	Secrets EnvironmentSecretArrayInput
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	// Id of the cluster [NOTE: can't be updated after creation].
	ClusterId string `pulumi:"clusterId"`
	// List of environment variable aliases linked to this environment.
	EnvironmentVariableAliases []EnvironmentEnvironmentVariableAlias `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this environment.
	EnvironmentVariableOverrides []EnvironmentEnvironmentVariableOverride `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this environment.
	EnvironmentVariables []EnvironmentEnvironmentVariable `pulumi:"environmentVariables"`
	// Mode of the environment [NOTE: can't be updated after creation]. - Can be: `DEVELOPMENT`, `PREVIEW`, `PRODUCTION`,
	// `STAGING`. - Default: `DEVELOPMENT`.
	Mode *string `pulumi:"mode"`
	// Name of the environment.
	Name *string `pulumi:"name"`
	// Id of the project.
	ProjectId string `pulumi:"projectId"`
	// List of secret aliases linked to this environment.
	SecretAliases []EnvironmentSecretAlias `pulumi:"secretAliases"`
	// List of secret overrides linked to this environment.
	SecretOverrides []EnvironmentSecretOverride `pulumi:"secretOverrides"`
	// List of secrets linked to this environment.
	Secrets []EnvironmentSecret `pulumi:"secrets"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	// Id of the cluster [NOTE: can't be updated after creation].
	ClusterId pulumi.StringInput
	// List of environment variable aliases linked to this environment.
	EnvironmentVariableAliases EnvironmentEnvironmentVariableAliasArrayInput
	// List of environment variable overrides linked to this environment.
	EnvironmentVariableOverrides EnvironmentEnvironmentVariableOverrideArrayInput
	// List of environment variables linked to this environment.
	EnvironmentVariables EnvironmentEnvironmentVariableArrayInput
	// Mode of the environment [NOTE: can't be updated after creation]. - Can be: `DEVELOPMENT`, `PREVIEW`, `PRODUCTION`,
	// `STAGING`. - Default: `DEVELOPMENT`.
	Mode pulumi.StringPtrInput
	// Name of the environment.
	Name pulumi.StringPtrInput
	// Id of the project.
	ProjectId pulumi.StringInput
	// List of secret aliases linked to this environment.
	SecretAliases EnvironmentSecretAliasArrayInput
	// List of secret overrides linked to this environment.
	SecretOverrides EnvironmentSecretOverrideArrayInput
	// List of secrets linked to this environment.
	Secrets EnvironmentSecretArrayInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput
}

func (*Environment) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (i *Environment) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i *Environment) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

// EnvironmentArrayInput is an input type that accepts EnvironmentArray and EnvironmentArrayOutput values.
// You can construct a concrete instance of `EnvironmentArrayInput` via:
//
//	EnvironmentArray{ EnvironmentArgs{...} }
type EnvironmentArrayInput interface {
	pulumi.Input

	ToEnvironmentArrayOutput() EnvironmentArrayOutput
	ToEnvironmentArrayOutputWithContext(context.Context) EnvironmentArrayOutput
}

type EnvironmentArray []EnvironmentInput

func (EnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Environment)(nil)).Elem()
}

func (i EnvironmentArray) ToEnvironmentArrayOutput() EnvironmentArrayOutput {
	return i.ToEnvironmentArrayOutputWithContext(context.Background())
}

func (i EnvironmentArray) ToEnvironmentArrayOutputWithContext(ctx context.Context) EnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentArrayOutput)
}

// EnvironmentMapInput is an input type that accepts EnvironmentMap and EnvironmentMapOutput values.
// You can construct a concrete instance of `EnvironmentMapInput` via:
//
//	EnvironmentMap{ "key": EnvironmentArgs{...} }
type EnvironmentMapInput interface {
	pulumi.Input

	ToEnvironmentMapOutput() EnvironmentMapOutput
	ToEnvironmentMapOutputWithContext(context.Context) EnvironmentMapOutput
}

type EnvironmentMap map[string]EnvironmentInput

func (EnvironmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Environment)(nil)).Elem()
}

func (i EnvironmentMap) ToEnvironmentMapOutput() EnvironmentMapOutput {
	return i.ToEnvironmentMapOutputWithContext(context.Background())
}

func (i EnvironmentMap) ToEnvironmentMapOutputWithContext(ctx context.Context) EnvironmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMapOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

// List of built-in environment variables linked to this environment.
func (o EnvironmentOutput) BuiltInEnvironmentVariables() EnvironmentBuiltInEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentBuiltInEnvironmentVariableArrayOutput {
		return v.BuiltInEnvironmentVariables
	}).(EnvironmentBuiltInEnvironmentVariableArrayOutput)
}

// Id of the cluster [NOTE: can't be updated after creation].
func (o EnvironmentOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// List of environment variable aliases linked to this environment.
func (o EnvironmentOutput) EnvironmentVariableAliases() EnvironmentEnvironmentVariableAliasArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentEnvironmentVariableAliasArrayOutput {
		return v.EnvironmentVariableAliases
	}).(EnvironmentEnvironmentVariableAliasArrayOutput)
}

// List of environment variable overrides linked to this environment.
func (o EnvironmentOutput) EnvironmentVariableOverrides() EnvironmentEnvironmentVariableOverrideArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentEnvironmentVariableOverrideArrayOutput {
		return v.EnvironmentVariableOverrides
	}).(EnvironmentEnvironmentVariableOverrideArrayOutput)
}

// List of environment variables linked to this environment.
func (o EnvironmentOutput) EnvironmentVariables() EnvironmentEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentEnvironmentVariableArrayOutput { return v.EnvironmentVariables }).(EnvironmentEnvironmentVariableArrayOutput)
}

// Mode of the environment [NOTE: can't be updated after creation]. - Can be: `DEVELOPMENT`, `PREVIEW`, `PRODUCTION`,
// `STAGING`. - Default: `DEVELOPMENT`.
func (o EnvironmentOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// Name of the environment.
func (o EnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Id of the project.
func (o EnvironmentOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// List of secret aliases linked to this environment.
func (o EnvironmentOutput) SecretAliases() EnvironmentSecretAliasArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentSecretAliasArrayOutput { return v.SecretAliases }).(EnvironmentSecretAliasArrayOutput)
}

// List of secret overrides linked to this environment.
func (o EnvironmentOutput) SecretOverrides() EnvironmentSecretOverrideArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentSecretOverrideArrayOutput { return v.SecretOverrides }).(EnvironmentSecretOverrideArrayOutput)
}

// List of secrets linked to this environment.
func (o EnvironmentOutput) Secrets() EnvironmentSecretArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentSecretArrayOutput { return v.Secrets }).(EnvironmentSecretArrayOutput)
}

type EnvironmentArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Environment)(nil)).Elem()
}

func (o EnvironmentArrayOutput) ToEnvironmentArrayOutput() EnvironmentArrayOutput {
	return o
}

func (o EnvironmentArrayOutput) ToEnvironmentArrayOutputWithContext(ctx context.Context) EnvironmentArrayOutput {
	return o
}

func (o EnvironmentArrayOutput) Index(i pulumi.IntInput) EnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Environment {
		return vs[0].([]*Environment)[vs[1].(int)]
	}).(EnvironmentOutput)
}

type EnvironmentMapOutput struct{ *pulumi.OutputState }

func (EnvironmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Environment)(nil)).Elem()
}

func (o EnvironmentMapOutput) ToEnvironmentMapOutput() EnvironmentMapOutput {
	return o
}

func (o EnvironmentMapOutput) ToEnvironmentMapOutputWithContext(ctx context.Context) EnvironmentMapOutput {
	return o
}

func (o EnvironmentMapOutput) MapIndex(k pulumi.StringInput) EnvironmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Environment {
		return vs[0].(map[string]*Environment)[vs[1].(string)]
	}).(EnvironmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), &Environment{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentArrayInput)(nil)).Elem(), EnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMapInput)(nil)).Elem(), EnvironmentMap{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentMapOutput{})
}
