// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # DeploymentStage (Resource)
//
// Provides a Qovery deployment stage resource. This can be used to create and manage Qovery deployment stages.
//
// ## Example
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-qovery/sdk/go/qovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qovery.NewDeploymentStage(ctx, "myDeploymentStage", &qovery.DeploymentStageArgs{
//				EnvironmentId: pulumi.Any(qovery_environment.My_environment.Id),
//				Description:   pulumi.String(""),
//				IsAfter:       pulumi.Any(qovery_deployment_stage.First_deployment_stage.Id),
//				IsBefore:      pulumi.Any(qovery_deployment_stage.Third_deployment_stage.Id),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				qovery_environment.My_environment,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// You can find complete examples within these repositories:
//
// * Deploy services with a specific order
//
// ## Import
//
// ```sh
//
//	$ pulumi import qovery:index/deploymentStage:DeploymentStage my_deployment_stage "<deployment_stage_id>"
//
// ```
type DeploymentStage struct {
	pulumi.CustomResourceState

	// Description of the deployment stage.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Id of the environment.
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// Move the current deployment stage after the target deployment stage
	IsAfter pulumi.StringPtrOutput `pulumi:"isAfter"`
	// Move the current deployment stage before the target deployment stage
	IsBefore pulumi.StringPtrOutput `pulumi:"isBefore"`
	// Name of the deployment stage.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDeploymentStage registers a new resource with the given unique name, arguments, and options.
func NewDeploymentStage(ctx *pulumi.Context,
	name string, args *DeploymentStageArgs, opts ...pulumi.ResourceOption) (*DeploymentStage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeploymentStage
	err := ctx.RegisterResource("qovery:index/deploymentStage:DeploymentStage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentStage gets an existing DeploymentStage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentStageState, opts ...pulumi.ResourceOption) (*DeploymentStage, error) {
	var resource DeploymentStage
	err := ctx.ReadResource("qovery:index/deploymentStage:DeploymentStage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentStage resources.
type deploymentStageState struct {
	// Description of the deployment stage.
	Description *string `pulumi:"description"`
	// Id of the environment.
	EnvironmentId *string `pulumi:"environmentId"`
	// Move the current deployment stage after the target deployment stage
	IsAfter *string `pulumi:"isAfter"`
	// Move the current deployment stage before the target deployment stage
	IsBefore *string `pulumi:"isBefore"`
	// Name of the deployment stage.
	Name *string `pulumi:"name"`
}

type DeploymentStageState struct {
	// Description of the deployment stage.
	Description pulumi.StringPtrInput
	// Id of the environment.
	EnvironmentId pulumi.StringPtrInput
	// Move the current deployment stage after the target deployment stage
	IsAfter pulumi.StringPtrInput
	// Move the current deployment stage before the target deployment stage
	IsBefore pulumi.StringPtrInput
	// Name of the deployment stage.
	Name pulumi.StringPtrInput
}

func (DeploymentStageState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentStageState)(nil)).Elem()
}

type deploymentStageArgs struct {
	// Description of the deployment stage.
	Description *string `pulumi:"description"`
	// Id of the environment.
	EnvironmentId string `pulumi:"environmentId"`
	// Move the current deployment stage after the target deployment stage
	IsAfter *string `pulumi:"isAfter"`
	// Move the current deployment stage before the target deployment stage
	IsBefore *string `pulumi:"isBefore"`
	// Name of the deployment stage.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a DeploymentStage resource.
type DeploymentStageArgs struct {
	// Description of the deployment stage.
	Description pulumi.StringPtrInput
	// Id of the environment.
	EnvironmentId pulumi.StringInput
	// Move the current deployment stage after the target deployment stage
	IsAfter pulumi.StringPtrInput
	// Move the current deployment stage before the target deployment stage
	IsBefore pulumi.StringPtrInput
	// Name of the deployment stage.
	Name pulumi.StringPtrInput
}

func (DeploymentStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentStageArgs)(nil)).Elem()
}

type DeploymentStageInput interface {
	pulumi.Input

	ToDeploymentStageOutput() DeploymentStageOutput
	ToDeploymentStageOutputWithContext(ctx context.Context) DeploymentStageOutput
}

func (*DeploymentStage) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentStage)(nil)).Elem()
}

func (i *DeploymentStage) ToDeploymentStageOutput() DeploymentStageOutput {
	return i.ToDeploymentStageOutputWithContext(context.Background())
}

func (i *DeploymentStage) ToDeploymentStageOutputWithContext(ctx context.Context) DeploymentStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStageOutput)
}

// DeploymentStageArrayInput is an input type that accepts DeploymentStageArray and DeploymentStageArrayOutput values.
// You can construct a concrete instance of `DeploymentStageArrayInput` via:
//
//	DeploymentStageArray{ DeploymentStageArgs{...} }
type DeploymentStageArrayInput interface {
	pulumi.Input

	ToDeploymentStageArrayOutput() DeploymentStageArrayOutput
	ToDeploymentStageArrayOutputWithContext(context.Context) DeploymentStageArrayOutput
}

type DeploymentStageArray []DeploymentStageInput

func (DeploymentStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentStage)(nil)).Elem()
}

func (i DeploymentStageArray) ToDeploymentStageArrayOutput() DeploymentStageArrayOutput {
	return i.ToDeploymentStageArrayOutputWithContext(context.Background())
}

func (i DeploymentStageArray) ToDeploymentStageArrayOutputWithContext(ctx context.Context) DeploymentStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStageArrayOutput)
}

// DeploymentStageMapInput is an input type that accepts DeploymentStageMap and DeploymentStageMapOutput values.
// You can construct a concrete instance of `DeploymentStageMapInput` via:
//
//	DeploymentStageMap{ "key": DeploymentStageArgs{...} }
type DeploymentStageMapInput interface {
	pulumi.Input

	ToDeploymentStageMapOutput() DeploymentStageMapOutput
	ToDeploymentStageMapOutputWithContext(context.Context) DeploymentStageMapOutput
}

type DeploymentStageMap map[string]DeploymentStageInput

func (DeploymentStageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentStage)(nil)).Elem()
}

func (i DeploymentStageMap) ToDeploymentStageMapOutput() DeploymentStageMapOutput {
	return i.ToDeploymentStageMapOutputWithContext(context.Background())
}

func (i DeploymentStageMap) ToDeploymentStageMapOutputWithContext(ctx context.Context) DeploymentStageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStageMapOutput)
}

type DeploymentStageOutput struct{ *pulumi.OutputState }

func (DeploymentStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentStage)(nil)).Elem()
}

func (o DeploymentStageOutput) ToDeploymentStageOutput() DeploymentStageOutput {
	return o
}

func (o DeploymentStageOutput) ToDeploymentStageOutputWithContext(ctx context.Context) DeploymentStageOutput {
	return o
}

// Description of the deployment stage.
func (o DeploymentStageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStage) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Id of the environment.
func (o DeploymentStageOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentStage) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// Move the current deployment stage after the target deployment stage
func (o DeploymentStageOutput) IsAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStage) pulumi.StringPtrOutput { return v.IsAfter }).(pulumi.StringPtrOutput)
}

// Move the current deployment stage before the target deployment stage
func (o DeploymentStageOutput) IsBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStage) pulumi.StringPtrOutput { return v.IsBefore }).(pulumi.StringPtrOutput)
}

// Name of the deployment stage.
func (o DeploymentStageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentStage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type DeploymentStageArrayOutput struct{ *pulumi.OutputState }

func (DeploymentStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentStage)(nil)).Elem()
}

func (o DeploymentStageArrayOutput) ToDeploymentStageArrayOutput() DeploymentStageArrayOutput {
	return o
}

func (o DeploymentStageArrayOutput) ToDeploymentStageArrayOutputWithContext(ctx context.Context) DeploymentStageArrayOutput {
	return o
}

func (o DeploymentStageArrayOutput) Index(i pulumi.IntInput) DeploymentStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeploymentStage {
		return vs[0].([]*DeploymentStage)[vs[1].(int)]
	}).(DeploymentStageOutput)
}

type DeploymentStageMapOutput struct{ *pulumi.OutputState }

func (DeploymentStageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentStage)(nil)).Elem()
}

func (o DeploymentStageMapOutput) ToDeploymentStageMapOutput() DeploymentStageMapOutput {
	return o
}

func (o DeploymentStageMapOutput) ToDeploymentStageMapOutputWithContext(ctx context.Context) DeploymentStageMapOutput {
	return o
}

func (o DeploymentStageMapOutput) MapIndex(k pulumi.StringInput) DeploymentStageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeploymentStage {
		return vs[0].(map[string]*DeploymentStage)[vs[1].(string)]
	}).(DeploymentStageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentStageInput)(nil)).Elem(), &DeploymentStage{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentStageArrayInput)(nil)).Elem(), DeploymentStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentStageMapInput)(nil)).Elem(), DeploymentStageMap{})
	pulumi.RegisterOutputType(DeploymentStageOutput{})
	pulumi.RegisterOutputType(DeploymentStageArrayOutput{})
	pulumi.RegisterOutputType(DeploymentStageMapOutput{})
}
