// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Project (Data Source)
//
// Provides a Qovery project resource. This can be used to create and manage Qovery projects.
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-qovery/sdk/go/qovery"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := qovery.LookupProject(ctx, &qovery.LookupProjectArgs{
//				Id: "<project_id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupProject(ctx *pulumi.Context, args *LookupProjectArgs, opts ...pulumi.InvokeOption) (*LookupProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectResult
	err := ctx.Invoke("qovery:index/getProject:getProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProject.
type LookupProjectArgs struct {
	// Description of the project.
	Description *string `pulumi:"description"`
	// List of environment variable aliases linked to this project.
	EnvironmentVariableAliases []GetProjectEnvironmentVariableAlias `pulumi:"environmentVariableAliases"`
	// List of environment variables linked to this project.
	EnvironmentVariables []GetProjectEnvironmentVariable `pulumi:"environmentVariables"`
	// Id of the project.
	Id string `pulumi:"id"`
	// List of secret aliases linked to this project.
	SecretAliases []GetProjectSecretAlias `pulumi:"secretAliases"`
	// List of secrets linked to this project.
	Secrets []GetProjectSecret `pulumi:"secrets"`
}

// A collection of values returned by getProject.
type LookupProjectResult struct {
	// List of built-in environment variables linked to this project.
	BuiltInEnvironmentVariables []GetProjectBuiltInEnvironmentVariable `pulumi:"builtInEnvironmentVariables"`
	// Description of the project.
	Description string `pulumi:"description"`
	// List of environment variable aliases linked to this project.
	EnvironmentVariableAliases []GetProjectEnvironmentVariableAlias `pulumi:"environmentVariableAliases"`
	// List of environment variables linked to this project.
	EnvironmentVariables []GetProjectEnvironmentVariable `pulumi:"environmentVariables"`
	// Id of the project.
	Id string `pulumi:"id"`
	// Name of the project.
	Name string `pulumi:"name"`
	// Id of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// List of secret aliases linked to this project.
	SecretAliases []GetProjectSecretAlias `pulumi:"secretAliases"`
	// List of secrets linked to this project.
	Secrets []GetProjectSecret `pulumi:"secrets"`
}

func LookupProjectOutput(ctx *pulumi.Context, args LookupProjectOutputArgs, opts ...pulumi.InvokeOption) LookupProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectResult, error) {
			args := v.(LookupProjectArgs)
			r, err := LookupProject(ctx, &args, opts...)
			var s LookupProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProjectResultOutput)
}

// A collection of arguments for invoking getProject.
type LookupProjectOutputArgs struct {
	// Description of the project.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of environment variable aliases linked to this project.
	EnvironmentVariableAliases GetProjectEnvironmentVariableAliasArrayInput `pulumi:"environmentVariableAliases"`
	// List of environment variables linked to this project.
	EnvironmentVariables GetProjectEnvironmentVariableArrayInput `pulumi:"environmentVariables"`
	// Id of the project.
	Id pulumi.StringInput `pulumi:"id"`
	// List of secret aliases linked to this project.
	SecretAliases GetProjectSecretAliasArrayInput `pulumi:"secretAliases"`
	// List of secrets linked to this project.
	Secrets GetProjectSecretArrayInput `pulumi:"secrets"`
}

func (LookupProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectArgs)(nil)).Elem()
}

// A collection of values returned by getProject.
type LookupProjectResultOutput struct{ *pulumi.OutputState }

func (LookupProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectResult)(nil)).Elem()
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutput() LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutputWithContext(ctx context.Context) LookupProjectResultOutput {
	return o
}

// List of built-in environment variables linked to this project.
func (o LookupProjectResultOutput) BuiltInEnvironmentVariables() GetProjectBuiltInEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []GetProjectBuiltInEnvironmentVariable {
		return v.BuiltInEnvironmentVariables
	}).(GetProjectBuiltInEnvironmentVariableArrayOutput)
}

// Description of the project.
func (o LookupProjectResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Description }).(pulumi.StringOutput)
}

// List of environment variable aliases linked to this project.
func (o LookupProjectResultOutput) EnvironmentVariableAliases() GetProjectEnvironmentVariableAliasArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []GetProjectEnvironmentVariableAlias { return v.EnvironmentVariableAliases }).(GetProjectEnvironmentVariableAliasArrayOutput)
}

// List of environment variables linked to this project.
func (o LookupProjectResultOutput) EnvironmentVariables() GetProjectEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []GetProjectEnvironmentVariable { return v.EnvironmentVariables }).(GetProjectEnvironmentVariableArrayOutput)
}

// Id of the project.
func (o LookupProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the project.
func (o LookupProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

// Id of the organization.
func (o LookupProjectResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// List of secret aliases linked to this project.
func (o LookupProjectResultOutput) SecretAliases() GetProjectSecretAliasArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []GetProjectSecretAlias { return v.SecretAliases }).(GetProjectSecretAliasArrayOutput)
}

// List of secrets linked to this project.
func (o LookupProjectResultOutput) Secrets() GetProjectSecretArrayOutput {
	return o.ApplyT(func(v LookupProjectResult) []GetProjectSecret { return v.Secrets }).(GetProjectSecretArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectResultOutput{})
}
