// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Application (Resource)
//
// Provides a Qovery application resource. This can be used to create and manage Qovery applications.
//
// ## Import
//
// ```sh
// $ pulumi import qovery:index/application:Application my_application "<application_id>"
// ```
type Application struct {
	pulumi.CustomResourceState

	// Advanced settings.
	AdvancedSettingsJson pulumi.StringOutput `pulumi:"advancedSettingsJson"`
	// List of annotations group ids
	AnnotationsGroupIds pulumi.StringArrayOutput `pulumi:"annotationsGroupIds"`
	// List of arguments of this application.
	Arguments pulumi.StringArrayOutput `pulumi:"arguments"`
	// Specify if the application will be automatically updated after receiving a new image tag.
	AutoDeploy pulumi.BoolOutput `pulumi:"autoDeploy"`
	// Specify if the environment preview option is activated or not for this application. - Default: `false`.
	AutoPreview pulumi.BoolOutput `pulumi:"autoPreview"`
	// Build Mode of the application. - Can be: `BUILDPACKS`, `DOCKER`. - Default: `BUILDPACKS`.
	BuildMode pulumi.StringOutput `pulumi:"buildMode"`
	// Buildpack Language framework. - Required if: `build_mode="BUILDPACKS"`. - Can be: `CLOJURE`, `GO`, `GRADLE`, `GRAILS`,
	// `JAVA`, `JVM`, `NODE_JS`, `PHP`, `PLAY`, `PYTHON`, `SCALA`.
	BuildpackLanguage pulumi.StringPtrOutput `pulumi:"buildpackLanguage"`
	// List of built-in environment variables linked to this application.
	BuiltInEnvironmentVariables ApplicationBuiltInEnvironmentVariableArrayOutput `pulumi:"builtInEnvironmentVariables"`
	// CPU of the application in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu pulumi.IntOutput `pulumi:"cpu"`
	// List of custom domains linked to this application.
	CustomDomains ApplicationCustomDomainArrayOutput `pulumi:"customDomains"`
	// List of deployment restrictions
	DeploymentRestrictions ApplicationDeploymentRestrictionArrayOutput `pulumi:"deploymentRestrictions"`
	// Id of the deployment stage.
	DeploymentStageId pulumi.StringOutput `pulumi:"deploymentStageId"`
	// Dockerfile Path of the application. - Required if: `build_mode="DOCKER"`.
	DockerfilePath pulumi.StringPtrOutput `pulumi:"dockerfilePath"`
	// Entrypoint of the application.
	Entrypoint pulumi.StringPtrOutput `pulumi:"entrypoint"`
	// Id of the environment.
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// List of environment variable aliases linked to this application.
	EnvironmentVariableAliases ApplicationEnvironmentVariableAliasArrayOutput `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this application.
	EnvironmentVariableOverrides ApplicationEnvironmentVariableOverrideArrayOutput `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this application.
	EnvironmentVariables ApplicationEnvironmentVariableArrayOutput `pulumi:"environmentVariables"`
	// The application external FQDN host [NOTE: only if your application is using a publicly accessible port].
	ExternalHost pulumi.StringOutput `pulumi:"externalHost"`
	// Git repository of the application.
	GitRepository ApplicationGitRepositoryOutput `pulumi:"gitRepository"`
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks ApplicationHealthchecksOutput `pulumi:"healthchecks"`
	// Icon URI representing the application.
	IconUri pulumi.StringOutput `pulumi:"iconUri"`
	// The application internal host.
	InternalHost pulumi.StringOutput `pulumi:"internalHost"`
	// List of labels group ids
	LabelsGroupIds pulumi.StringArrayOutput `pulumi:"labelsGroupIds"`
	// Maximum number of instances running for the application. - Must be: `>= -1`. - Default: `1`.
	MaxRunningInstances pulumi.IntOutput `pulumi:"maxRunningInstances"`
	// RAM of the application in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Minimum number of instances running for the application. - Must be: `>= 0`. - Default: `1`.
	MinRunningInstances pulumi.IntOutput `pulumi:"minRunningInstances"`
	// Name of the application.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of ports linked to this application.
	Ports ApplicationPortArrayOutput `pulumi:"ports"`
	// List of secret aliases linked to this application.
	SecretAliases ApplicationSecretAliasArrayOutput `pulumi:"secretAliases"`
	// List of secret overrides linked to this application.
	SecretOverrides ApplicationSecretOverrideArrayOutput `pulumi:"secretOverrides"`
	// List of secrets linked to this application.
	Secrets ApplicationSecretArrayOutput `pulumi:"secrets"`
	// List of storages linked to this application.
	Storages ApplicationStorageArrayOutput `pulumi:"storages"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.GitRepository == nil {
		return nil, errors.New("invalid value for required argument 'GitRepository'")
	}
	if args.Healthchecks == nil {
		return nil, errors.New("invalid value for required argument 'Healthchecks'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Application
	err := ctx.RegisterResource("qovery:index/application:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("qovery:index/application:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
	// Advanced settings.
	AdvancedSettingsJson *string `pulumi:"advancedSettingsJson"`
	// List of annotations group ids
	AnnotationsGroupIds []string `pulumi:"annotationsGroupIds"`
	// List of arguments of this application.
	Arguments []string `pulumi:"arguments"`
	// Specify if the application will be automatically updated after receiving a new image tag.
	AutoDeploy *bool `pulumi:"autoDeploy"`
	// Specify if the environment preview option is activated or not for this application. - Default: `false`.
	AutoPreview *bool `pulumi:"autoPreview"`
	// Build Mode of the application. - Can be: `BUILDPACKS`, `DOCKER`. - Default: `BUILDPACKS`.
	BuildMode *string `pulumi:"buildMode"`
	// Buildpack Language framework. - Required if: `build_mode="BUILDPACKS"`. - Can be: `CLOJURE`, `GO`, `GRADLE`, `GRAILS`,
	// `JAVA`, `JVM`, `NODE_JS`, `PHP`, `PLAY`, `PYTHON`, `SCALA`.
	BuildpackLanguage *string `pulumi:"buildpackLanguage"`
	// List of built-in environment variables linked to this application.
	BuiltInEnvironmentVariables []ApplicationBuiltInEnvironmentVariable `pulumi:"builtInEnvironmentVariables"`
	// CPU of the application in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu *int `pulumi:"cpu"`
	// List of custom domains linked to this application.
	CustomDomains []ApplicationCustomDomain `pulumi:"customDomains"`
	// List of deployment restrictions
	DeploymentRestrictions []ApplicationDeploymentRestriction `pulumi:"deploymentRestrictions"`
	// Id of the deployment stage.
	DeploymentStageId *string `pulumi:"deploymentStageId"`
	// Dockerfile Path of the application. - Required if: `build_mode="DOCKER"`.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// Entrypoint of the application.
	Entrypoint *string `pulumi:"entrypoint"`
	// Id of the environment.
	EnvironmentId *string `pulumi:"environmentId"`
	// List of environment variable aliases linked to this application.
	EnvironmentVariableAliases []ApplicationEnvironmentVariableAlias `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this application.
	EnvironmentVariableOverrides []ApplicationEnvironmentVariableOverride `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this application.
	EnvironmentVariables []ApplicationEnvironmentVariable `pulumi:"environmentVariables"`
	// The application external FQDN host [NOTE: only if your application is using a publicly accessible port].
	ExternalHost *string `pulumi:"externalHost"`
	// Git repository of the application.
	GitRepository *ApplicationGitRepository `pulumi:"gitRepository"`
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks *ApplicationHealthchecks `pulumi:"healthchecks"`
	// Icon URI representing the application.
	IconUri *string `pulumi:"iconUri"`
	// The application internal host.
	InternalHost *string `pulumi:"internalHost"`
	// List of labels group ids
	LabelsGroupIds []string `pulumi:"labelsGroupIds"`
	// Maximum number of instances running for the application. - Must be: `>= -1`. - Default: `1`.
	MaxRunningInstances *int `pulumi:"maxRunningInstances"`
	// RAM of the application in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory *int `pulumi:"memory"`
	// Minimum number of instances running for the application. - Must be: `>= 0`. - Default: `1`.
	MinRunningInstances *int `pulumi:"minRunningInstances"`
	// Name of the application.
	Name *string `pulumi:"name"`
	// List of ports linked to this application.
	Ports []ApplicationPort `pulumi:"ports"`
	// List of secret aliases linked to this application.
	SecretAliases []ApplicationSecretAlias `pulumi:"secretAliases"`
	// List of secret overrides linked to this application.
	SecretOverrides []ApplicationSecretOverride `pulumi:"secretOverrides"`
	// List of secrets linked to this application.
	Secrets []ApplicationSecret `pulumi:"secrets"`
	// List of storages linked to this application.
	Storages []ApplicationStorage `pulumi:"storages"`
}

type ApplicationState struct {
	// Advanced settings.
	AdvancedSettingsJson pulumi.StringPtrInput
	// List of annotations group ids
	AnnotationsGroupIds pulumi.StringArrayInput
	// List of arguments of this application.
	Arguments pulumi.StringArrayInput
	// Specify if the application will be automatically updated after receiving a new image tag.
	AutoDeploy pulumi.BoolPtrInput
	// Specify if the environment preview option is activated or not for this application. - Default: `false`.
	AutoPreview pulumi.BoolPtrInput
	// Build Mode of the application. - Can be: `BUILDPACKS`, `DOCKER`. - Default: `BUILDPACKS`.
	BuildMode pulumi.StringPtrInput
	// Buildpack Language framework. - Required if: `build_mode="BUILDPACKS"`. - Can be: `CLOJURE`, `GO`, `GRADLE`, `GRAILS`,
	// `JAVA`, `JVM`, `NODE_JS`, `PHP`, `PLAY`, `PYTHON`, `SCALA`.
	BuildpackLanguage pulumi.StringPtrInput
	// List of built-in environment variables linked to this application.
	BuiltInEnvironmentVariables ApplicationBuiltInEnvironmentVariableArrayInput
	// CPU of the application in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu pulumi.IntPtrInput
	// List of custom domains linked to this application.
	CustomDomains ApplicationCustomDomainArrayInput
	// List of deployment restrictions
	DeploymentRestrictions ApplicationDeploymentRestrictionArrayInput
	// Id of the deployment stage.
	DeploymentStageId pulumi.StringPtrInput
	// Dockerfile Path of the application. - Required if: `build_mode="DOCKER"`.
	DockerfilePath pulumi.StringPtrInput
	// Entrypoint of the application.
	Entrypoint pulumi.StringPtrInput
	// Id of the environment.
	EnvironmentId pulumi.StringPtrInput
	// List of environment variable aliases linked to this application.
	EnvironmentVariableAliases ApplicationEnvironmentVariableAliasArrayInput
	// List of environment variable overrides linked to this application.
	EnvironmentVariableOverrides ApplicationEnvironmentVariableOverrideArrayInput
	// List of environment variables linked to this application.
	EnvironmentVariables ApplicationEnvironmentVariableArrayInput
	// The application external FQDN host [NOTE: only if your application is using a publicly accessible port].
	ExternalHost pulumi.StringPtrInput
	// Git repository of the application.
	GitRepository ApplicationGitRepositoryPtrInput
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks ApplicationHealthchecksPtrInput
	// Icon URI representing the application.
	IconUri pulumi.StringPtrInput
	// The application internal host.
	InternalHost pulumi.StringPtrInput
	// List of labels group ids
	LabelsGroupIds pulumi.StringArrayInput
	// Maximum number of instances running for the application. - Must be: `>= -1`. - Default: `1`.
	MaxRunningInstances pulumi.IntPtrInput
	// RAM of the application in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory pulumi.IntPtrInput
	// Minimum number of instances running for the application. - Must be: `>= 0`. - Default: `1`.
	MinRunningInstances pulumi.IntPtrInput
	// Name of the application.
	Name pulumi.StringPtrInput
	// List of ports linked to this application.
	Ports ApplicationPortArrayInput
	// List of secret aliases linked to this application.
	SecretAliases ApplicationSecretAliasArrayInput
	// List of secret overrides linked to this application.
	SecretOverrides ApplicationSecretOverrideArrayInput
	// List of secrets linked to this application.
	Secrets ApplicationSecretArrayInput
	// List of storages linked to this application.
	Storages ApplicationStorageArrayInput
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	// Advanced settings.
	AdvancedSettingsJson *string `pulumi:"advancedSettingsJson"`
	// List of annotations group ids
	AnnotationsGroupIds []string `pulumi:"annotationsGroupIds"`
	// List of arguments of this application.
	Arguments []string `pulumi:"arguments"`
	// Specify if the application will be automatically updated after receiving a new image tag.
	AutoDeploy *bool `pulumi:"autoDeploy"`
	// Specify if the environment preview option is activated or not for this application. - Default: `false`.
	AutoPreview *bool `pulumi:"autoPreview"`
	// Build Mode of the application. - Can be: `BUILDPACKS`, `DOCKER`. - Default: `BUILDPACKS`.
	BuildMode *string `pulumi:"buildMode"`
	// Buildpack Language framework. - Required if: `build_mode="BUILDPACKS"`. - Can be: `CLOJURE`, `GO`, `GRADLE`, `GRAILS`,
	// `JAVA`, `JVM`, `NODE_JS`, `PHP`, `PLAY`, `PYTHON`, `SCALA`.
	BuildpackLanguage *string `pulumi:"buildpackLanguage"`
	// CPU of the application in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu *int `pulumi:"cpu"`
	// List of custom domains linked to this application.
	CustomDomains []ApplicationCustomDomain `pulumi:"customDomains"`
	// List of deployment restrictions
	DeploymentRestrictions []ApplicationDeploymentRestriction `pulumi:"deploymentRestrictions"`
	// Id of the deployment stage.
	DeploymentStageId *string `pulumi:"deploymentStageId"`
	// Dockerfile Path of the application. - Required if: `build_mode="DOCKER"`.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// Entrypoint of the application.
	Entrypoint *string `pulumi:"entrypoint"`
	// Id of the environment.
	EnvironmentId string `pulumi:"environmentId"`
	// List of environment variable aliases linked to this application.
	EnvironmentVariableAliases []ApplicationEnvironmentVariableAlias `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this application.
	EnvironmentVariableOverrides []ApplicationEnvironmentVariableOverride `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this application.
	EnvironmentVariables []ApplicationEnvironmentVariable `pulumi:"environmentVariables"`
	// Git repository of the application.
	GitRepository ApplicationGitRepository `pulumi:"gitRepository"`
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks ApplicationHealthchecks `pulumi:"healthchecks"`
	// Icon URI representing the application.
	IconUri *string `pulumi:"iconUri"`
	// List of labels group ids
	LabelsGroupIds []string `pulumi:"labelsGroupIds"`
	// Maximum number of instances running for the application. - Must be: `>= -1`. - Default: `1`.
	MaxRunningInstances *int `pulumi:"maxRunningInstances"`
	// RAM of the application in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory *int `pulumi:"memory"`
	// Minimum number of instances running for the application. - Must be: `>= 0`. - Default: `1`.
	MinRunningInstances *int `pulumi:"minRunningInstances"`
	// Name of the application.
	Name *string `pulumi:"name"`
	// List of ports linked to this application.
	Ports []ApplicationPort `pulumi:"ports"`
	// List of secret aliases linked to this application.
	SecretAliases []ApplicationSecretAlias `pulumi:"secretAliases"`
	// List of secret overrides linked to this application.
	SecretOverrides []ApplicationSecretOverride `pulumi:"secretOverrides"`
	// List of secrets linked to this application.
	Secrets []ApplicationSecret `pulumi:"secrets"`
	// List of storages linked to this application.
	Storages []ApplicationStorage `pulumi:"storages"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	// Advanced settings.
	AdvancedSettingsJson pulumi.StringPtrInput
	// List of annotations group ids
	AnnotationsGroupIds pulumi.StringArrayInput
	// List of arguments of this application.
	Arguments pulumi.StringArrayInput
	// Specify if the application will be automatically updated after receiving a new image tag.
	AutoDeploy pulumi.BoolPtrInput
	// Specify if the environment preview option is activated or not for this application. - Default: `false`.
	AutoPreview pulumi.BoolPtrInput
	// Build Mode of the application. - Can be: `BUILDPACKS`, `DOCKER`. - Default: `BUILDPACKS`.
	BuildMode pulumi.StringPtrInput
	// Buildpack Language framework. - Required if: `build_mode="BUILDPACKS"`. - Can be: `CLOJURE`, `GO`, `GRADLE`, `GRAILS`,
	// `JAVA`, `JVM`, `NODE_JS`, `PHP`, `PLAY`, `PYTHON`, `SCALA`.
	BuildpackLanguage pulumi.StringPtrInput
	// CPU of the application in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu pulumi.IntPtrInput
	// List of custom domains linked to this application.
	CustomDomains ApplicationCustomDomainArrayInput
	// List of deployment restrictions
	DeploymentRestrictions ApplicationDeploymentRestrictionArrayInput
	// Id of the deployment stage.
	DeploymentStageId pulumi.StringPtrInput
	// Dockerfile Path of the application. - Required if: `build_mode="DOCKER"`.
	DockerfilePath pulumi.StringPtrInput
	// Entrypoint of the application.
	Entrypoint pulumi.StringPtrInput
	// Id of the environment.
	EnvironmentId pulumi.StringInput
	// List of environment variable aliases linked to this application.
	EnvironmentVariableAliases ApplicationEnvironmentVariableAliasArrayInput
	// List of environment variable overrides linked to this application.
	EnvironmentVariableOverrides ApplicationEnvironmentVariableOverrideArrayInput
	// List of environment variables linked to this application.
	EnvironmentVariables ApplicationEnvironmentVariableArrayInput
	// Git repository of the application.
	GitRepository ApplicationGitRepositoryInput
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks ApplicationHealthchecksInput
	// Icon URI representing the application.
	IconUri pulumi.StringPtrInput
	// List of labels group ids
	LabelsGroupIds pulumi.StringArrayInput
	// Maximum number of instances running for the application. - Must be: `>= -1`. - Default: `1`.
	MaxRunningInstances pulumi.IntPtrInput
	// RAM of the application in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory pulumi.IntPtrInput
	// Minimum number of instances running for the application. - Must be: `>= 0`. - Default: `1`.
	MinRunningInstances pulumi.IntPtrInput
	// Name of the application.
	Name pulumi.StringPtrInput
	// List of ports linked to this application.
	Ports ApplicationPortArrayInput
	// List of secret aliases linked to this application.
	SecretAliases ApplicationSecretAliasArrayInput
	// List of secret overrides linked to this application.
	SecretOverrides ApplicationSecretOverrideArrayInput
	// List of secrets linked to this application.
	Secrets ApplicationSecretArrayInput
	// List of storages linked to this application.
	Storages ApplicationStorageArrayInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

// ApplicationArrayInput is an input type that accepts ApplicationArray and ApplicationArrayOutput values.
// You can construct a concrete instance of `ApplicationArrayInput` via:
//
//	ApplicationArray{ ApplicationArgs{...} }
type ApplicationArrayInput interface {
	pulumi.Input

	ToApplicationArrayOutput() ApplicationArrayOutput
	ToApplicationArrayOutputWithContext(context.Context) ApplicationArrayOutput
}

type ApplicationArray []ApplicationInput

func (ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Application)(nil)).Elem()
}

func (i ApplicationArray) ToApplicationArrayOutput() ApplicationArrayOutput {
	return i.ToApplicationArrayOutputWithContext(context.Background())
}

func (i ApplicationArray) ToApplicationArrayOutputWithContext(ctx context.Context) ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationArrayOutput)
}

// ApplicationMapInput is an input type that accepts ApplicationMap and ApplicationMapOutput values.
// You can construct a concrete instance of `ApplicationMapInput` via:
//
//	ApplicationMap{ "key": ApplicationArgs{...} }
type ApplicationMapInput interface {
	pulumi.Input

	ToApplicationMapOutput() ApplicationMapOutput
	ToApplicationMapOutputWithContext(context.Context) ApplicationMapOutput
}

type ApplicationMap map[string]ApplicationInput

func (ApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Application)(nil)).Elem()
}

func (i ApplicationMap) ToApplicationMapOutput() ApplicationMapOutput {
	return i.ToApplicationMapOutputWithContext(context.Background())
}

func (i ApplicationMap) ToApplicationMapOutputWithContext(ctx context.Context) ApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMapOutput)
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

// Advanced settings.
func (o ApplicationOutput) AdvancedSettingsJson() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.AdvancedSettingsJson }).(pulumi.StringOutput)
}

// List of annotations group ids
func (o ApplicationOutput) AnnotationsGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Application) pulumi.StringArrayOutput { return v.AnnotationsGroupIds }).(pulumi.StringArrayOutput)
}

// List of arguments of this application.
func (o ApplicationOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Application) pulumi.StringArrayOutput { return v.Arguments }).(pulumi.StringArrayOutput)
}

// Specify if the application will be automatically updated after receiving a new image tag.
func (o ApplicationOutput) AutoDeploy() pulumi.BoolOutput {
	return o.ApplyT(func(v *Application) pulumi.BoolOutput { return v.AutoDeploy }).(pulumi.BoolOutput)
}

// Specify if the environment preview option is activated or not for this application. - Default: `false`.
func (o ApplicationOutput) AutoPreview() pulumi.BoolOutput {
	return o.ApplyT(func(v *Application) pulumi.BoolOutput { return v.AutoPreview }).(pulumi.BoolOutput)
}

// Build Mode of the application. - Can be: `BUILDPACKS`, `DOCKER`. - Default: `BUILDPACKS`.
func (o ApplicationOutput) BuildMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.BuildMode }).(pulumi.StringOutput)
}

// Buildpack Language framework. - Required if: `build_mode="BUILDPACKS"`. - Can be: `CLOJURE`, `GO`, `GRADLE`, `GRAILS`,
// `JAVA`, `JVM`, `NODE_JS`, `PHP`, `PLAY`, `PYTHON`, `SCALA`.
func (o ApplicationOutput) BuildpackLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.BuildpackLanguage }).(pulumi.StringPtrOutput)
}

// List of built-in environment variables linked to this application.
func (o ApplicationOutput) BuiltInEnvironmentVariables() ApplicationBuiltInEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationBuiltInEnvironmentVariableArrayOutput {
		return v.BuiltInEnvironmentVariables
	}).(ApplicationBuiltInEnvironmentVariableArrayOutput)
}

// CPU of the application in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
func (o ApplicationOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v *Application) pulumi.IntOutput { return v.Cpu }).(pulumi.IntOutput)
}

// List of custom domains linked to this application.
func (o ApplicationOutput) CustomDomains() ApplicationCustomDomainArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationCustomDomainArrayOutput { return v.CustomDomains }).(ApplicationCustomDomainArrayOutput)
}

// List of deployment restrictions
func (o ApplicationOutput) DeploymentRestrictions() ApplicationDeploymentRestrictionArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationDeploymentRestrictionArrayOutput { return v.DeploymentRestrictions }).(ApplicationDeploymentRestrictionArrayOutput)
}

// Id of the deployment stage.
func (o ApplicationOutput) DeploymentStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.DeploymentStageId }).(pulumi.StringOutput)
}

// Dockerfile Path of the application. - Required if: `build_mode="DOCKER"`.
func (o ApplicationOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// Entrypoint of the application.
func (o ApplicationOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

// Id of the environment.
func (o ApplicationOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// List of environment variable aliases linked to this application.
func (o ApplicationOutput) EnvironmentVariableAliases() ApplicationEnvironmentVariableAliasArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationEnvironmentVariableAliasArrayOutput {
		return v.EnvironmentVariableAliases
	}).(ApplicationEnvironmentVariableAliasArrayOutput)
}

// List of environment variable overrides linked to this application.
func (o ApplicationOutput) EnvironmentVariableOverrides() ApplicationEnvironmentVariableOverrideArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationEnvironmentVariableOverrideArrayOutput {
		return v.EnvironmentVariableOverrides
	}).(ApplicationEnvironmentVariableOverrideArrayOutput)
}

// List of environment variables linked to this application.
func (o ApplicationOutput) EnvironmentVariables() ApplicationEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationEnvironmentVariableArrayOutput { return v.EnvironmentVariables }).(ApplicationEnvironmentVariableArrayOutput)
}

// The application external FQDN host [NOTE: only if your application is using a publicly accessible port].
func (o ApplicationOutput) ExternalHost() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ExternalHost }).(pulumi.StringOutput)
}

// Git repository of the application.
func (o ApplicationOutput) GitRepository() ApplicationGitRepositoryOutput {
	return o.ApplyT(func(v *Application) ApplicationGitRepositoryOutput { return v.GitRepository }).(ApplicationGitRepositoryOutput)
}

// Configuration for the healthchecks that are going to be executed against your service
func (o ApplicationOutput) Healthchecks() ApplicationHealthchecksOutput {
	return o.ApplyT(func(v *Application) ApplicationHealthchecksOutput { return v.Healthchecks }).(ApplicationHealthchecksOutput)
}

// Icon URI representing the application.
func (o ApplicationOutput) IconUri() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.IconUri }).(pulumi.StringOutput)
}

// The application internal host.
func (o ApplicationOutput) InternalHost() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.InternalHost }).(pulumi.StringOutput)
}

// List of labels group ids
func (o ApplicationOutput) LabelsGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Application) pulumi.StringArrayOutput { return v.LabelsGroupIds }).(pulumi.StringArrayOutput)
}

// Maximum number of instances running for the application. - Must be: `>= -1`. - Default: `1`.
func (o ApplicationOutput) MaxRunningInstances() pulumi.IntOutput {
	return o.ApplyT(func(v *Application) pulumi.IntOutput { return v.MaxRunningInstances }).(pulumi.IntOutput)
}

// RAM of the application in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
func (o ApplicationOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *Application) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// Minimum number of instances running for the application. - Must be: `>= 0`. - Default: `1`.
func (o ApplicationOutput) MinRunningInstances() pulumi.IntOutput {
	return o.ApplyT(func(v *Application) pulumi.IntOutput { return v.MinRunningInstances }).(pulumi.IntOutput)
}

// Name of the application.
func (o ApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of ports linked to this application.
func (o ApplicationOutput) Ports() ApplicationPortArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationPortArrayOutput { return v.Ports }).(ApplicationPortArrayOutput)
}

// List of secret aliases linked to this application.
func (o ApplicationOutput) SecretAliases() ApplicationSecretAliasArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationSecretAliasArrayOutput { return v.SecretAliases }).(ApplicationSecretAliasArrayOutput)
}

// List of secret overrides linked to this application.
func (o ApplicationOutput) SecretOverrides() ApplicationSecretOverrideArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationSecretOverrideArrayOutput { return v.SecretOverrides }).(ApplicationSecretOverrideArrayOutput)
}

// List of secrets linked to this application.
func (o ApplicationOutput) Secrets() ApplicationSecretArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationSecretArrayOutput { return v.Secrets }).(ApplicationSecretArrayOutput)
}

// List of storages linked to this application.
func (o ApplicationOutput) Storages() ApplicationStorageArrayOutput {
	return o.ApplyT(func(v *Application) ApplicationStorageArrayOutput { return v.Storages }).(ApplicationStorageArrayOutput)
}

type ApplicationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Application)(nil)).Elem()
}

func (o ApplicationArrayOutput) ToApplicationArrayOutput() ApplicationArrayOutput {
	return o
}

func (o ApplicationArrayOutput) ToApplicationArrayOutputWithContext(ctx context.Context) ApplicationArrayOutput {
	return o
}

func (o ApplicationArrayOutput) Index(i pulumi.IntInput) ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Application {
		return vs[0].([]*Application)[vs[1].(int)]
	}).(ApplicationOutput)
}

type ApplicationMapOutput struct{ *pulumi.OutputState }

func (ApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Application)(nil)).Elem()
}

func (o ApplicationMapOutput) ToApplicationMapOutput() ApplicationMapOutput {
	return o
}

func (o ApplicationMapOutput) ToApplicationMapOutputWithContext(ctx context.Context) ApplicationMapOutput {
	return o
}

func (o ApplicationMapOutput) MapIndex(k pulumi.StringInput) ApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Application {
		return vs[0].(map[string]*Application)[vs[1].(string)]
	}).(ApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInput)(nil)).Elem(), &Application{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationArrayInput)(nil)).Elem(), ApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationMapInput)(nil)).Elem(), ApplicationMap{})
	pulumi.RegisterOutputType(ApplicationOutput{})
	pulumi.RegisterOutputType(ApplicationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationMapOutput{})
}
