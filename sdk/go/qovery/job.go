// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-qovery/sdk/go/qovery/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Job (Resource)
//
// Provides a Qovery job resource. This can be used to create and manage Qovery job registry.
//
// ## Import
//
// ```sh
// $ pulumi import qovery:index/job:Job my_job "<job_id>"
// ```
type Job struct {
	pulumi.CustomResourceState

	// Advanced settings.
	AdvancedSettingsJson pulumi.StringOutput `pulumi:"advancedSettingsJson"`
	// Specify if the job will be automatically updated after receiving a new image tag.
	AutoDeploy pulumi.BoolOutput `pulumi:"autoDeploy"`
	// Specify if the environment preview option is activated or not for this job.
	AutoPreview pulumi.BoolOutput `pulumi:"autoPreview"`
	// List of built-in environment variables linked to this job.
	BuiltInEnvironmentVariables JobBuiltInEnvironmentVariableArrayOutput `pulumi:"builtInEnvironmentVariables"`
	// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu pulumi.IntOutput `pulumi:"cpu"`
	// List of deployment restrictions
	DeploymentRestrictions JobDeploymentRestrictionArrayOutput `pulumi:"deploymentRestrictions"`
	// Id of the deployment stage.
	DeploymentStageId pulumi.StringOutput `pulumi:"deploymentStageId"`
	// Id of the environment.
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// List of environment variable aliases linked to this job.
	EnvironmentVariableAliases JobEnvironmentVariableAliasArrayOutput `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this job.
	EnvironmentVariableOverrides JobEnvironmentVariableOverrideArrayOutput `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this job.
	EnvironmentVariables JobEnvironmentVariableArrayOutput `pulumi:"environmentVariables"`
	// The job external FQDN host [NOTE: only if your job is using a publicly accessible port].
	ExternalHost pulumi.StringOutput `pulumi:"externalHost"`
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks JobHealthchecksOutput `pulumi:"healthchecks"`
	// The job internal host.
	InternalHost pulumi.StringOutput `pulumi:"internalHost"`
	// Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
	MaxDurationSeconds pulumi.IntOutput `pulumi:"maxDurationSeconds"`
	// Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
	MaxNbRestart pulumi.IntOutput `pulumi:"maxNbRestart"`
	// RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Name of the job.
	Name pulumi.StringOutput `pulumi:"name"`
	// Job's probes port. - Must be: `>= 1` and `<= 65535`.
	Port pulumi.IntPtrOutput `pulumi:"port"`
	// Job's schedule.
	Schedule JobScheduleOutput `pulumi:"schedule"`
	// List of secret aliases linked to this job.
	SecretAliases JobSecretAliasArrayOutput `pulumi:"secretAliases"`
	// List of secret overrides linked to this job.
	SecretOverrides JobSecretOverrideArrayOutput `pulumi:"secretOverrides"`
	// List of secrets linked to this job.
	Secrets JobSecretArrayOutput `pulumi:"secrets"`
	// Job's source.
	Source JobSourcePtrOutput `pulumi:"source"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOption) (*Job, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.Healthchecks == nil {
		return nil, errors.New("invalid value for required argument 'Healthchecks'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Job
	err := ctx.RegisterResource("qovery:index/job:Job", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobState, opts ...pulumi.ResourceOption) (*Job, error) {
	var resource Job
	err := ctx.ReadResource("qovery:index/job:Job", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Job resources.
type jobState struct {
	// Advanced settings.
	AdvancedSettingsJson *string `pulumi:"advancedSettingsJson"`
	// Specify if the job will be automatically updated after receiving a new image tag.
	AutoDeploy *bool `pulumi:"autoDeploy"`
	// Specify if the environment preview option is activated or not for this job.
	AutoPreview *bool `pulumi:"autoPreview"`
	// List of built-in environment variables linked to this job.
	BuiltInEnvironmentVariables []JobBuiltInEnvironmentVariable `pulumi:"builtInEnvironmentVariables"`
	// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu *int `pulumi:"cpu"`
	// List of deployment restrictions
	DeploymentRestrictions []JobDeploymentRestriction `pulumi:"deploymentRestrictions"`
	// Id of the deployment stage.
	DeploymentStageId *string `pulumi:"deploymentStageId"`
	// Id of the environment.
	EnvironmentId *string `pulumi:"environmentId"`
	// List of environment variable aliases linked to this job.
	EnvironmentVariableAliases []JobEnvironmentVariableAlias `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this job.
	EnvironmentVariableOverrides []JobEnvironmentVariableOverride `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this job.
	EnvironmentVariables []JobEnvironmentVariable `pulumi:"environmentVariables"`
	// The job external FQDN host [NOTE: only if your job is using a publicly accessible port].
	ExternalHost *string `pulumi:"externalHost"`
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks *JobHealthchecks `pulumi:"healthchecks"`
	// The job internal host.
	InternalHost *string `pulumi:"internalHost"`
	// Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
	MaxDurationSeconds *int `pulumi:"maxDurationSeconds"`
	// Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
	MaxNbRestart *int `pulumi:"maxNbRestart"`
	// RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory *int `pulumi:"memory"`
	// Name of the job.
	Name *string `pulumi:"name"`
	// Job's probes port. - Must be: `>= 1` and `<= 65535`.
	Port *int `pulumi:"port"`
	// Job's schedule.
	Schedule *JobSchedule `pulumi:"schedule"`
	// List of secret aliases linked to this job.
	SecretAliases []JobSecretAlias `pulumi:"secretAliases"`
	// List of secret overrides linked to this job.
	SecretOverrides []JobSecretOverride `pulumi:"secretOverrides"`
	// List of secrets linked to this job.
	Secrets []JobSecret `pulumi:"secrets"`
	// Job's source.
	Source *JobSource `pulumi:"source"`
}

type JobState struct {
	// Advanced settings.
	AdvancedSettingsJson pulumi.StringPtrInput
	// Specify if the job will be automatically updated after receiving a new image tag.
	AutoDeploy pulumi.BoolPtrInput
	// Specify if the environment preview option is activated or not for this job.
	AutoPreview pulumi.BoolPtrInput
	// List of built-in environment variables linked to this job.
	BuiltInEnvironmentVariables JobBuiltInEnvironmentVariableArrayInput
	// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu pulumi.IntPtrInput
	// List of deployment restrictions
	DeploymentRestrictions JobDeploymentRestrictionArrayInput
	// Id of the deployment stage.
	DeploymentStageId pulumi.StringPtrInput
	// Id of the environment.
	EnvironmentId pulumi.StringPtrInput
	// List of environment variable aliases linked to this job.
	EnvironmentVariableAliases JobEnvironmentVariableAliasArrayInput
	// List of environment variable overrides linked to this job.
	EnvironmentVariableOverrides JobEnvironmentVariableOverrideArrayInput
	// List of environment variables linked to this job.
	EnvironmentVariables JobEnvironmentVariableArrayInput
	// The job external FQDN host [NOTE: only if your job is using a publicly accessible port].
	ExternalHost pulumi.StringPtrInput
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks JobHealthchecksPtrInput
	// The job internal host.
	InternalHost pulumi.StringPtrInput
	// Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
	MaxDurationSeconds pulumi.IntPtrInput
	// Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
	MaxNbRestart pulumi.IntPtrInput
	// RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory pulumi.IntPtrInput
	// Name of the job.
	Name pulumi.StringPtrInput
	// Job's probes port. - Must be: `>= 1` and `<= 65535`.
	Port pulumi.IntPtrInput
	// Job's schedule.
	Schedule JobSchedulePtrInput
	// List of secret aliases linked to this job.
	SecretAliases JobSecretAliasArrayInput
	// List of secret overrides linked to this job.
	SecretOverrides JobSecretOverrideArrayInput
	// List of secrets linked to this job.
	Secrets JobSecretArrayInput
	// Job's source.
	Source JobSourcePtrInput
}

func (JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobState)(nil)).Elem()
}

type jobArgs struct {
	// Advanced settings.
	AdvancedSettingsJson *string `pulumi:"advancedSettingsJson"`
	// Specify if the job will be automatically updated after receiving a new image tag.
	AutoDeploy *bool `pulumi:"autoDeploy"`
	// Specify if the environment preview option is activated or not for this job.
	AutoPreview *bool `pulumi:"autoPreview"`
	// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu *int `pulumi:"cpu"`
	// List of deployment restrictions
	DeploymentRestrictions []JobDeploymentRestriction `pulumi:"deploymentRestrictions"`
	// Id of the deployment stage.
	DeploymentStageId *string `pulumi:"deploymentStageId"`
	// Id of the environment.
	EnvironmentId string `pulumi:"environmentId"`
	// List of environment variable aliases linked to this job.
	EnvironmentVariableAliases []JobEnvironmentVariableAlias `pulumi:"environmentVariableAliases"`
	// List of environment variable overrides linked to this job.
	EnvironmentVariableOverrides []JobEnvironmentVariableOverride `pulumi:"environmentVariableOverrides"`
	// List of environment variables linked to this job.
	EnvironmentVariables []JobEnvironmentVariable `pulumi:"environmentVariables"`
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks JobHealthchecks `pulumi:"healthchecks"`
	// Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
	MaxDurationSeconds *int `pulumi:"maxDurationSeconds"`
	// Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
	MaxNbRestart *int `pulumi:"maxNbRestart"`
	// RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory *int `pulumi:"memory"`
	// Name of the job.
	Name *string `pulumi:"name"`
	// Job's probes port. - Must be: `>= 1` and `<= 65535`.
	Port *int `pulumi:"port"`
	// Job's schedule.
	Schedule JobSchedule `pulumi:"schedule"`
	// List of secret aliases linked to this job.
	SecretAliases []JobSecretAlias `pulumi:"secretAliases"`
	// List of secret overrides linked to this job.
	SecretOverrides []JobSecretOverride `pulumi:"secretOverrides"`
	// List of secrets linked to this job.
	Secrets []JobSecret `pulumi:"secrets"`
	// Job's source.
	Source *JobSource `pulumi:"source"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	// Advanced settings.
	AdvancedSettingsJson pulumi.StringPtrInput
	// Specify if the job will be automatically updated after receiving a new image tag.
	AutoDeploy pulumi.BoolPtrInput
	// Specify if the environment preview option is activated or not for this job.
	AutoPreview pulumi.BoolPtrInput
	// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
	Cpu pulumi.IntPtrInput
	// List of deployment restrictions
	DeploymentRestrictions JobDeploymentRestrictionArrayInput
	// Id of the deployment stage.
	DeploymentStageId pulumi.StringPtrInput
	// Id of the environment.
	EnvironmentId pulumi.StringInput
	// List of environment variable aliases linked to this job.
	EnvironmentVariableAliases JobEnvironmentVariableAliasArrayInput
	// List of environment variable overrides linked to this job.
	EnvironmentVariableOverrides JobEnvironmentVariableOverrideArrayInput
	// List of environment variables linked to this job.
	EnvironmentVariables JobEnvironmentVariableArrayInput
	// Configuration for the healthchecks that are going to be executed against your service
	Healthchecks JobHealthchecksInput
	// Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
	MaxDurationSeconds pulumi.IntPtrInput
	// Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
	MaxNbRestart pulumi.IntPtrInput
	// RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
	Memory pulumi.IntPtrInput
	// Name of the job.
	Name pulumi.StringPtrInput
	// Job's probes port. - Must be: `>= 1` and `<= 65535`.
	Port pulumi.IntPtrInput
	// Job's schedule.
	Schedule JobScheduleInput
	// List of secret aliases linked to this job.
	SecretAliases JobSecretAliasArrayInput
	// List of secret overrides linked to this job.
	SecretOverrides JobSecretOverrideArrayInput
	// List of secrets linked to this job.
	Secrets JobSecretArrayInput
	// Job's source.
	Source JobSourcePtrInput
}

func (JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobArgs)(nil)).Elem()
}

type JobInput interface {
	pulumi.Input

	ToJobOutput() JobOutput
	ToJobOutputWithContext(ctx context.Context) JobOutput
}

func (*Job) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (i *Job) ToJobOutput() JobOutput {
	return i.ToJobOutputWithContext(context.Background())
}

func (i *Job) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobOutput)
}

// JobArrayInput is an input type that accepts JobArray and JobArrayOutput values.
// You can construct a concrete instance of `JobArrayInput` via:
//
//	JobArray{ JobArgs{...} }
type JobArrayInput interface {
	pulumi.Input

	ToJobArrayOutput() JobArrayOutput
	ToJobArrayOutputWithContext(context.Context) JobArrayOutput
}

type JobArray []JobInput

func (JobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Job)(nil)).Elem()
}

func (i JobArray) ToJobArrayOutput() JobArrayOutput {
	return i.ToJobArrayOutputWithContext(context.Background())
}

func (i JobArray) ToJobArrayOutputWithContext(ctx context.Context) JobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobArrayOutput)
}

// JobMapInput is an input type that accepts JobMap and JobMapOutput values.
// You can construct a concrete instance of `JobMapInput` via:
//
//	JobMap{ "key": JobArgs{...} }
type JobMapInput interface {
	pulumi.Input

	ToJobMapOutput() JobMapOutput
	ToJobMapOutputWithContext(context.Context) JobMapOutput
}

type JobMap map[string]JobInput

func (JobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Job)(nil)).Elem()
}

func (i JobMap) ToJobMapOutput() JobMapOutput {
	return i.ToJobMapOutputWithContext(context.Background())
}

func (i JobMap) ToJobMapOutputWithContext(ctx context.Context) JobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobMapOutput)
}

type JobOutput struct{ *pulumi.OutputState }

func (JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (o JobOutput) ToJobOutput() JobOutput {
	return o
}

func (o JobOutput) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return o
}

// Advanced settings.
func (o JobOutput) AdvancedSettingsJson() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.AdvancedSettingsJson }).(pulumi.StringOutput)
}

// Specify if the job will be automatically updated after receiving a new image tag.
func (o JobOutput) AutoDeploy() pulumi.BoolOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolOutput { return v.AutoDeploy }).(pulumi.BoolOutput)
}

// Specify if the environment preview option is activated or not for this job.
func (o JobOutput) AutoPreview() pulumi.BoolOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolOutput { return v.AutoPreview }).(pulumi.BoolOutput)
}

// List of built-in environment variables linked to this job.
func (o JobOutput) BuiltInEnvironmentVariables() JobBuiltInEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *Job) JobBuiltInEnvironmentVariableArrayOutput { return v.BuiltInEnvironmentVariables }).(JobBuiltInEnvironmentVariableArrayOutput)
}

// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `>= 10`. - Default: `500`.
func (o JobOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v *Job) pulumi.IntOutput { return v.Cpu }).(pulumi.IntOutput)
}

// List of deployment restrictions
func (o JobOutput) DeploymentRestrictions() JobDeploymentRestrictionArrayOutput {
	return o.ApplyT(func(v *Job) JobDeploymentRestrictionArrayOutput { return v.DeploymentRestrictions }).(JobDeploymentRestrictionArrayOutput)
}

// Id of the deployment stage.
func (o JobOutput) DeploymentStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.DeploymentStageId }).(pulumi.StringOutput)
}

// Id of the environment.
func (o JobOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// List of environment variable aliases linked to this job.
func (o JobOutput) EnvironmentVariableAliases() JobEnvironmentVariableAliasArrayOutput {
	return o.ApplyT(func(v *Job) JobEnvironmentVariableAliasArrayOutput { return v.EnvironmentVariableAliases }).(JobEnvironmentVariableAliasArrayOutput)
}

// List of environment variable overrides linked to this job.
func (o JobOutput) EnvironmentVariableOverrides() JobEnvironmentVariableOverrideArrayOutput {
	return o.ApplyT(func(v *Job) JobEnvironmentVariableOverrideArrayOutput { return v.EnvironmentVariableOverrides }).(JobEnvironmentVariableOverrideArrayOutput)
}

// List of environment variables linked to this job.
func (o JobOutput) EnvironmentVariables() JobEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *Job) JobEnvironmentVariableArrayOutput { return v.EnvironmentVariables }).(JobEnvironmentVariableArrayOutput)
}

// The job external FQDN host [NOTE: only if your job is using a publicly accessible port].
func (o JobOutput) ExternalHost() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.ExternalHost }).(pulumi.StringOutput)
}

// Configuration for the healthchecks that are going to be executed against your service
func (o JobOutput) Healthchecks() JobHealthchecksOutput {
	return o.ApplyT(func(v *Job) JobHealthchecksOutput { return v.Healthchecks }).(JobHealthchecksOutput)
}

// The job internal host.
func (o JobOutput) InternalHost() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.InternalHost }).(pulumi.StringOutput)
}

// Job's max duration in seconds. - Must be: `>= 0`. - Default: `300`.
func (o JobOutput) MaxDurationSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *Job) pulumi.IntOutput { return v.MaxDurationSeconds }).(pulumi.IntOutput)
}

// Job's max number of restarts. - Must be: `>= 0`. - Default: `0`.
func (o JobOutput) MaxNbRestart() pulumi.IntOutput {
	return o.ApplyT(func(v *Job) pulumi.IntOutput { return v.MaxNbRestart }).(pulumi.IntOutput)
}

// RAM of the job in MB [1024MB = 1GB]. - Must be: `>= 1`. - Default: `512`.
func (o JobOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *Job) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// Name of the job.
func (o JobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Job's probes port. - Must be: `>= 1` and `<= 65535`.
func (o JobOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

// Job's schedule.
func (o JobOutput) Schedule() JobScheduleOutput {
	return o.ApplyT(func(v *Job) JobScheduleOutput { return v.Schedule }).(JobScheduleOutput)
}

// List of secret aliases linked to this job.
func (o JobOutput) SecretAliases() JobSecretAliasArrayOutput {
	return o.ApplyT(func(v *Job) JobSecretAliasArrayOutput { return v.SecretAliases }).(JobSecretAliasArrayOutput)
}

// List of secret overrides linked to this job.
func (o JobOutput) SecretOverrides() JobSecretOverrideArrayOutput {
	return o.ApplyT(func(v *Job) JobSecretOverrideArrayOutput { return v.SecretOverrides }).(JobSecretOverrideArrayOutput)
}

// List of secrets linked to this job.
func (o JobOutput) Secrets() JobSecretArrayOutput {
	return o.ApplyT(func(v *Job) JobSecretArrayOutput { return v.Secrets }).(JobSecretArrayOutput)
}

// Job's source.
func (o JobOutput) Source() JobSourcePtrOutput {
	return o.ApplyT(func(v *Job) JobSourcePtrOutput { return v.Source }).(JobSourcePtrOutput)
}

type JobArrayOutput struct{ *pulumi.OutputState }

func (JobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Job)(nil)).Elem()
}

func (o JobArrayOutput) ToJobArrayOutput() JobArrayOutput {
	return o
}

func (o JobArrayOutput) ToJobArrayOutputWithContext(ctx context.Context) JobArrayOutput {
	return o
}

func (o JobArrayOutput) Index(i pulumi.IntInput) JobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Job {
		return vs[0].([]*Job)[vs[1].(int)]
	}).(JobOutput)
}

type JobMapOutput struct{ *pulumi.OutputState }

func (JobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Job)(nil)).Elem()
}

func (o JobMapOutput) ToJobMapOutput() JobMapOutput {
	return o
}

func (o JobMapOutput) ToJobMapOutputWithContext(ctx context.Context) JobMapOutput {
	return o
}

func (o JobMapOutput) MapIndex(k pulumi.StringInput) JobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Job {
		return vs[0].(map[string]*Job)[vs[1].(string)]
	}).(JobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobInput)(nil)).Elem(), &Job{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobArrayInput)(nil)).Elem(), JobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobMapInput)(nil)).Elem(), JobMap{})
	pulumi.RegisterOutputType(JobOutput{})
	pulumi.RegisterOutputType(JobArrayOutput{})
	pulumi.RegisterOutputType(JobMapOutput{})
}
