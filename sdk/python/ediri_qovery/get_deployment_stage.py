# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetDeploymentStageResult',
    'AwaitableGetDeploymentStageResult',
    'get_deployment_stage',
    'get_deployment_stage_output',
]

@pulumi.output_type
class GetDeploymentStageResult:
    """
    A collection of values returned by getDeploymentStage.
    """
    def __init__(__self__, description=None, environment_id=None, id=None, is_after=None, is_before=None, name=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if environment_id and not isinstance(environment_id, str):
            raise TypeError("Expected argument 'environment_id' to be a str")
        pulumi.set(__self__, "environment_id", environment_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if is_after and not isinstance(is_after, str):
            raise TypeError("Expected argument 'is_after' to be a str")
        pulumi.set(__self__, "is_after", is_after)
        if is_before and not isinstance(is_before, str):
            raise TypeError("Expected argument 'is_before' to be a str")
        pulumi.set(__self__, "is_before", is_before)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="environmentId")
    def environment_id(self) -> str:
        return pulumi.get(self, "environment_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isAfter")
    def is_after(self) -> str:
        return pulumi.get(self, "is_after")

    @property
    @pulumi.getter(name="isBefore")
    def is_before(self) -> str:
        return pulumi.get(self, "is_before")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")


class AwaitableGetDeploymentStageResult(GetDeploymentStageResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDeploymentStageResult(
            description=self.description,
            environment_id=self.environment_id,
            id=self.id,
            is_after=self.is_after,
            is_before=self.is_before,
            name=self.name)


def get_deployment_stage(description: Optional[str] = None,
                         id: Optional[str] = None,
                         is_after: Optional[str] = None,
                         is_before: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDeploymentStageResult:
    """
    ## # DeploymentStage (Data Source)

    Provides a Qovery deployment stage resource. This can be used to create and manage Qovery deployment stages.
    """
    __args__ = dict()
    __args__['description'] = description
    __args__['id'] = id
    __args__['isAfter'] = is_after
    __args__['isBefore'] = is_before
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('qovery:index/getDeploymentStage:getDeploymentStage', __args__, opts=opts, typ=GetDeploymentStageResult).value

    return AwaitableGetDeploymentStageResult(
        description=pulumi.get(__ret__, 'description'),
        environment_id=pulumi.get(__ret__, 'environment_id'),
        id=pulumi.get(__ret__, 'id'),
        is_after=pulumi.get(__ret__, 'is_after'),
        is_before=pulumi.get(__ret__, 'is_before'),
        name=pulumi.get(__ret__, 'name'))


@_utilities.lift_output_func(get_deployment_stage)
def get_deployment_stage_output(description: Optional[pulumi.Input[Optional[str]]] = None,
                                id: Optional[pulumi.Input[str]] = None,
                                is_after: Optional[pulumi.Input[Optional[str]]] = None,
                                is_before: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDeploymentStageResult]:
    """
    ## # DeploymentStage (Data Source)

    Provides a Qovery deployment stage resource. This can be used to create and manage Qovery deployment stages.
    """
    ...
