# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetLabelsGroupResult',
    'AwaitableGetLabelsGroupResult',
    'get_labels_group',
    'get_labels_group_output',
]

@pulumi.output_type
class GetLabelsGroupResult:
    """
    A collection of values returned by getLabelsGroup.
    """
    def __init__(__self__, id=None, labels=None, name=None, organization_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if labels and not isinstance(labels, list):
            raise TypeError("Expected argument 'labels' to be a list")
        pulumi.set(__self__, "labels", labels)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Id of the labels group
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def labels(self) -> Optional[Sequence['outputs.GetLabelsGroupLabelResult']]:
        """
        labels
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        name of the labels group
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> str:
        """
        Id of the organization.
        """
        return pulumi.get(self, "organization_id")


class AwaitableGetLabelsGroupResult(GetLabelsGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLabelsGroupResult(
            id=self.id,
            labels=self.labels,
            name=self.name,
            organization_id=self.organization_id)


def get_labels_group(id: Optional[str] = None,
                     labels: Optional[Sequence[pulumi.InputType['GetLabelsGroupLabelArgs']]] = None,
                     name: Optional[str] = None,
                     organization_id: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLabelsGroupResult:
    """
    ## # LabelsGroup (Data Source)

    Provides a Qovery labels group resource
    ## Example Usage

    ```python
    import pulumi
    import pulumi_qovery as qovery

    my_labels_group = qovery.get_labels_group(id="<labels_group_id>",
        organization_id="<organization_id>")
    ```


    :param str id: Id of the labels group
    :param Sequence[pulumi.InputType['GetLabelsGroupLabelArgs']] labels: labels
    :param str name: name of the labels group
    :param str organization_id: Id of the organization.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['labels'] = labels
    __args__['name'] = name
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('qovery:index/getLabelsGroup:getLabelsGroup', __args__, opts=opts, typ=GetLabelsGroupResult).value

    return AwaitableGetLabelsGroupResult(
        id=pulumi.get(__ret__, 'id'),
        labels=pulumi.get(__ret__, 'labels'),
        name=pulumi.get(__ret__, 'name'),
        organization_id=pulumi.get(__ret__, 'organization_id'))


@_utilities.lift_output_func(get_labels_group)
def get_labels_group_output(id: Optional[pulumi.Input[str]] = None,
                            labels: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetLabelsGroupLabelArgs']]]]] = None,
                            name: Optional[pulumi.Input[Optional[str]]] = None,
                            organization_id: Optional[pulumi.Input[str]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLabelsGroupResult]:
    """
    ## # LabelsGroup (Data Source)

    Provides a Qovery labels group resource
    ## Example Usage

    ```python
    import pulumi
    import pulumi_qovery as qovery

    my_labels_group = qovery.get_labels_group(id="<labels_group_id>",
        organization_id="<organization_id>")
    ```


    :param str id: Id of the labels group
    :param Sequence[pulumi.InputType['GetLabelsGroupLabelArgs']] labels: labels
    :param str name: name of the labels group
    :param str organization_id: Id of the organization.
    """
    ...
