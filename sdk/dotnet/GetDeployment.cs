// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery
{
    public static class GetDeployment
    {
        /// <summary>
        /// ## # qovery.Deployment (Data Source)
        /// 
        /// Provides a Qovery deployment resource. This is used to trigger a service deployment at demand.
        /// </summary>
        public static Task<GetDeploymentResult> InvokeAsync(GetDeploymentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentResult>("qovery:index/getDeployment:getDeployment", args ?? new GetDeploymentArgs(), options.WithDefaults());

        /// <summary>
        /// ## # qovery.Deployment (Data Source)
        /// 
        /// Provides a Qovery deployment resource. This is used to trigger a service deployment at demand.
        /// </summary>
        public static Output<GetDeploymentResult> Invoke(GetDeploymentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentResult>("qovery:index/getDeployment:getDeployment", args ?? new GetDeploymentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("version")]
        public string? Version { get; set; }

        public GetDeploymentArgs()
        {
        }
        public static new GetDeploymentArgs Empty => new GetDeploymentArgs();
    }

    public sealed class GetDeploymentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetDeploymentInvokeArgs()
        {
        }
        public static new GetDeploymentInvokeArgs Empty => new GetDeploymentInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentResult
    {
        public readonly string DesiredState;
        public readonly string EnvironmentId;
        public readonly string Id;
        public readonly string? Version;

        [OutputConstructor]
        private GetDeploymentResult(
            string desiredState,

            string environmentId,

            string id,

            string? version)
        {
            DesiredState = desiredState;
            EnvironmentId = environmentId;
            Id = id;
            Version = version;
        }
    }
}
