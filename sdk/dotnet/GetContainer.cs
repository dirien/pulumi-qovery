// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery
{
    public static class GetContainer
    {
        /// <summary>
        /// ## # qovery.Container (Data Source)
        /// 
        /// Provides a Qovery container resource. This can be used to create and manage Qovery container registry.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Qovery = Pulumi.Qovery;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myContainer = Qovery.GetContainer.Invoke(new()
        ///     {
        ///         Id = "&lt;container_id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetContainerResult> InvokeAsync(GetContainerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerResult>("qovery:index/getContainer:getContainer", args ?? new GetContainerArgs(), options.WithDefaults());

        /// <summary>
        /// ## # qovery.Container (Data Source)
        /// 
        /// Provides a Qovery container resource. This can be used to create and manage Qovery container registry.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Qovery = Pulumi.Qovery;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myContainer = Qovery.GetContainer.Invoke(new()
        ///     {
        ///         Id = "&lt;container_id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetContainerResult> Invoke(GetContainerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerResult>("qovery:index/getContainer:getContainer", args ?? new GetContainerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerArgs : global::Pulumi.InvokeArgs
    {
        [Input("advancedSettingsJson")]
        public string? AdvancedSettingsJson { get; set; }

        [Input("annotationsGroupIds")]
        private List<string>? _annotationsGroupIds;
        public List<string> AnnotationsGroupIds
        {
            get => _annotationsGroupIds ?? (_annotationsGroupIds = new List<string>());
            set => _annotationsGroupIds = value;
        }

        [Input("arguments")]
        private List<string>? _arguments;
        public List<string> Arguments
        {
            get => _arguments ?? (_arguments = new List<string>());
            set => _arguments = value;
        }

        [Input("autoDeploy")]
        public bool? AutoDeploy { get; set; }

        [Input("autoPreview")]
        public bool? AutoPreview { get; set; }

        [Input("cpu")]
        public int? Cpu { get; set; }

        [Input("customDomains")]
        private List<Inputs.GetContainerCustomDomainArgs>? _customDomains;
        public List<Inputs.GetContainerCustomDomainArgs> CustomDomains
        {
            get => _customDomains ?? (_customDomains = new List<Inputs.GetContainerCustomDomainArgs>());
            set => _customDomains = value;
        }

        [Input("deploymentStageId")]
        public string? DeploymentStageId { get; set; }

        [Input("entrypoint")]
        public string? Entrypoint { get; set; }

        [Input("environmentVariableAliases")]
        private List<Inputs.GetContainerEnvironmentVariableAliasArgs>? _environmentVariableAliases;
        public List<Inputs.GetContainerEnvironmentVariableAliasArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new List<Inputs.GetContainerEnvironmentVariableAliasArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariableOverrides")]
        private List<Inputs.GetContainerEnvironmentVariableOverrideArgs>? _environmentVariableOverrides;
        public List<Inputs.GetContainerEnvironmentVariableOverrideArgs> EnvironmentVariableOverrides
        {
            get => _environmentVariableOverrides ?? (_environmentVariableOverrides = new List<Inputs.GetContainerEnvironmentVariableOverrideArgs>());
            set => _environmentVariableOverrides = value;
        }

        [Input("environmentVariables")]
        private List<Inputs.GetContainerEnvironmentVariableArgs>? _environmentVariables;
        public List<Inputs.GetContainerEnvironmentVariableArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new List<Inputs.GetContainerEnvironmentVariableArgs>());
            set => _environmentVariables = value;
        }

        [Input("healthchecks")]
        public Inputs.GetContainerHealthchecksArgs? Healthchecks { get; set; }

        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("labelsGroupIds")]
        private List<string>? _labelsGroupIds;
        public List<string> LabelsGroupIds
        {
            get => _labelsGroupIds ?? (_labelsGroupIds = new List<string>());
            set => _labelsGroupIds = value;
        }

        [Input("maxRunningInstances")]
        public int? MaxRunningInstances { get; set; }

        [Input("memory")]
        public int? Memory { get; set; }

        [Input("minRunningInstances")]
        public int? MinRunningInstances { get; set; }

        [Input("ports")]
        private List<Inputs.GetContainerPortArgs>? _ports;
        public List<Inputs.GetContainerPortArgs> Ports
        {
            get => _ports ?? (_ports = new List<Inputs.GetContainerPortArgs>());
            set => _ports = value;
        }

        [Input("secretAliases")]
        private List<Inputs.GetContainerSecretAliasArgs>? _secretAliases;
        public List<Inputs.GetContainerSecretAliasArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new List<Inputs.GetContainerSecretAliasArgs>());
            set => _secretAliases = value;
        }

        [Input("secretOverrides")]
        private List<Inputs.GetContainerSecretOverrideArgs>? _secretOverrides;
        public List<Inputs.GetContainerSecretOverrideArgs> SecretOverrides
        {
            get => _secretOverrides ?? (_secretOverrides = new List<Inputs.GetContainerSecretOverrideArgs>());
            set => _secretOverrides = value;
        }

        [Input("secrets")]
        private List<Inputs.GetContainerSecretArgs>? _secrets;
        public List<Inputs.GetContainerSecretArgs> Secrets
        {
            get => _secrets ?? (_secrets = new List<Inputs.GetContainerSecretArgs>());
            set => _secrets = value;
        }

        [Input("storages")]
        private List<Inputs.GetContainerStorageArgs>? _storages;
        public List<Inputs.GetContainerStorageArgs> Storages
        {
            get => _storages ?? (_storages = new List<Inputs.GetContainerStorageArgs>());
            set => _storages = value;
        }

        public GetContainerArgs()
        {
        }
        public static new GetContainerArgs Empty => new GetContainerArgs();
    }

    public sealed class GetContainerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("advancedSettingsJson")]
        public Input<string>? AdvancedSettingsJson { get; set; }

        [Input("annotationsGroupIds")]
        private InputList<string>? _annotationsGroupIds;
        public InputList<string> AnnotationsGroupIds
        {
            get => _annotationsGroupIds ?? (_annotationsGroupIds = new InputList<string>());
            set => _annotationsGroupIds = value;
        }

        [Input("arguments")]
        private InputList<string>? _arguments;
        public InputList<string> Arguments
        {
            get => _arguments ?? (_arguments = new InputList<string>());
            set => _arguments = value;
        }

        [Input("autoDeploy")]
        public Input<bool>? AutoDeploy { get; set; }

        [Input("autoPreview")]
        public Input<bool>? AutoPreview { get; set; }

        [Input("cpu")]
        public Input<int>? Cpu { get; set; }

        [Input("customDomains")]
        private InputList<Inputs.GetContainerCustomDomainInputArgs>? _customDomains;
        public InputList<Inputs.GetContainerCustomDomainInputArgs> CustomDomains
        {
            get => _customDomains ?? (_customDomains = new InputList<Inputs.GetContainerCustomDomainInputArgs>());
            set => _customDomains = value;
        }

        [Input("deploymentStageId")]
        public Input<string>? DeploymentStageId { get; set; }

        [Input("entrypoint")]
        public Input<string>? Entrypoint { get; set; }

        [Input("environmentVariableAliases")]
        private InputList<Inputs.GetContainerEnvironmentVariableAliasInputArgs>? _environmentVariableAliases;
        public InputList<Inputs.GetContainerEnvironmentVariableAliasInputArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new InputList<Inputs.GetContainerEnvironmentVariableAliasInputArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariableOverrides")]
        private InputList<Inputs.GetContainerEnvironmentVariableOverrideInputArgs>? _environmentVariableOverrides;
        public InputList<Inputs.GetContainerEnvironmentVariableOverrideInputArgs> EnvironmentVariableOverrides
        {
            get => _environmentVariableOverrides ?? (_environmentVariableOverrides = new InputList<Inputs.GetContainerEnvironmentVariableOverrideInputArgs>());
            set => _environmentVariableOverrides = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.GetContainerEnvironmentVariableInputArgs>? _environmentVariables;
        public InputList<Inputs.GetContainerEnvironmentVariableInputArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.GetContainerEnvironmentVariableInputArgs>());
            set => _environmentVariables = value;
        }

        [Input("healthchecks")]
        public Input<Inputs.GetContainerHealthchecksInputArgs>? Healthchecks { get; set; }

        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("labelsGroupIds")]
        private InputList<string>? _labelsGroupIds;
        public InputList<string> LabelsGroupIds
        {
            get => _labelsGroupIds ?? (_labelsGroupIds = new InputList<string>());
            set => _labelsGroupIds = value;
        }

        [Input("maxRunningInstances")]
        public Input<int>? MaxRunningInstances { get; set; }

        [Input("memory")]
        public Input<int>? Memory { get; set; }

        [Input("minRunningInstances")]
        public Input<int>? MinRunningInstances { get; set; }

        [Input("ports")]
        private InputList<Inputs.GetContainerPortInputArgs>? _ports;
        public InputList<Inputs.GetContainerPortInputArgs> Ports
        {
            get => _ports ?? (_ports = new InputList<Inputs.GetContainerPortInputArgs>());
            set => _ports = value;
        }

        [Input("secretAliases")]
        private InputList<Inputs.GetContainerSecretAliasInputArgs>? _secretAliases;
        public InputList<Inputs.GetContainerSecretAliasInputArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new InputList<Inputs.GetContainerSecretAliasInputArgs>());
            set => _secretAliases = value;
        }

        [Input("secretOverrides")]
        private InputList<Inputs.GetContainerSecretOverrideInputArgs>? _secretOverrides;
        public InputList<Inputs.GetContainerSecretOverrideInputArgs> SecretOverrides
        {
            get => _secretOverrides ?? (_secretOverrides = new InputList<Inputs.GetContainerSecretOverrideInputArgs>());
            set => _secretOverrides = value;
        }

        [Input("secrets")]
        private InputList<Inputs.GetContainerSecretInputArgs>? _secrets;
        public InputList<Inputs.GetContainerSecretInputArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.GetContainerSecretInputArgs>());
            set => _secrets = value;
        }

        [Input("storages")]
        private InputList<Inputs.GetContainerStorageInputArgs>? _storages;
        public InputList<Inputs.GetContainerStorageInputArgs> Storages
        {
            get => _storages ?? (_storages = new InputList<Inputs.GetContainerStorageInputArgs>());
            set => _storages = value;
        }

        public GetContainerInvokeArgs()
        {
        }
        public static new GetContainerInvokeArgs Empty => new GetContainerInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerResult
    {
        public readonly string AdvancedSettingsJson;
        public readonly ImmutableArray<string> AnnotationsGroupIds;
        public readonly ImmutableArray<string> Arguments;
        public readonly bool AutoDeploy;
        public readonly bool AutoPreview;
        public readonly ImmutableArray<Outputs.GetContainerBuiltInEnvironmentVariableResult> BuiltInEnvironmentVariables;
        public readonly int Cpu;
        public readonly ImmutableArray<Outputs.GetContainerCustomDomainResult> CustomDomains;
        public readonly string DeploymentStageId;
        public readonly string Entrypoint;
        public readonly string EnvironmentId;
        public readonly ImmutableArray<Outputs.GetContainerEnvironmentVariableAliasResult> EnvironmentVariableAliases;
        public readonly ImmutableArray<Outputs.GetContainerEnvironmentVariableOverrideResult> EnvironmentVariableOverrides;
        public readonly ImmutableArray<Outputs.GetContainerEnvironmentVariableResult> EnvironmentVariables;
        public readonly string ExternalHost;
        public readonly Outputs.GetContainerHealthchecksResult? Healthchecks;
        public readonly string Id;
        public readonly string ImageName;
        public readonly string InternalHost;
        public readonly ImmutableArray<string> LabelsGroupIds;
        public readonly int MaxRunningInstances;
        public readonly int Memory;
        public readonly int MinRunningInstances;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetContainerPortResult> Ports;
        public readonly string RegistryId;
        public readonly ImmutableArray<Outputs.GetContainerSecretAliasResult> SecretAliases;
        public readonly ImmutableArray<Outputs.GetContainerSecretOverrideResult> SecretOverrides;
        public readonly ImmutableArray<Outputs.GetContainerSecretResult> Secrets;
        public readonly ImmutableArray<Outputs.GetContainerStorageResult> Storages;
        public readonly string Tag;

        [OutputConstructor]
        private GetContainerResult(
            string advancedSettingsJson,

            ImmutableArray<string> annotationsGroupIds,

            ImmutableArray<string> arguments,

            bool autoDeploy,

            bool autoPreview,

            ImmutableArray<Outputs.GetContainerBuiltInEnvironmentVariableResult> builtInEnvironmentVariables,

            int cpu,

            ImmutableArray<Outputs.GetContainerCustomDomainResult> customDomains,

            string deploymentStageId,

            string entrypoint,

            string environmentId,

            ImmutableArray<Outputs.GetContainerEnvironmentVariableAliasResult> environmentVariableAliases,

            ImmutableArray<Outputs.GetContainerEnvironmentVariableOverrideResult> environmentVariableOverrides,

            ImmutableArray<Outputs.GetContainerEnvironmentVariableResult> environmentVariables,

            string externalHost,

            Outputs.GetContainerHealthchecksResult? healthchecks,

            string id,

            string imageName,

            string internalHost,

            ImmutableArray<string> labelsGroupIds,

            int maxRunningInstances,

            int memory,

            int minRunningInstances,

            string name,

            ImmutableArray<Outputs.GetContainerPortResult> ports,

            string registryId,

            ImmutableArray<Outputs.GetContainerSecretAliasResult> secretAliases,

            ImmutableArray<Outputs.GetContainerSecretOverrideResult> secretOverrides,

            ImmutableArray<Outputs.GetContainerSecretResult> secrets,

            ImmutableArray<Outputs.GetContainerStorageResult> storages,

            string tag)
        {
            AdvancedSettingsJson = advancedSettingsJson;
            AnnotationsGroupIds = annotationsGroupIds;
            Arguments = arguments;
            AutoDeploy = autoDeploy;
            AutoPreview = autoPreview;
            BuiltInEnvironmentVariables = builtInEnvironmentVariables;
            Cpu = cpu;
            CustomDomains = customDomains;
            DeploymentStageId = deploymentStageId;
            Entrypoint = entrypoint;
            EnvironmentId = environmentId;
            EnvironmentVariableAliases = environmentVariableAliases;
            EnvironmentVariableOverrides = environmentVariableOverrides;
            EnvironmentVariables = environmentVariables;
            ExternalHost = externalHost;
            Healthchecks = healthchecks;
            Id = id;
            ImageName = imageName;
            InternalHost = internalHost;
            LabelsGroupIds = labelsGroupIds;
            MaxRunningInstances = maxRunningInstances;
            Memory = memory;
            MinRunningInstances = minRunningInstances;
            Name = name;
            Ports = ports;
            RegistryId = registryId;
            SecretAliases = secretAliases;
            SecretOverrides = secretOverrides;
            Secrets = secrets;
            Storages = storages;
            Tag = tag;
        }
    }
}
