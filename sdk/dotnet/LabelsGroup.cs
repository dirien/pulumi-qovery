// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery
{
    /// <summary>
    /// ## # qovery.LabelsGroup (Resource)
    /// 
    /// Provides a Qovery labels group resource
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import qovery:index/labelsGroup:LabelsGroup my_qovery_labels_group "&lt;labels_group_id&gt;"
    /// ```
    /// </summary>
    [QoveryResourceType("qovery:index/labelsGroup:LabelsGroup")]
    public partial class LabelsGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// labels
        /// </summary>
        [Output("labels")]
        public Output<ImmutableArray<Outputs.LabelsGroupLabel>> Labels { get; private set; } = null!;

        /// <summary>
        /// name of the labels group
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Id of the organization.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;


        /// <summary>
        /// Create a LabelsGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LabelsGroup(string name, LabelsGroupArgs args, CustomResourceOptions? options = null)
            : base("qovery:index/labelsGroup:LabelsGroup", name, args ?? new LabelsGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LabelsGroup(string name, Input<string> id, LabelsGroupState? state = null, CustomResourceOptions? options = null)
            : base("qovery:index/labelsGroup:LabelsGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-qovery",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LabelsGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LabelsGroup Get(string name, Input<string> id, LabelsGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new LabelsGroup(name, id, state, options);
        }
    }

    public sealed class LabelsGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("labels", required: true)]
        private InputList<Inputs.LabelsGroupLabelArgs>? _labels;

        /// <summary>
        /// labels
        /// </summary>
        public InputList<Inputs.LabelsGroupLabelArgs> Labels
        {
            get => _labels ?? (_labels = new InputList<Inputs.LabelsGroupLabelArgs>());
            set => _labels = value;
        }

        /// <summary>
        /// name of the labels group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Id of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public LabelsGroupArgs()
        {
        }
        public static new LabelsGroupArgs Empty => new LabelsGroupArgs();
    }

    public sealed class LabelsGroupState : global::Pulumi.ResourceArgs
    {
        [Input("labels")]
        private InputList<Inputs.LabelsGroupLabelGetArgs>? _labels;

        /// <summary>
        /// labels
        /// </summary>
        public InputList<Inputs.LabelsGroupLabelGetArgs> Labels
        {
            get => _labels ?? (_labels = new InputList<Inputs.LabelsGroupLabelGetArgs>());
            set => _labels = value;
        }

        /// <summary>
        /// name of the labels group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Id of the organization.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public LabelsGroupState()
        {
        }
        public static new LabelsGroupState Empty => new LabelsGroupState();
    }
}
