// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery
{
    /// <summary>
    /// ## # qovery.Project (Resource)
    /// 
    /// Provides a Qovery project resource. This can be used to create and manage Qovery projects.
    /// 
    /// ## Example
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Qovery = ediri.Qovery;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myProject = new Qovery.Project("myProject", new()
    ///     {
    ///         OrganizationId = qovery_organization.My_organization.Id,
    ///         Description = "My project description",
    ///         EnvironmentVariables = new[]
    ///         {
    ///             new Qovery.Inputs.ProjectEnvironmentVariableArgs
    ///             {
    ///                 Key = "ENV_VAR_KEY",
    ///                 Value = "ENV_VAR_VALUE",
    ///             },
    ///         },
    ///         EnvironmentVariableAliases = new[]
    ///         {
    ///             new Qovery.Inputs.ProjectEnvironmentVariableAliasArgs
    ///             {
    ///                 Key = "ENV_VAR_KEY_ALIAS",
    ///                 Value = "ENV_VAR_KEY",
    ///             },
    ///         },
    ///         Secrets = new[]
    ///         {
    ///             new Qovery.Inputs.ProjectSecretArgs
    ///             {
    ///                 Key = "SECRET_KEY",
    ///                 Value = "SECRET_VALUE",
    ///             },
    ///         },
    ///         SecretAliases = new[]
    ///         {
    ///             new Qovery.Inputs.ProjectSecretAliasArgs
    ///             {
    ///                 Key = "SECRET_KEY_ALIAS",
    ///                 Value = "SECRET_KEY",
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             qovery_organization.My_organization,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import qovery:index/project:Project my_project "&lt;project_id&gt;"
    /// ```
    /// </summary>
    [QoveryResourceType("qovery:index/project:Project")]
    public partial class Project : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of built-in environment variables linked to this project.
        /// </summary>
        [Output("builtInEnvironmentVariables")]
        public Output<ImmutableArray<Outputs.ProjectBuiltInEnvironmentVariable>> BuiltInEnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// Description of the project.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of environment variable aliases linked to this project.
        /// </summary>
        [Output("environmentVariableAliases")]
        public Output<ImmutableArray<Outputs.ProjectEnvironmentVariableAlias>> EnvironmentVariableAliases { get; private set; } = null!;

        /// <summary>
        /// List of environment variables linked to this project.
        /// </summary>
        [Output("environmentVariables")]
        public Output<ImmutableArray<Outputs.ProjectEnvironmentVariable>> EnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// Name of the project.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Id of the organization.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// List of secret aliases linked to this project.
        /// </summary>
        [Output("secretAliases")]
        public Output<ImmutableArray<Outputs.ProjectSecretAlias>> SecretAliases { get; private set; } = null!;

        /// <summary>
        /// List of secrets linked to this project.
        /// </summary>
        [Output("secrets")]
        public Output<ImmutableArray<Outputs.ProjectSecret>> Secrets { get; private set; } = null!;


        /// <summary>
        /// Create a Project resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Project(string name, ProjectArgs args, CustomResourceOptions? options = null)
            : base("qovery:index/project:Project", name, args ?? new ProjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Project(string name, Input<string> id, ProjectState? state = null, CustomResourceOptions? options = null)
            : base("qovery:index/project:Project", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-qovery",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Project resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Project Get(string name, Input<string> id, ProjectState? state = null, CustomResourceOptions? options = null)
        {
            return new Project(name, id, state, options);
        }
    }

    public sealed class ProjectArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the project.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environmentVariableAliases")]
        private InputList<Inputs.ProjectEnvironmentVariableAliasArgs>? _environmentVariableAliases;

        /// <summary>
        /// List of environment variable aliases linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectEnvironmentVariableAliasArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new InputList<Inputs.ProjectEnvironmentVariableAliasArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.ProjectEnvironmentVariableArgs>? _environmentVariables;

        /// <summary>
        /// List of environment variables linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectEnvironmentVariableArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.ProjectEnvironmentVariableArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Name of the project.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Id of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("secretAliases")]
        private InputList<Inputs.ProjectSecretAliasArgs>? _secretAliases;

        /// <summary>
        /// List of secret aliases linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectSecretAliasArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new InputList<Inputs.ProjectSecretAliasArgs>());
            set => _secretAliases = value;
        }

        [Input("secrets")]
        private InputList<Inputs.ProjectSecretArgs>? _secrets;

        /// <summary>
        /// List of secrets linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectSecretArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.ProjectSecretArgs>());
            set => _secrets = value;
        }

        public ProjectArgs()
        {
        }
        public static new ProjectArgs Empty => new ProjectArgs();
    }

    public sealed class ProjectState : global::Pulumi.ResourceArgs
    {
        [Input("builtInEnvironmentVariables")]
        private InputList<Inputs.ProjectBuiltInEnvironmentVariableGetArgs>? _builtInEnvironmentVariables;

        /// <summary>
        /// List of built-in environment variables linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectBuiltInEnvironmentVariableGetArgs> BuiltInEnvironmentVariables
        {
            get => _builtInEnvironmentVariables ?? (_builtInEnvironmentVariables = new InputList<Inputs.ProjectBuiltInEnvironmentVariableGetArgs>());
            set => _builtInEnvironmentVariables = value;
        }

        /// <summary>
        /// Description of the project.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environmentVariableAliases")]
        private InputList<Inputs.ProjectEnvironmentVariableAliasGetArgs>? _environmentVariableAliases;

        /// <summary>
        /// List of environment variable aliases linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectEnvironmentVariableAliasGetArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new InputList<Inputs.ProjectEnvironmentVariableAliasGetArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.ProjectEnvironmentVariableGetArgs>? _environmentVariables;

        /// <summary>
        /// List of environment variables linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectEnvironmentVariableGetArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.ProjectEnvironmentVariableGetArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Name of the project.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Id of the organization.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("secretAliases")]
        private InputList<Inputs.ProjectSecretAliasGetArgs>? _secretAliases;

        /// <summary>
        /// List of secret aliases linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectSecretAliasGetArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new InputList<Inputs.ProjectSecretAliasGetArgs>());
            set => _secretAliases = value;
        }

        [Input("secrets")]
        private InputList<Inputs.ProjectSecretGetArgs>? _secrets;

        /// <summary>
        /// List of secrets linked to this project.
        /// </summary>
        public InputList<Inputs.ProjectSecretGetArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.ProjectSecretGetArgs>());
            set => _secrets = value;
        }

        public ProjectState()
        {
        }
        public static new ProjectState Empty => new ProjectState();
    }
}
