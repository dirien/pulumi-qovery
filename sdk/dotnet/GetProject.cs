// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery
{
    public static class GetProject
    {
        /// <summary>
        /// ## # qovery.Project (Data Source)
        /// 
        /// Provides a Qovery project resource. This can be used to create and manage Qovery projects.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Qovery = Pulumi.Qovery;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProject = Qovery.GetProject.Invoke(new()
        ///     {
        ///         Id = "&lt;project_id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("qovery:index/getProject:getProject", args ?? new GetProjectArgs(), options.WithDefaults());

        /// <summary>
        /// ## # qovery.Project (Data Source)
        /// 
        /// Provides a Qovery project resource. This can be used to create and manage Qovery projects.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Qovery = Pulumi.Qovery;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProject = Qovery.GetProject.Invoke(new()
        ///     {
        ///         Id = "&lt;project_id&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetProjectResult> Invoke(GetProjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectResult>("qovery:index/getProject:getProject", args ?? new GetProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Description of the project.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        [Input("environmentVariableAliases")]
        private List<Inputs.GetProjectEnvironmentVariableAliasArgs>? _environmentVariableAliases;

        /// <summary>
        /// List of environment variable aliases linked to this project.
        /// </summary>
        public List<Inputs.GetProjectEnvironmentVariableAliasArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new List<Inputs.GetProjectEnvironmentVariableAliasArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariables")]
        private List<Inputs.GetProjectEnvironmentVariableArgs>? _environmentVariables;

        /// <summary>
        /// List of environment variables linked to this project.
        /// </summary>
        public List<Inputs.GetProjectEnvironmentVariableArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new List<Inputs.GetProjectEnvironmentVariableArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Id of the project.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("secretAliases")]
        private List<Inputs.GetProjectSecretAliasArgs>? _secretAliases;

        /// <summary>
        /// List of secret aliases linked to this project.
        /// </summary>
        public List<Inputs.GetProjectSecretAliasArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new List<Inputs.GetProjectSecretAliasArgs>());
            set => _secretAliases = value;
        }

        [Input("secrets")]
        private List<Inputs.GetProjectSecretArgs>? _secrets;

        /// <summary>
        /// List of secrets linked to this project.
        /// </summary>
        public List<Inputs.GetProjectSecretArgs> Secrets
        {
            get => _secrets ?? (_secrets = new List<Inputs.GetProjectSecretArgs>());
            set => _secrets = value;
        }

        public GetProjectArgs()
        {
        }
        public static new GetProjectArgs Empty => new GetProjectArgs();
    }

    public sealed class GetProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Description of the project.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environmentVariableAliases")]
        private InputList<Inputs.GetProjectEnvironmentVariableAliasInputArgs>? _environmentVariableAliases;

        /// <summary>
        /// List of environment variable aliases linked to this project.
        /// </summary>
        public InputList<Inputs.GetProjectEnvironmentVariableAliasInputArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new InputList<Inputs.GetProjectEnvironmentVariableAliasInputArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.GetProjectEnvironmentVariableInputArgs>? _environmentVariables;

        /// <summary>
        /// List of environment variables linked to this project.
        /// </summary>
        public InputList<Inputs.GetProjectEnvironmentVariableInputArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.GetProjectEnvironmentVariableInputArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Id of the project.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("secretAliases")]
        private InputList<Inputs.GetProjectSecretAliasInputArgs>? _secretAliases;

        /// <summary>
        /// List of secret aliases linked to this project.
        /// </summary>
        public InputList<Inputs.GetProjectSecretAliasInputArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new InputList<Inputs.GetProjectSecretAliasInputArgs>());
            set => _secretAliases = value;
        }

        [Input("secrets")]
        private InputList<Inputs.GetProjectSecretInputArgs>? _secrets;

        /// <summary>
        /// List of secrets linked to this project.
        /// </summary>
        public InputList<Inputs.GetProjectSecretInputArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.GetProjectSecretInputArgs>());
            set => _secrets = value;
        }

        public GetProjectInvokeArgs()
        {
        }
        public static new GetProjectInvokeArgs Empty => new GetProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// List of built-in environment variables linked to this project.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectBuiltInEnvironmentVariableResult> BuiltInEnvironmentVariables;
        /// <summary>
        /// Description of the project.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of environment variable aliases linked to this project.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectEnvironmentVariableAliasResult> EnvironmentVariableAliases;
        /// <summary>
        /// List of environment variables linked to this project.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectEnvironmentVariableResult> EnvironmentVariables;
        /// <summary>
        /// Id of the project.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the project.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Id of the organization.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// List of secret aliases linked to this project.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectSecretAliasResult> SecretAliases;
        /// <summary>
        /// List of secrets linked to this project.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectSecretResult> Secrets;

        [OutputConstructor]
        private GetProjectResult(
            ImmutableArray<Outputs.GetProjectBuiltInEnvironmentVariableResult> builtInEnvironmentVariables,

            string description,

            ImmutableArray<Outputs.GetProjectEnvironmentVariableAliasResult> environmentVariableAliases,

            ImmutableArray<Outputs.GetProjectEnvironmentVariableResult> environmentVariables,

            string id,

            string name,

            string organizationId,

            ImmutableArray<Outputs.GetProjectSecretAliasResult> secretAliases,

            ImmutableArray<Outputs.GetProjectSecretResult> secrets)
        {
            BuiltInEnvironmentVariables = builtInEnvironmentVariables;
            Description = description;
            EnvironmentVariableAliases = environmentVariableAliases;
            EnvironmentVariables = environmentVariables;
            Id = id;
            Name = name;
            OrganizationId = organizationId;
            SecretAliases = secretAliases;
            Secrets = secrets;
        }
    }
}
