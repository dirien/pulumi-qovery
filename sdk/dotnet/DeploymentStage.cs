// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery
{
    /// <summary>
    /// ## # qovery.DeploymentStage (Resource)
    /// 
    /// Provides a Qovery deployment stage resource. This can be used to create and manage Qovery deployment stages.
    /// 
    /// ## Example
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Qovery = ediri.Qovery;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myDeploymentStage = new Qovery.DeploymentStage("myDeploymentStage", new()
    ///     {
    ///         EnvironmentId = qovery_environment.My_environment.Id,
    ///         Description = "",
    ///         IsAfter = qovery_deployment_stage.First_deployment_stage.Id,
    ///         IsBefore = qovery_deployment_stage.Third_deployment_stage.Id,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             qovery_environment.My_environment,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// You can find complete examples within these repositories:
    /// 
    /// * Deploy services with a specific order
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import qovery:index/deploymentStage:DeploymentStage my_deployment_stage "&lt;environment_id&gt;,&lt;deployment_stage_name&gt;"
    /// ```
    /// </summary>
    [QoveryResourceType("qovery:index/deploymentStage:DeploymentStage")]
    public partial class DeploymentStage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the deployment stage.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// Move the current deployment stage after the target deployment stage
        /// </summary>
        [Output("isAfter")]
        public Output<string?> IsAfter { get; private set; } = null!;

        /// <summary>
        /// Move the current deployment stage before the target deployment stage
        /// </summary>
        [Output("isBefore")]
        public Output<string?> IsBefore { get; private set; } = null!;

        /// <summary>
        /// Name of the deployment stage.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a DeploymentStage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DeploymentStage(string name, DeploymentStageArgs args, CustomResourceOptions? options = null)
            : base("qovery:index/deploymentStage:DeploymentStage", name, args ?? new DeploymentStageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DeploymentStage(string name, Input<string> id, DeploymentStageState? state = null, CustomResourceOptions? options = null)
            : base("qovery:index/deploymentStage:DeploymentStage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-qovery",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DeploymentStage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DeploymentStage Get(string name, Input<string> id, DeploymentStageState? state = null, CustomResourceOptions? options = null)
        {
            return new DeploymentStage(name, id, state, options);
        }
    }

    public sealed class DeploymentStageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the deployment stage.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        /// <summary>
        /// Move the current deployment stage after the target deployment stage
        /// </summary>
        [Input("isAfter")]
        public Input<string>? IsAfter { get; set; }

        /// <summary>
        /// Move the current deployment stage before the target deployment stage
        /// </summary>
        [Input("isBefore")]
        public Input<string>? IsBefore { get; set; }

        /// <summary>
        /// Name of the deployment stage.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DeploymentStageArgs()
        {
        }
        public static new DeploymentStageArgs Empty => new DeploymentStageArgs();
    }

    public sealed class DeploymentStageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the deployment stage.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        /// <summary>
        /// Move the current deployment stage after the target deployment stage
        /// </summary>
        [Input("isAfter")]
        public Input<string>? IsAfter { get; set; }

        /// <summary>
        /// Move the current deployment stage before the target deployment stage
        /// </summary>
        [Input("isBefore")]
        public Input<string>? IsBefore { get; set; }

        /// <summary>
        /// Name of the deployment stage.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DeploymentStageState()
        {
        }
        public static new DeploymentStageState Empty => new DeploymentStageState();
    }
}
