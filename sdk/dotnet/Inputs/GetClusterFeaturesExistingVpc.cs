// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery.Inputs
{

    public sealed class GetClusterFeaturesExistingVpcArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Aws VPC id
        /// </summary>
        [Input("awsVpcEksId", required: true)]
        public string AwsVpcEksId { get; set; } = null!;

        [Input("documentdbSubnetsZoneAIds", required: true)]
        private List<string>? _documentdbSubnetsZoneAIds;

        /// <summary>
        /// Ids of the subnets for document db
        /// </summary>
        public List<string> DocumentdbSubnetsZoneAIds
        {
            get => _documentdbSubnetsZoneAIds ?? (_documentdbSubnetsZoneAIds = new List<string>());
            set => _documentdbSubnetsZoneAIds = value;
        }

        [Input("documentdbSubnetsZoneBIds", required: true)]
        private List<string>? _documentdbSubnetsZoneBIds;

        /// <summary>
        /// Ids of the subnets for document db
        /// </summary>
        public List<string> DocumentdbSubnetsZoneBIds
        {
            get => _documentdbSubnetsZoneBIds ?? (_documentdbSubnetsZoneBIds = new List<string>());
            set => _documentdbSubnetsZoneBIds = value;
        }

        [Input("documentdbSubnetsZoneCIds", required: true)]
        private List<string>? _documentdbSubnetsZoneCIds;

        /// <summary>
        /// Ids of the subnets for document db
        /// </summary>
        public List<string> DocumentdbSubnetsZoneCIds
        {
            get => _documentdbSubnetsZoneCIds ?? (_documentdbSubnetsZoneCIds = new List<string>());
            set => _documentdbSubnetsZoneCIds = value;
        }

        [Input("eksSubnetsZoneAIds", required: true)]
        private List<string>? _eksSubnetsZoneAIds;

        /// <summary>
        /// Ids of the subnets for EKS zone a. Must have map_public_ip_on_launch set to true
        /// </summary>
        public List<string> EksSubnetsZoneAIds
        {
            get => _eksSubnetsZoneAIds ?? (_eksSubnetsZoneAIds = new List<string>());
            set => _eksSubnetsZoneAIds = value;
        }

        [Input("eksSubnetsZoneBIds", required: true)]
        private List<string>? _eksSubnetsZoneBIds;

        /// <summary>
        /// Ids of the subnets for EKS zone b. Must have map_public_ip_on_launch set to true
        /// </summary>
        public List<string> EksSubnetsZoneBIds
        {
            get => _eksSubnetsZoneBIds ?? (_eksSubnetsZoneBIds = new List<string>());
            set => _eksSubnetsZoneBIds = value;
        }

        [Input("eksSubnetsZoneCIds", required: true)]
        private List<string>? _eksSubnetsZoneCIds;

        /// <summary>
        /// Ids of the subnets for EKS zone c. Must have map_public_ip_on_launch set to true
        /// </summary>
        public List<string> EksSubnetsZoneCIds
        {
            get => _eksSubnetsZoneCIds ?? (_eksSubnetsZoneCIds = new List<string>());
            set => _eksSubnetsZoneCIds = value;
        }

        [Input("elasticacheSubnetsZoneAIds", required: true)]
        private List<string>? _elasticacheSubnetsZoneAIds;

        /// <summary>
        /// Ids of the subnets for elasticache
        /// </summary>
        public List<string> ElasticacheSubnetsZoneAIds
        {
            get => _elasticacheSubnetsZoneAIds ?? (_elasticacheSubnetsZoneAIds = new List<string>());
            set => _elasticacheSubnetsZoneAIds = value;
        }

        [Input("elasticacheSubnetsZoneBIds", required: true)]
        private List<string>? _elasticacheSubnetsZoneBIds;

        /// <summary>
        /// Ids of the subnets for elasticache
        /// </summary>
        public List<string> ElasticacheSubnetsZoneBIds
        {
            get => _elasticacheSubnetsZoneBIds ?? (_elasticacheSubnetsZoneBIds = new List<string>());
            set => _elasticacheSubnetsZoneBIds = value;
        }

        [Input("elasticacheSubnetsZoneCIds", required: true)]
        private List<string>? _elasticacheSubnetsZoneCIds;

        /// <summary>
        /// Ids of the subnets for elasticache
        /// </summary>
        public List<string> ElasticacheSubnetsZoneCIds
        {
            get => _elasticacheSubnetsZoneCIds ?? (_elasticacheSubnetsZoneCIds = new List<string>());
            set => _elasticacheSubnetsZoneCIds = value;
        }

        [Input("rdsSubnetsZoneAIds", required: true)]
        private List<string>? _rdsSubnetsZoneAIds;

        /// <summary>
        /// Ids of the subnets for RDS
        /// </summary>
        public List<string> RdsSubnetsZoneAIds
        {
            get => _rdsSubnetsZoneAIds ?? (_rdsSubnetsZoneAIds = new List<string>());
            set => _rdsSubnetsZoneAIds = value;
        }

        [Input("rdsSubnetsZoneBIds", required: true)]
        private List<string>? _rdsSubnetsZoneBIds;

        /// <summary>
        /// Ids of the subnets for RDS
        /// </summary>
        public List<string> RdsSubnetsZoneBIds
        {
            get => _rdsSubnetsZoneBIds ?? (_rdsSubnetsZoneBIds = new List<string>());
            set => _rdsSubnetsZoneBIds = value;
        }

        [Input("rdsSubnetsZoneCIds", required: true)]
        private List<string>? _rdsSubnetsZoneCIds;

        /// <summary>
        /// Ids of the subnets for RDS
        /// </summary>
        public List<string> RdsSubnetsZoneCIds
        {
            get => _rdsSubnetsZoneCIds ?? (_rdsSubnetsZoneCIds = new List<string>());
            set => _rdsSubnetsZoneCIds = value;
        }

        public GetClusterFeaturesExistingVpcArgs()
        {
        }
        public static new GetClusterFeaturesExistingVpcArgs Empty => new GetClusterFeaturesExistingVpcArgs();
    }
}
