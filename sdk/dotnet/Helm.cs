// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery
{
    /// <summary>
    /// ## # qovery.Helm (Resource)
    /// 
    /// Provides a Qovery helm resource. This can be used to create and manage Qovery helm registry.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import qovery:index/helm:Helm my_helm "&lt;helm_id&gt;"
    /// ```
    /// </summary>
    [QoveryResourceType("qovery:index/helm:Helm")]
    public partial class Helm : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advanced settings.
        /// </summary>
        [Output("advancedSettingsJson")]
        public Output<string> AdvancedSettingsJson { get; private set; } = null!;

        /// <summary>
        /// Allow this chart to deploy resources outside of this environment namespace (including CRDs or non-namespaced resources)
        /// </summary>
        [Output("allowClusterWideResources")]
        public Output<bool> AllowClusterWideResources { get; private set; } = null!;

        /// <summary>
        /// Helm arguments
        /// </summary>
        [Output("arguments")]
        public Output<ImmutableArray<string>> Arguments { get; private set; } = null!;

        /// <summary>
        /// Specify if service will be automatically updated on every new commit on the branch.
        /// </summary>
        [Output("autoDeploy")]
        public Output<bool> AutoDeploy { get; private set; } = null!;

        /// <summary>
        /// Specify if the environment preview option is activated or not for this helm.
        /// </summary>
        [Output("autoPreview")]
        public Output<bool> AutoPreview { get; private set; } = null!;

        /// <summary>
        /// List of built-in environment variables linked to this helm.
        /// </summary>
        [Output("builtInEnvironmentVariables")]
        public Output<ImmutableArray<Outputs.HelmBuiltInEnvironmentVariable>> BuiltInEnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// List of custom domains linked to this helm.
        /// </summary>
        [Output("customDomains")]
        public Output<ImmutableArray<Outputs.HelmCustomDomain>> CustomDomains { get; private set; } = null!;

        /// <summary>
        /// List of deployment restrictions
        /// </summary>
        [Output("deploymentRestrictions")]
        public Output<ImmutableArray<Outputs.HelmDeploymentRestriction>> DeploymentRestrictions { get; private set; } = null!;

        /// <summary>
        /// Id of the deployment stage.
        /// </summary>
        [Output("deploymentStageId")]
        public Output<string> DeploymentStageId { get; private set; } = null!;

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// List of environment variable aliases linked to this helm.
        /// </summary>
        [Output("environmentVariableAliases")]
        public Output<ImmutableArray<Outputs.HelmEnvironmentVariableAlias>> EnvironmentVariableAliases { get; private set; } = null!;

        /// <summary>
        /// List of environment variable overrides linked to this helm.
        /// </summary>
        [Output("environmentVariableOverrides")]
        public Output<ImmutableArray<Outputs.HelmEnvironmentVariableOverride>> EnvironmentVariableOverrides { get; private set; } = null!;

        /// <summary>
        /// List of environment variables linked to this helm.
        /// </summary>
        [Output("environmentVariables")]
        public Output<ImmutableArray<Outputs.HelmEnvironmentVariable>> EnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// The helm external FQDN host [NOTE: only if your helm is using a publicly accessible port].
        /// </summary>
        [Output("externalHost")]
        public Output<string> ExternalHost { get; private set; } = null!;

        /// <summary>
        /// The helm internal host.
        /// </summary>
        [Output("internalHost")]
        public Output<string> InternalHost { get; private set; } = null!;

        /// <summary>
        /// Name of the helm.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of ports linked to this helm.
        /// </summary>
        [Output("ports")]
        public Output<ImmutableDictionary<string, Outputs.HelmPorts>?> Ports { get; private set; } = null!;

        /// <summary>
        /// List of secret aliases linked to this helm.
        /// </summary>
        [Output("secretAliases")]
        public Output<ImmutableArray<Outputs.HelmSecretAlias>> SecretAliases { get; private set; } = null!;

        /// <summary>
        /// List of secret overrides linked to this helm.
        /// </summary>
        [Output("secretOverrides")]
        public Output<ImmutableArray<Outputs.HelmSecretOverride>> SecretOverrides { get; private set; } = null!;

        /// <summary>
        /// List of secrets linked to this helm.
        /// </summary>
        [Output("secrets")]
        public Output<ImmutableArray<Outputs.HelmSecret>> Secrets { get; private set; } = null!;

        /// <summary>
        /// Helm chart from a Helm repository or from a git repository
        /// </summary>
        [Output("source")]
        public Output<Outputs.HelmSource> Source { get; private set; } = null!;

        /// <summary>
        /// Helm timeout in seconds
        /// </summary>
        [Output("timeoutSec")]
        public Output<int> TimeoutSec { get; private set; } = null!;

        /// <summary>
        /// Define your own overrides to customize the helm chart behaviour.
        /// </summary>
        [Output("valuesOverride")]
        public Output<Outputs.HelmValuesOverride> ValuesOverride { get; private set; } = null!;


        /// <summary>
        /// Create a Helm resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Helm(string name, HelmArgs args, CustomResourceOptions? options = null)
            : base("qovery:index/helm:Helm", name, args ?? new HelmArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Helm(string name, Input<string> id, HelmState? state = null, CustomResourceOptions? options = null)
            : base("qovery:index/helm:Helm", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-qovery",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Helm resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Helm Get(string name, Input<string> id, HelmState? state = null, CustomResourceOptions? options = null)
        {
            return new Helm(name, id, state, options);
        }
    }

    public sealed class HelmArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced settings.
        /// </summary>
        [Input("advancedSettingsJson")]
        public Input<string>? AdvancedSettingsJson { get; set; }

        /// <summary>
        /// Allow this chart to deploy resources outside of this environment namespace (including CRDs or non-namespaced resources)
        /// </summary>
        [Input("allowClusterWideResources", required: true)]
        public Input<bool> AllowClusterWideResources { get; set; } = null!;

        [Input("arguments")]
        private InputList<string>? _arguments;

        /// <summary>
        /// Helm arguments
        /// </summary>
        public InputList<string> Arguments
        {
            get => _arguments ?? (_arguments = new InputList<string>());
            set => _arguments = value;
        }

        /// <summary>
        /// Specify if service will be automatically updated on every new commit on the branch.
        /// </summary>
        [Input("autoDeploy")]
        public Input<bool>? AutoDeploy { get; set; }

        /// <summary>
        /// Specify if the environment preview option is activated or not for this helm.
        /// </summary>
        [Input("autoPreview")]
        public Input<bool>? AutoPreview { get; set; }

        [Input("customDomains")]
        private InputList<Inputs.HelmCustomDomainArgs>? _customDomains;

        /// <summary>
        /// List of custom domains linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmCustomDomainArgs> CustomDomains
        {
            get => _customDomains ?? (_customDomains = new InputList<Inputs.HelmCustomDomainArgs>());
            set => _customDomains = value;
        }

        [Input("deploymentRestrictions")]
        private InputList<Inputs.HelmDeploymentRestrictionArgs>? _deploymentRestrictions;

        /// <summary>
        /// List of deployment restrictions
        /// </summary>
        public InputList<Inputs.HelmDeploymentRestrictionArgs> DeploymentRestrictions
        {
            get => _deploymentRestrictions ?? (_deploymentRestrictions = new InputList<Inputs.HelmDeploymentRestrictionArgs>());
            set => _deploymentRestrictions = value;
        }

        /// <summary>
        /// Id of the deployment stage.
        /// </summary>
        [Input("deploymentStageId")]
        public Input<string>? DeploymentStageId { get; set; }

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        [Input("environmentVariableAliases")]
        private InputList<Inputs.HelmEnvironmentVariableAliasArgs>? _environmentVariableAliases;

        /// <summary>
        /// List of environment variable aliases linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmEnvironmentVariableAliasArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new InputList<Inputs.HelmEnvironmentVariableAliasArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariableOverrides")]
        private InputList<Inputs.HelmEnvironmentVariableOverrideArgs>? _environmentVariableOverrides;

        /// <summary>
        /// List of environment variable overrides linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmEnvironmentVariableOverrideArgs> EnvironmentVariableOverrides
        {
            get => _environmentVariableOverrides ?? (_environmentVariableOverrides = new InputList<Inputs.HelmEnvironmentVariableOverrideArgs>());
            set => _environmentVariableOverrides = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.HelmEnvironmentVariableArgs>? _environmentVariables;

        /// <summary>
        /// List of environment variables linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmEnvironmentVariableArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.HelmEnvironmentVariableArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Name of the helm.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ports")]
        private InputMap<Inputs.HelmPortsArgs>? _ports;

        /// <summary>
        /// List of ports linked to this helm.
        /// </summary>
        public InputMap<Inputs.HelmPortsArgs> Ports
        {
            get => _ports ?? (_ports = new InputMap<Inputs.HelmPortsArgs>());
            set => _ports = value;
        }

        [Input("secretAliases")]
        private InputList<Inputs.HelmSecretAliasArgs>? _secretAliases;

        /// <summary>
        /// List of secret aliases linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmSecretAliasArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new InputList<Inputs.HelmSecretAliasArgs>());
            set => _secretAliases = value;
        }

        [Input("secretOverrides")]
        private InputList<Inputs.HelmSecretOverrideArgs>? _secretOverrides;

        /// <summary>
        /// List of secret overrides linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmSecretOverrideArgs> SecretOverrides
        {
            get => _secretOverrides ?? (_secretOverrides = new InputList<Inputs.HelmSecretOverrideArgs>());
            set => _secretOverrides = value;
        }

        [Input("secrets")]
        private InputList<Inputs.HelmSecretArgs>? _secrets;

        /// <summary>
        /// List of secrets linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmSecretArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.HelmSecretArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Helm chart from a Helm repository or from a git repository
        /// </summary>
        [Input("source", required: true)]
        public Input<Inputs.HelmSourceArgs> Source { get; set; } = null!;

        /// <summary>
        /// Helm timeout in seconds
        /// </summary>
        [Input("timeoutSec")]
        public Input<int>? TimeoutSec { get; set; }

        /// <summary>
        /// Define your own overrides to customize the helm chart behaviour.
        /// </summary>
        [Input("valuesOverride", required: true)]
        public Input<Inputs.HelmValuesOverrideArgs> ValuesOverride { get; set; } = null!;

        public HelmArgs()
        {
        }
        public static new HelmArgs Empty => new HelmArgs();
    }

    public sealed class HelmState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced settings.
        /// </summary>
        [Input("advancedSettingsJson")]
        public Input<string>? AdvancedSettingsJson { get; set; }

        /// <summary>
        /// Allow this chart to deploy resources outside of this environment namespace (including CRDs or non-namespaced resources)
        /// </summary>
        [Input("allowClusterWideResources")]
        public Input<bool>? AllowClusterWideResources { get; set; }

        [Input("arguments")]
        private InputList<string>? _arguments;

        /// <summary>
        /// Helm arguments
        /// </summary>
        public InputList<string> Arguments
        {
            get => _arguments ?? (_arguments = new InputList<string>());
            set => _arguments = value;
        }

        /// <summary>
        /// Specify if service will be automatically updated on every new commit on the branch.
        /// </summary>
        [Input("autoDeploy")]
        public Input<bool>? AutoDeploy { get; set; }

        /// <summary>
        /// Specify if the environment preview option is activated or not for this helm.
        /// </summary>
        [Input("autoPreview")]
        public Input<bool>? AutoPreview { get; set; }

        [Input("builtInEnvironmentVariables")]
        private InputList<Inputs.HelmBuiltInEnvironmentVariableGetArgs>? _builtInEnvironmentVariables;

        /// <summary>
        /// List of built-in environment variables linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmBuiltInEnvironmentVariableGetArgs> BuiltInEnvironmentVariables
        {
            get => _builtInEnvironmentVariables ?? (_builtInEnvironmentVariables = new InputList<Inputs.HelmBuiltInEnvironmentVariableGetArgs>());
            set => _builtInEnvironmentVariables = value;
        }

        [Input("customDomains")]
        private InputList<Inputs.HelmCustomDomainGetArgs>? _customDomains;

        /// <summary>
        /// List of custom domains linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmCustomDomainGetArgs> CustomDomains
        {
            get => _customDomains ?? (_customDomains = new InputList<Inputs.HelmCustomDomainGetArgs>());
            set => _customDomains = value;
        }

        [Input("deploymentRestrictions")]
        private InputList<Inputs.HelmDeploymentRestrictionGetArgs>? _deploymentRestrictions;

        /// <summary>
        /// List of deployment restrictions
        /// </summary>
        public InputList<Inputs.HelmDeploymentRestrictionGetArgs> DeploymentRestrictions
        {
            get => _deploymentRestrictions ?? (_deploymentRestrictions = new InputList<Inputs.HelmDeploymentRestrictionGetArgs>());
            set => _deploymentRestrictions = value;
        }

        /// <summary>
        /// Id of the deployment stage.
        /// </summary>
        [Input("deploymentStageId")]
        public Input<string>? DeploymentStageId { get; set; }

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        [Input("environmentVariableAliases")]
        private InputList<Inputs.HelmEnvironmentVariableAliasGetArgs>? _environmentVariableAliases;

        /// <summary>
        /// List of environment variable aliases linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmEnvironmentVariableAliasGetArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new InputList<Inputs.HelmEnvironmentVariableAliasGetArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariableOverrides")]
        private InputList<Inputs.HelmEnvironmentVariableOverrideGetArgs>? _environmentVariableOverrides;

        /// <summary>
        /// List of environment variable overrides linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmEnvironmentVariableOverrideGetArgs> EnvironmentVariableOverrides
        {
            get => _environmentVariableOverrides ?? (_environmentVariableOverrides = new InputList<Inputs.HelmEnvironmentVariableOverrideGetArgs>());
            set => _environmentVariableOverrides = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.HelmEnvironmentVariableGetArgs>? _environmentVariables;

        /// <summary>
        /// List of environment variables linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmEnvironmentVariableGetArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.HelmEnvironmentVariableGetArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// The helm external FQDN host [NOTE: only if your helm is using a publicly accessible port].
        /// </summary>
        [Input("externalHost")]
        public Input<string>? ExternalHost { get; set; }

        /// <summary>
        /// The helm internal host.
        /// </summary>
        [Input("internalHost")]
        public Input<string>? InternalHost { get; set; }

        /// <summary>
        /// Name of the helm.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ports")]
        private InputMap<Inputs.HelmPortsGetArgs>? _ports;

        /// <summary>
        /// List of ports linked to this helm.
        /// </summary>
        public InputMap<Inputs.HelmPortsGetArgs> Ports
        {
            get => _ports ?? (_ports = new InputMap<Inputs.HelmPortsGetArgs>());
            set => _ports = value;
        }

        [Input("secretAliases")]
        private InputList<Inputs.HelmSecretAliasGetArgs>? _secretAliases;

        /// <summary>
        /// List of secret aliases linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmSecretAliasGetArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new InputList<Inputs.HelmSecretAliasGetArgs>());
            set => _secretAliases = value;
        }

        [Input("secretOverrides")]
        private InputList<Inputs.HelmSecretOverrideGetArgs>? _secretOverrides;

        /// <summary>
        /// List of secret overrides linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmSecretOverrideGetArgs> SecretOverrides
        {
            get => _secretOverrides ?? (_secretOverrides = new InputList<Inputs.HelmSecretOverrideGetArgs>());
            set => _secretOverrides = value;
        }

        [Input("secrets")]
        private InputList<Inputs.HelmSecretGetArgs>? _secrets;

        /// <summary>
        /// List of secrets linked to this helm.
        /// </summary>
        public InputList<Inputs.HelmSecretGetArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.HelmSecretGetArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Helm chart from a Helm repository or from a git repository
        /// </summary>
        [Input("source")]
        public Input<Inputs.HelmSourceGetArgs>? Source { get; set; }

        /// <summary>
        /// Helm timeout in seconds
        /// </summary>
        [Input("timeoutSec")]
        public Input<int>? TimeoutSec { get; set; }

        /// <summary>
        /// Define your own overrides to customize the helm chart behaviour.
        /// </summary>
        [Input("valuesOverride")]
        public Input<Inputs.HelmValuesOverrideGetArgs>? ValuesOverride { get; set; }

        public HelmState()
        {
        }
        public static new HelmState Empty => new HelmState();
    }
}
