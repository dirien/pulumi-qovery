// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Qovery
{
    /// <summary>
    /// ## # qovery.Job (Resource)
    /// 
    /// Provides a Qovery job resource. This can be used to create and manage Qovery job registry.
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import qovery:index/job:Job my_job "&lt;job_id&gt;"
    /// ```
    /// </summary>
    [QoveryResourceType("qovery:index/job:Job")]
    public partial class Job : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advanced settings.
        /// </summary>
        [Output("advancedSettingsJson")]
        public Output<string> AdvancedSettingsJson { get; private set; } = null!;

        /// <summary>
        /// Specify if the job will be automatically updated after receiving a new image tag.
        /// </summary>
        [Output("autoDeploy")]
        public Output<bool> AutoDeploy { get; private set; } = null!;

        /// <summary>
        /// Specify if the environment preview option is activated or not for this job.
        /// </summary>
        [Output("autoPreview")]
        public Output<bool> AutoPreview { get; private set; } = null!;

        /// <summary>
        /// List of built-in environment variables linked to this job.
        /// </summary>
        [Output("builtInEnvironmentVariables")]
        public Output<ImmutableArray<Outputs.JobBuiltInEnvironmentVariable>> BuiltInEnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `&gt;= 10`. - Default: `500`.
        /// </summary>
        [Output("cpu")]
        public Output<int> Cpu { get; private set; } = null!;

        /// <summary>
        /// List of deployment restrictions
        /// </summary>
        [Output("deploymentRestrictions")]
        public Output<ImmutableArray<Outputs.JobDeploymentRestriction>> DeploymentRestrictions { get; private set; } = null!;

        /// <summary>
        /// Id of the deployment stage.
        /// </summary>
        [Output("deploymentStageId")]
        public Output<string> DeploymentStageId { get; private set; } = null!;

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// List of environment variable aliases linked to this job.
        /// </summary>
        [Output("environmentVariableAliases")]
        public Output<ImmutableArray<Outputs.JobEnvironmentVariableAlias>> EnvironmentVariableAliases { get; private set; } = null!;

        /// <summary>
        /// List of environment variable overrides linked to this job.
        /// </summary>
        [Output("environmentVariableOverrides")]
        public Output<ImmutableArray<Outputs.JobEnvironmentVariableOverride>> EnvironmentVariableOverrides { get; private set; } = null!;

        /// <summary>
        /// List of environment variables linked to this job.
        /// </summary>
        [Output("environmentVariables")]
        public Output<ImmutableArray<Outputs.JobEnvironmentVariable>> EnvironmentVariables { get; private set; } = null!;

        /// <summary>
        /// The job external FQDN host [NOTE: only if your job is using a publicly accessible port].
        /// </summary>
        [Output("externalHost")]
        public Output<string> ExternalHost { get; private set; } = null!;

        /// <summary>
        /// Configuration for the healthchecks that are going to be executed against your service
        /// </summary>
        [Output("healthchecks")]
        public Output<Outputs.JobHealthchecks> Healthchecks { get; private set; } = null!;

        /// <summary>
        /// The job internal host.
        /// </summary>
        [Output("internalHost")]
        public Output<string> InternalHost { get; private set; } = null!;

        /// <summary>
        /// Job's max duration in seconds. - Must be: `&gt;= 0`. - Default: `300`.
        /// </summary>
        [Output("maxDurationSeconds")]
        public Output<int> MaxDurationSeconds { get; private set; } = null!;

        /// <summary>
        /// Job's max number of restarts. - Must be: `&gt;= 0`. - Default: `0`.
        /// </summary>
        [Output("maxNbRestart")]
        public Output<int> MaxNbRestart { get; private set; } = null!;

        /// <summary>
        /// RAM of the job in MB [1024MB = 1GB]. - Must be: `&gt;= 1`. - Default: `512`.
        /// </summary>
        [Output("memory")]
        public Output<int> Memory { get; private set; } = null!;

        /// <summary>
        /// Name of the job.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Job's probes port. - Must be: `&gt;= 1` and `&lt;= 65535`.
        /// </summary>
        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        /// <summary>
        /// Job's schedule.
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.JobSchedule> Schedule { get; private set; } = null!;

        /// <summary>
        /// List of secret aliases linked to this job.
        /// </summary>
        [Output("secretAliases")]
        public Output<ImmutableArray<Outputs.JobSecretAlias>> SecretAliases { get; private set; } = null!;

        /// <summary>
        /// List of secret overrides linked to this job.
        /// </summary>
        [Output("secretOverrides")]
        public Output<ImmutableArray<Outputs.JobSecretOverride>> SecretOverrides { get; private set; } = null!;

        /// <summary>
        /// List of secrets linked to this job.
        /// </summary>
        [Output("secrets")]
        public Output<ImmutableArray<Outputs.JobSecret>> Secrets { get; private set; } = null!;

        /// <summary>
        /// Job's source.
        /// </summary>
        [Output("source")]
        public Output<Outputs.JobSource?> Source { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("qovery:index/job:Job", name, args ?? new JobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
            : base("qovery:index/job:Job", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-qovery",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
        {
            return new Job(name, id, state, options);
        }
    }

    public sealed class JobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced settings.
        /// </summary>
        [Input("advancedSettingsJson")]
        public Input<string>? AdvancedSettingsJson { get; set; }

        /// <summary>
        /// Specify if the job will be automatically updated after receiving a new image tag.
        /// </summary>
        [Input("autoDeploy")]
        public Input<bool>? AutoDeploy { get; set; }

        /// <summary>
        /// Specify if the environment preview option is activated or not for this job.
        /// </summary>
        [Input("autoPreview")]
        public Input<bool>? AutoPreview { get; set; }

        /// <summary>
        /// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `&gt;= 10`. - Default: `500`.
        /// </summary>
        [Input("cpu")]
        public Input<int>? Cpu { get; set; }

        [Input("deploymentRestrictions")]
        private InputList<Inputs.JobDeploymentRestrictionArgs>? _deploymentRestrictions;

        /// <summary>
        /// List of deployment restrictions
        /// </summary>
        public InputList<Inputs.JobDeploymentRestrictionArgs> DeploymentRestrictions
        {
            get => _deploymentRestrictions ?? (_deploymentRestrictions = new InputList<Inputs.JobDeploymentRestrictionArgs>());
            set => _deploymentRestrictions = value;
        }

        /// <summary>
        /// Id of the deployment stage.
        /// </summary>
        [Input("deploymentStageId")]
        public Input<string>? DeploymentStageId { get; set; }

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        [Input("environmentVariableAliases")]
        private InputList<Inputs.JobEnvironmentVariableAliasArgs>? _environmentVariableAliases;

        /// <summary>
        /// List of environment variable aliases linked to this job.
        /// </summary>
        public InputList<Inputs.JobEnvironmentVariableAliasArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new InputList<Inputs.JobEnvironmentVariableAliasArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariableOverrides")]
        private InputList<Inputs.JobEnvironmentVariableOverrideArgs>? _environmentVariableOverrides;

        /// <summary>
        /// List of environment variable overrides linked to this job.
        /// </summary>
        public InputList<Inputs.JobEnvironmentVariableOverrideArgs> EnvironmentVariableOverrides
        {
            get => _environmentVariableOverrides ?? (_environmentVariableOverrides = new InputList<Inputs.JobEnvironmentVariableOverrideArgs>());
            set => _environmentVariableOverrides = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.JobEnvironmentVariableArgs>? _environmentVariables;

        /// <summary>
        /// List of environment variables linked to this job.
        /// </summary>
        public InputList<Inputs.JobEnvironmentVariableArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.JobEnvironmentVariableArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Configuration for the healthchecks that are going to be executed against your service
        /// </summary>
        [Input("healthchecks", required: true)]
        public Input<Inputs.JobHealthchecksArgs> Healthchecks { get; set; } = null!;

        /// <summary>
        /// Job's max duration in seconds. - Must be: `&gt;= 0`. - Default: `300`.
        /// </summary>
        [Input("maxDurationSeconds")]
        public Input<int>? MaxDurationSeconds { get; set; }

        /// <summary>
        /// Job's max number of restarts. - Must be: `&gt;= 0`. - Default: `0`.
        /// </summary>
        [Input("maxNbRestart")]
        public Input<int>? MaxNbRestart { get; set; }

        /// <summary>
        /// RAM of the job in MB [1024MB = 1GB]. - Must be: `&gt;= 1`. - Default: `512`.
        /// </summary>
        [Input("memory")]
        public Input<int>? Memory { get; set; }

        /// <summary>
        /// Name of the job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Job's probes port. - Must be: `&gt;= 1` and `&lt;= 65535`.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Job's schedule.
        /// </summary>
        [Input("schedule", required: true)]
        public Input<Inputs.JobScheduleArgs> Schedule { get; set; } = null!;

        [Input("secretAliases")]
        private InputList<Inputs.JobSecretAliasArgs>? _secretAliases;

        /// <summary>
        /// List of secret aliases linked to this job.
        /// </summary>
        public InputList<Inputs.JobSecretAliasArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new InputList<Inputs.JobSecretAliasArgs>());
            set => _secretAliases = value;
        }

        [Input("secretOverrides")]
        private InputList<Inputs.JobSecretOverrideArgs>? _secretOverrides;

        /// <summary>
        /// List of secret overrides linked to this job.
        /// </summary>
        public InputList<Inputs.JobSecretOverrideArgs> SecretOverrides
        {
            get => _secretOverrides ?? (_secretOverrides = new InputList<Inputs.JobSecretOverrideArgs>());
            set => _secretOverrides = value;
        }

        [Input("secrets")]
        private InputList<Inputs.JobSecretArgs>? _secrets;

        /// <summary>
        /// List of secrets linked to this job.
        /// </summary>
        public InputList<Inputs.JobSecretArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.JobSecretArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Job's source.
        /// </summary>
        [Input("source")]
        public Input<Inputs.JobSourceArgs>? Source { get; set; }

        public JobArgs()
        {
        }
        public static new JobArgs Empty => new JobArgs();
    }

    public sealed class JobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced settings.
        /// </summary>
        [Input("advancedSettingsJson")]
        public Input<string>? AdvancedSettingsJson { get; set; }

        /// <summary>
        /// Specify if the job will be automatically updated after receiving a new image tag.
        /// </summary>
        [Input("autoDeploy")]
        public Input<bool>? AutoDeploy { get; set; }

        /// <summary>
        /// Specify if the environment preview option is activated or not for this job.
        /// </summary>
        [Input("autoPreview")]
        public Input<bool>? AutoPreview { get; set; }

        [Input("builtInEnvironmentVariables")]
        private InputList<Inputs.JobBuiltInEnvironmentVariableGetArgs>? _builtInEnvironmentVariables;

        /// <summary>
        /// List of built-in environment variables linked to this job.
        /// </summary>
        public InputList<Inputs.JobBuiltInEnvironmentVariableGetArgs> BuiltInEnvironmentVariables
        {
            get => _builtInEnvironmentVariables ?? (_builtInEnvironmentVariables = new InputList<Inputs.JobBuiltInEnvironmentVariableGetArgs>());
            set => _builtInEnvironmentVariables = value;
        }

        /// <summary>
        /// CPU of the job in millicores (m) [1000m = 1 CPU]. - Must be: `&gt;= 10`. - Default: `500`.
        /// </summary>
        [Input("cpu")]
        public Input<int>? Cpu { get; set; }

        [Input("deploymentRestrictions")]
        private InputList<Inputs.JobDeploymentRestrictionGetArgs>? _deploymentRestrictions;

        /// <summary>
        /// List of deployment restrictions
        /// </summary>
        public InputList<Inputs.JobDeploymentRestrictionGetArgs> DeploymentRestrictions
        {
            get => _deploymentRestrictions ?? (_deploymentRestrictions = new InputList<Inputs.JobDeploymentRestrictionGetArgs>());
            set => _deploymentRestrictions = value;
        }

        /// <summary>
        /// Id of the deployment stage.
        /// </summary>
        [Input("deploymentStageId")]
        public Input<string>? DeploymentStageId { get; set; }

        /// <summary>
        /// Id of the environment.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        [Input("environmentVariableAliases")]
        private InputList<Inputs.JobEnvironmentVariableAliasGetArgs>? _environmentVariableAliases;

        /// <summary>
        /// List of environment variable aliases linked to this job.
        /// </summary>
        public InputList<Inputs.JobEnvironmentVariableAliasGetArgs> EnvironmentVariableAliases
        {
            get => _environmentVariableAliases ?? (_environmentVariableAliases = new InputList<Inputs.JobEnvironmentVariableAliasGetArgs>());
            set => _environmentVariableAliases = value;
        }

        [Input("environmentVariableOverrides")]
        private InputList<Inputs.JobEnvironmentVariableOverrideGetArgs>? _environmentVariableOverrides;

        /// <summary>
        /// List of environment variable overrides linked to this job.
        /// </summary>
        public InputList<Inputs.JobEnvironmentVariableOverrideGetArgs> EnvironmentVariableOverrides
        {
            get => _environmentVariableOverrides ?? (_environmentVariableOverrides = new InputList<Inputs.JobEnvironmentVariableOverrideGetArgs>());
            set => _environmentVariableOverrides = value;
        }

        [Input("environmentVariables")]
        private InputList<Inputs.JobEnvironmentVariableGetArgs>? _environmentVariables;

        /// <summary>
        /// List of environment variables linked to this job.
        /// </summary>
        public InputList<Inputs.JobEnvironmentVariableGetArgs> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputList<Inputs.JobEnvironmentVariableGetArgs>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// The job external FQDN host [NOTE: only if your job is using a publicly accessible port].
        /// </summary>
        [Input("externalHost")]
        public Input<string>? ExternalHost { get; set; }

        /// <summary>
        /// Configuration for the healthchecks that are going to be executed against your service
        /// </summary>
        [Input("healthchecks")]
        public Input<Inputs.JobHealthchecksGetArgs>? Healthchecks { get; set; }

        /// <summary>
        /// The job internal host.
        /// </summary>
        [Input("internalHost")]
        public Input<string>? InternalHost { get; set; }

        /// <summary>
        /// Job's max duration in seconds. - Must be: `&gt;= 0`. - Default: `300`.
        /// </summary>
        [Input("maxDurationSeconds")]
        public Input<int>? MaxDurationSeconds { get; set; }

        /// <summary>
        /// Job's max number of restarts. - Must be: `&gt;= 0`. - Default: `0`.
        /// </summary>
        [Input("maxNbRestart")]
        public Input<int>? MaxNbRestart { get; set; }

        /// <summary>
        /// RAM of the job in MB [1024MB = 1GB]. - Must be: `&gt;= 1`. - Default: `512`.
        /// </summary>
        [Input("memory")]
        public Input<int>? Memory { get; set; }

        /// <summary>
        /// Name of the job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Job's probes port. - Must be: `&gt;= 1` and `&lt;= 65535`.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Job's schedule.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.JobScheduleGetArgs>? Schedule { get; set; }

        [Input("secretAliases")]
        private InputList<Inputs.JobSecretAliasGetArgs>? _secretAliases;

        /// <summary>
        /// List of secret aliases linked to this job.
        /// </summary>
        public InputList<Inputs.JobSecretAliasGetArgs> SecretAliases
        {
            get => _secretAliases ?? (_secretAliases = new InputList<Inputs.JobSecretAliasGetArgs>());
            set => _secretAliases = value;
        }

        [Input("secretOverrides")]
        private InputList<Inputs.JobSecretOverrideGetArgs>? _secretOverrides;

        /// <summary>
        /// List of secret overrides linked to this job.
        /// </summary>
        public InputList<Inputs.JobSecretOverrideGetArgs> SecretOverrides
        {
            get => _secretOverrides ?? (_secretOverrides = new InputList<Inputs.JobSecretOverrideGetArgs>());
            set => _secretOverrides = value;
        }

        [Input("secrets")]
        private InputList<Inputs.JobSecretGetArgs>? _secrets;

        /// <summary>
        /// List of secrets linked to this job.
        /// </summary>
        public InputList<Inputs.JobSecretGetArgs> Secrets
        {
            get => _secrets ?? (_secrets = new InputList<Inputs.JobSecretGetArgs>());
            set => _secrets = value;
        }

        /// <summary>
        /// Job's source.
        /// </summary>
        [Input("source")]
        public Input<Inputs.JobSourceGetArgs>? Source { get; set; }

        public JobState()
        {
        }
        public static new JobState Empty => new JobState();
    }
}
